(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~mainmenu-lazy-module~scorm-lazy-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/core/features/mainmenu/pages/menu/menu.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/core/features/mainmenu/pages/menu/menu.html ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-tabs #mainTabs [hidden]=\"!showTabs\" [class]=\"'placement-' + tabsPlacement\"\r\n    [class.tabshidden]=\"!isMainScreen && tabsPlacement == 'bottom'\" (ionTabsDidChange)=\"tabChanged($event)\">\r\n    <ion-tab-bar slot=\"bottom\" class=\"mainmenu-tabs\" [@menuVisibilityAnimation]=\"visibility\">\r\n        <ion-spinner *ngIf=\"!loaded\" [attr.aria-label]=\"'core.loading' | translate\"></ion-spinner>\r\n\r\n        <core-user-menu-button *ngIf=\"loaded && tabsPlacement == 'side'\" [alwaysShow]=\"true\"></core-user-menu-button>\r\n\r\n        <ion-tab-button *ngFor=\"let tab of tabs\" (keydown)=\"tabAction.keyDown(tab.page, $event)\" (keyup)=\"tabAction.keyUp(tab.page, $event)\"\r\n            [hidden]=\"!loaded && tab.hide\" [tab]=\"tab.page\" [disabled]=\"tab.hide\" layout=\"label-hide\" class=\"{{tab.class}}\"\r\n            [selected]=\"tab.page === selectedTab\" [tabindex]=\"selectedTab == tab.page ? 0 : -1\" [attr.aria-controls]=\"tab.id\">\r\n            <ion-icon class=\"core-tab-icon\" [name]=\"tab.icon\" aria-hidden=\"true\"></ion-icon>\r\n            <ion-label aria-hidden=\"true\">{{ tab.title | translate }}</ion-label>\r\n            <ion-badge class=\"core-tab-badge\" *ngIf=\"tab.badge\" aria-hidden=\"true\">{{ tab.badge }}</ion-badge>\r\n            <span class=\"sr-only\">{{ tab.title | translate }}</span>\r\n            <span *ngIf=\"tab.badge && tab.badgeA11yText\" class=\"sr-only\">\r\n                {{ tab.badgeA11yText | translate: {$a : tab.badge } }}\r\n            </span>\r\n        </ion-tab-button>\r\n\r\n        <ion-tab-button (keydown)=\"tabAction.keyDown(morePageName, $event)\" (keyup)=\"tabAction.keyUp(morePageName, $event)\"\r\n            [hidden]=\"!loaded\" [tab]=\"morePageName\" layout=\"label-hide\" [tabindex]=\"selectedTab == morePageName ? 0 : -1\"\r\n            [attr.aria-controls]=\"morePageName\">\r\n            <ion-icon class=\"core-tab-icon\" name=\"ellipsis-horizontal\" aria-hidden=\"true\"></ion-icon>\r\n            <ion-label aria-hidden=\"true\">{{ 'core.more' | translate }}</ion-label>\r\n            <span class=\"sr-only\">{{ 'core.more' | translate }}</span>\r\n            <ion-icon *ngIf=\"moreBadge\" class=\"core-tab-badge\" name=\"fas-circle\" aria-hidden=\"true\"></ion-icon>\r\n        </ion-tab-button>\r\n    </ion-tab-bar>\r\n</ion-tabs>\r\n<div class=\"core-network-message\" [hidden]=\"!showTabs\">\r\n    <div class=\"core-online-message\">\r\n        {{ \"core.youreonline\" | translate }}\r\n    </div>\r\n    <div class=\"core-offline-message\">\r\n        {{ \"core.youreoffline\" | translate }}\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "./src/core/features/mainmenu/pages/menu/menu.scss":
/*!*********************************************************!*\
  !*** ./src/core/features/mainmenu/pages/menu/menu.scss ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/**\n * App Global variables SCSS\n * ----------------------------------------------------------------------------\n * Place here the different files you should import to use global variables.\n */\n/**\n * Imported ionic string functions for SCSS\n * ----------------------------------------------------------------------------\n * Extracted from\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\n */\n/**\n * Imported ionic color functions for SCSS\n * ----------------------------------------------------------------------------\n * Extracted from\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\n */\n/**\n * Imported ionic mixins for SCSS\n * ----------------------------------------------------------------------------\n * Extracted from\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\n */\n/**\n * Imported ionic mixins for SCSS from different components\n * ----------------------------------------------------------------------------\n * Extracted from\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\n */\n/**\n * App custom mixins for SCSS\n * ----------------------------------------------------------------------------\n * Place here our custom mixins.\n */\n/**\n * Same as item-push-svg-url but admits flip-rtl\n */\n/*\n * App Custom App variables SCSS\n * ----------------------------------------------------------------------------\n * Place here all custom app variables.\n */\n/*\n * App Global variables SCSS\n * ----------------------------------------------------------------------------\n * Place here all global variables.\n */\n/**\n * Layout Breakpoints\n *\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\n */\n:host {\n  --network-margin-bottom: 0px;\n  --network-message-background: transparent;\n  --network-message-offline: none;\n  --network-message-online: none;\n  --network-message-height: 16px;\n}\n:host ion-tabs {\n  --menutabbar-size: var(--bottom-tabs-size);\n}\n:host ion-tabs.placement-side {\n  --menutabbar-size: var(--side-tabs-size);\n}\n:host-context(.core-online) .core-network-message,\n:host-context(.core-offline) .core-network-message {\n  visibility: visible;\n  height: var(--network-message-height);\n  line-height: var(--network-message-height);\n  padding-bottom: calc(var(--ion-safe-area-bottom, 0px) + var(--network-message-height));\n}\n:host-context(.core-online) {\n  --network-margin-bottom: 8px;\n  --network-message-background: var(--success);\n  --network-message-online: block;\n}\n:host-context(.core-offline) {\n  --network-margin-bottom: 8px;\n  --network-message-background: var(--danger);\n  --network-message-offline: block;\n}\nion-tab-bar {\n  height: var(--menutabbar-size);\n}\nion-tab-bar core-user-menu-button {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\nion-tab-bar ion-tab-button.tab-selected {\n  background: var(--background-selected);\n}\nion-tab-bar ion-tab-button ion-icon.core-tab-icon {\n  text-overflow: unset;\n  overflow: visible;\n  text-align: center;\n  font-size: 24px;\n}\nion-tab-bar ion-tab-button ion-badge.core-tab-badge {\n  font-size: 12px;\n  font-weight: bold;\n  border-radius: 10px;\n  padding-left: 6px;\n  padding-right: 6px;\n  line-height: 14px;\n  --background: var(--core-bottom-tabs-badge-color);\n  --color: var(--core-bottom-tabs-badge-text-color);\n}\nion-tab-bar ion-tab-button ion-icon.core-tab-badge {\n  color: var(--core-bottom-tabs-badge-color);\n  padding: 3px 6px 2px;\n  left: calc(50% + 6px);\n  top: 8px;\n  min-width: 12px;\n  font-size: 8px;\n  font-weight: normal;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\n[dir=rtl] ion-tab-bar ion-tab-button ion-icon.core-tab-badge, :host-context([dir=rtl]) ion-tab-bar ion-tab-button ion-icon.core-tab-badge {\n  left: unset;\n  right: unset;\n  right: calc(50% + 6px);\n}\nion-tabs.placement-bottom ion-tab-button ion-icon.core-tab-icon {\n  margin-bottom: var(--network-margin-bottom);\n  transition: margin 500ms ease-in-out, transform 300ms ease-in-out;\n}\nion-tabs.placement-bottom ion-tab-button ion-icon.core-tab-badge,\nion-tabs.placement-bottom ion-tab-button ion-badge.core-tab-badge {\n  top: 8px;\n}\nion-tabs.placement-bottom.tabshidden ion-tab-bar {\n  pointer-events: none;\n}\nion-tabs.placement-bottom.tabshidden ion-tab-bar ion-tab-button {\n  height: auto;\n}\nion-tabs.placement-side {\n  flex-direction: row;\n}\nion-tabs.placement-side ion-tab-bar {\n  order: -1;\n  width: var(--menutabbar-size);\n  height: calc(100% - var(--ion-safe-area-top) - var(--ion-safe-area-bottom));\n  flex-direction: column;\n  border-right: var(--border);\n  border-top: 0;\n  justify-content: flex-start;\n  padding-left: var(--ion-safe-area-left);\n  padding-right: 0px;\n  padding-top: var(--ion-safe-area-top);\n  padding-bottom: var(--ion-safe-area-bottom);\n}\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\n  ion-tabs.placement-side ion-tab-bar {\n    border-right: unset;\n    -webkit-border-end: var(--border);\n    border-inline-end: var(--border);\n  }\n}\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\n  ion-tabs.placement-side ion-tab-bar {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: var(--ion-safe-area-left);\n    padding-inline-start: var(--ion-safe-area-left);\n    -webkit-padding-end: 0px;\n    padding-inline-end: 0px;\n  }\n}\nion-tabs.placement-side ion-tab-bar ion-tab-button {\n  --padding-start: 0;\n  --padding-end: 0;\n}\nion-tabs.placement-side ion-tab-bar ion-tab-button ion-badge.core-tab-badge {\n  left: auto;\n  right: 1px;\n}\n[dir=rtl] ion-tabs.placement-side ion-tab-bar ion-tab-button ion-badge.core-tab-badge, :host-context([dir=rtl]) ion-tabs.placement-side ion-tab-bar ion-tab-button ion-badge.core-tab-badge {\n  left: unset;\n  right: unset;\n  left: 1px;\n  right: auto;\n}\nion-tabs.placement-side ion-tab-bar ion-tab-button, ion-tabs.placement-side ion-tab-bar core-user-menu-button {\n  width: 100%;\n  min-height: var(--menutabbar-size);\n  flex: 0;\n}\nion-tabs.placement-side ion-tab-bar ion-tab-button ion-icon.core-tab-badge,\nion-tabs.placement-side ion-tab-bar ion-tab-button ion-badge.core-tab-badge, ion-tabs.placement-side ion-tab-bar core-user-menu-button ion-icon.core-tab-badge,\nion-tabs.placement-side ion-tab-bar core-user-menu-button ion-badge.core-tab-badge {\n  top: calc(50% - 20px);\n}\n.core-network-message {\n  background: var(--network-message-background);\n  pointer-events: none;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding-left: 10px;\n  padding-right: 10px;\n  text-align: center;\n  color: white;\n  visibility: hidden;\n  height: 0;\n  transition: all 500ms ease-in-out;\n  opacity: 0.8;\n  z-index: 12;\n  font-size: 12px;\n}\n.core-network-message .core-online-message {\n  display: var(--network-message-online);\n}\n.core-network-message .core-offline-message {\n  display: var(--network-message-offline);\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/core/features/mainmenu/pages/menu/menu.ts":
/*!*******************************************************!*\
  !*** ./src/core/features/mainmenu/pages/menu/menu.ts ***!
  \*******************************************************/
/*! exports provided: CoreMainMenuPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreMainMenuPage", function() { return CoreMainMenuPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _singletons_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @singletons/events */ "./src/core/singletons/events.ts");
/* harmony import */ var _services_mainmenu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/mainmenu */ "./src/core/features/mainmenu/services/mainmenu.ts");
/* harmony import */ var _services_mainmenu_delegate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/mainmenu-delegate */ "./src/core/features/mainmenu/services/mainmenu-delegate.ts");
/* harmony import */ var _singletons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @singletons */ "./src/core/singletons/index.ts");
/* harmony import */ var _services_utils_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services/utils/utils */ "./src/core/services/utils/utils.ts");
/* harmony import */ var _classes_aria_role_tab__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @classes/aria-role-tab */ "./src/core/classes/aria-role-tab.ts");
/* harmony import */ var _services_navigator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services/navigator */ "./src/core/services/navigator.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/__ivy_ngcc__/fesm2015/animations.js");
/* harmony import */ var _services_sites__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @services/sites */ "./src/core/services/sites.ts");
/* harmony import */ var _singletons_dom__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @singletons/dom */ "./src/core/singletons/dom.ts");
/* harmony import */ var _singletons_logger__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @singletons/logger */ "./src/core/singletons/logger.ts");
/* harmony import */ var _services_platform__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @services/platform */ "./src/core/services/platform.ts");
// (C) Copyright 2015 Moodle Pty Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
















const ANIMATION_DURATION = 500;
/**
 * Page that displays the main menu of the app.
 */
let CoreMainMenuPage = class CoreMainMenuPage {
    constructor() {
        this.tabs = [];
        this.loaded = false;
        this.showTabs = false;
        this.tabsPlacement = 'bottom';
        this.morePageName = _services_mainmenu__WEBPACK_IMPORTED_MODULE_3__["CoreMainMenuProvider"].MORE_PAGE_NAME;
        this.isMainScreen = false;
        this.moreBadge = false;
        this.visibility = 'hidden';
        this.selectHistory = [];
        this.backButtonFunction = (event) => this.backButtonClicked(event);
        this.tabAction = new CoreMainMenuRoleTab(this);
        this.logger = _singletons_logger__WEBPACK_IMPORTED_MODULE_14__["CoreLogger"].getInstance('CoreMainMenuPage');
        // Listen navigation events to show or hide tabs.
        this.navSubscription = _singletons__WEBPACK_IMPORTED_MODULE_5__["Router"].events
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_10__["NavigationEnd"]))
            .subscribe(() => {
            var _a;
            this.isMainScreen = !((_a = this.mainTabs) === null || _a === void 0 ? void 0 : _a.outlet.canGoBack());
            this.updateVisibility();
        });
    }
    /**
     * @inheritdoc
     */
    ngOnInit() {
        var _a;
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            this.showTabs = true;
            this.urlToOpen = _services_navigator__WEBPACK_IMPORTED_MODULE_8__["CoreNavigator"].getRouteParam('urlToOpen');
            this.redirectPath = _services_navigator__WEBPACK_IMPORTED_MODULE_8__["CoreNavigator"].getRouteParam('redirectPath');
            this.redirectOptions = _services_navigator__WEBPACK_IMPORTED_MODULE_8__["CoreNavigator"].getRouteParam('redirectOptions');
            this.isMainScreen = !((_a = this.mainTabs) === null || _a === void 0 ? void 0 : _a.outlet.canGoBack());
            this.updateVisibility();
            this.subscription = _services_mainmenu_delegate__WEBPACK_IMPORTED_MODULE_4__["CoreMainMenuDelegate"].getHandlersObservable().subscribe((handlers) => {
                const previousHandlers = this.allHandlers;
                this.allHandlers = handlers;
                this.updateHandlers(previousHandlers);
            });
            this.badgeUpdateObserver = _singletons_events__WEBPACK_IMPORTED_MODULE_2__["CoreEvents"].on(_services_mainmenu__WEBPACK_IMPORTED_MODULE_3__["CoreMainMenuProvider"].MAIN_MENU_HANDLER_BADGE_UPDATED, (data) => {
                if (data.siteId == _services_sites__WEBPACK_IMPORTED_MODULE_12__["CoreSites"].getCurrentSiteId()) {
                    this.updateMoreBadge();
                }
            });
            this.resizeListener = _singletons_dom__WEBPACK_IMPORTED_MODULE_13__["CoreDom"].onWindowResize(() => {
                this.updateHandlers();
            });
            document.addEventListener('ionBackButton', this.backButtonFunction);
            if (_services_platform__WEBPACK_IMPORTED_MODULE_15__["CorePlatform"].isIOS()) {
                // In iOS, the resize event is triggered before the keyboard is opened/closed and not triggered again once done.
                // Init handlers again once keyboard is closed since the resize event doesn't have the updated height.
                this.keyboardObserver = _singletons_events__WEBPACK_IMPORTED_MODULE_2__["CoreEvents"].on(_singletons_events__WEBPACK_IMPORTED_MODULE_2__["CoreEvents"].KEYBOARD_CHANGE, (kbHeight) => {
                    if (kbHeight === 0) {
                        this.updateHandlers();
                        // If the device is slow it can take a bit more to update the window height. Retry in a few ms.
                        setTimeout(() => {
                            this.updateHandlers();
                        }, 250);
                    }
                });
            }
            _singletons_events__WEBPACK_IMPORTED_MODULE_2__["CoreEvents"].trigger(_singletons_events__WEBPACK_IMPORTED_MODULE_2__["CoreEvents"].MAIN_HOME_LOADED);
        });
    }
    /**
     * Update handlers on change (size or handlers).
     *
     * @param previousHandlers Previous handlers (if they haave just been updated).
     */
    updateHandlers(previousHandlers) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            if (!this.allHandlers) {
                return;
            }
            this.tabsPlacement = _services_mainmenu__WEBPACK_IMPORTED_MODULE_3__["CoreMainMenu"].getTabPlacement();
            this.updateVisibility();
            const handlers = this.allHandlers
                .filter((handler) => !handler.onlyInMore)
                .slice(0, _services_mainmenu__WEBPACK_IMPORTED_MODULE_3__["CoreMainMenu"].getNumItems()); // Get main handlers.
            // Re-build the list of tabs. If a handler is already in the list, use existing object to prevent re-creating the tab.
            const newTabs = [];
            for (let i = 0; i < handlers.length; i++) {
                const handler = handlers[i];
                // Check if the handler is already in the tabs list. If so, use it.
                const tab = this.tabs.find((tab) => tab.page == handler.page);
                tab ? tab.hide = false : null;
                handler.hide = false;
                handler.id = handler.id || 'core-mainmenu-' + _services_utils_utils__WEBPACK_IMPORTED_MODULE_6__["CoreUtils"].getUniqueId('CoreMainMenuPage');
                newTabs.push(tab || handler);
            }
            this.tabs = newTabs;
            // Sort them by priority so new handlers are in the right position.
            this.tabs.sort((a, b) => (b.priority || 0) - (a.priority || 0));
            this.updateMoreBadge();
            let removedHandlersPages = [];
            if (previousHandlers) {
                const allHandlers = this.allHandlers;
                removedHandlersPages = previousHandlers.map(handler => handler.page)
                    .filter(page => !allHandlers.some(handler => handler.page === page));
            }
            const mainMenuTab = _services_navigator__WEBPACK_IMPORTED_MODULE_8__["CoreNavigator"].getCurrentMainMenuTab();
            this.loaded = _services_mainmenu_delegate__WEBPACK_IMPORTED_MODULE_4__["CoreMainMenuDelegate"].areHandlersLoaded();
            if (this.loaded && (!mainMenuTab || removedHandlersPages.includes(mainMenuTab))) {
                // No tab selected or handler no longer available, select the first one.
                yield _services_utils_utils__WEBPACK_IMPORTED_MODULE_6__["CoreUtils"].nextTick();
                const tabPage = this.tabs[0] ? this.tabs[0].page : this.morePageName;
                const tabPageParams = this.tabs[0] ? this.tabs[0].pageParams : {};
                this.logger.debug(`Select first tab: ${tabPage}.`, this.tabs);
                // Use navigate instead of mainTabs.select to be able to pass page params.
                _services_navigator__WEBPACK_IMPORTED_MODULE_8__["CoreNavigator"].navigateToSitePath(tabPage, {
                    preferCurrentTab: false,
                    params: Object.assign({ urlToOpen: this.urlToOpen, redirectPath: this.redirectPath, redirectOptions: this.redirectOptions }, tabPageParams),
                });
            }
        });
    }
    /**
     * Check all non visible tab handlers for any badge text or number.
     */
    updateMoreBadge() {
        if (!this.allHandlers) {
            return;
        }
        // Calculate the main handlers not to display them in this view.
        const mainHandlers = this.allHandlers
            .filter((handler) => !handler.onlyInMore)
            .slice(0, _services_mainmenu__WEBPACK_IMPORTED_MODULE_3__["CoreMainMenu"].getNumItems());
        // Use only the handlers that don't appear in the main view.
        this.moreBadge = this.allHandlers.some((handler) => mainHandlers.indexOf(handler) == -1 && !!handler.badge);
    }
    /**
     * @inheritdoc
     */
    ngOnDestroy() {
        var _a, _b, _c, _d, _e;
        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
        (_b = this.navSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();
        document.removeEventListener('ionBackButton', this.backButtonFunction);
        (_c = this.keyboardObserver) === null || _c === void 0 ? void 0 : _c.off();
        (_d = this.badgeUpdateObserver) === null || _d === void 0 ? void 0 : _d.off();
        (_e = this.resizeListener) === null || _e === void 0 ? void 0 : _e.off();
    }
    /**
     * Selected tab has changed.
     *
     * @param event Event.
     */
    tabChanged(event) {
        var _a;
        this.selectedTab = event.tab;
        this.firstSelectedTab = (_a = this.firstSelectedTab) !== null && _a !== void 0 ? _a : event.tab;
        this.selectHistory.push(event.tab);
    }
    /**
     * Update menu visibility.
     */
    updateVisibility() {
        const visibility = this.tabsPlacement == 'side' ? '' : (this.isMainScreen ? 'visible' : 'hidden');
        if (visibility === this.visibility) {
            return;
        }
        this.visibility = visibility;
        this.notifyVisibilityUpdated();
    }
    /**
     * Back button clicked.
     *
     * @param event Event.
     */
    backButtonClicked(event) {
        // Use a priority lower than 0 (navigation).
        event.detail.register(-10, (processNextHandler) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            var _a, _b;
            // This callback can be called at the same time as Ionic's back navigation callback.
            // Check if user is already at the root of a tab.
            const isMainMenuRoot = yield this.currentRouteIsMainMenuRoot();
            if (!isMainMenuRoot) {
                return; // Not at root level, let Ionic handle the navigation.
            }
            // No back navigation, already at root level. Check if we should change tab.
            if (this.selectHistory.length > 1) {
                // The previous page in history is not the last one, we need the previous one.
                const previousTab = this.selectHistory[this.selectHistory.length - 2];
                // Remove curent and previous tabs from history.
                this.selectHistory = this.selectHistory.filter((tab) => this.selectedTab != tab && previousTab != tab);
                (_a = this.mainTabs) === null || _a === void 0 ? void 0 : _a.select(previousTab);
                return;
            }
            if (this.firstSelectedTab && this.selectedTab != this.firstSelectedTab) {
                // All history is gone but we are not in the first selected tab.
                this.selectHistory = [];
                (_b = this.mainTabs) === null || _b === void 0 ? void 0 : _b.select(this.firstSelectedTab);
                return;
            }
            processNextHandler();
        }));
    }
    /**
     * Check if current route is the root of the current main menu tab.
     *
     * @returns Promise.
     */
    currentRouteIsMainMenuRoot() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            // Check if the current route is the root of the current main menu tab.
            return !!_services_navigator__WEBPACK_IMPORTED_MODULE_8__["CoreNavigator"].getCurrentRoute({ routeData: { mainMenuTabRoot: _services_navigator__WEBPACK_IMPORTED_MODULE_8__["CoreNavigator"].getCurrentMainMenuTab() } });
        });
    }
    /**
     * Notify that the menu visibility has been updated.
     */
    notifyVisibilityUpdated() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            yield _services_utils_utils__WEBPACK_IMPORTED_MODULE_6__["CoreUtils"].nextTick();
            yield _services_utils_utils__WEBPACK_IMPORTED_MODULE_6__["CoreUtils"].wait(ANIMATION_DURATION);
            yield _services_utils_utils__WEBPACK_IMPORTED_MODULE_6__["CoreUtils"].nextTick();
            _singletons_events__WEBPACK_IMPORTED_MODULE_2__["CoreEvents"].trigger(_services_mainmenu__WEBPACK_IMPORTED_MODULE_3__["CoreMainMenuProvider"].MAIN_MENU_VISIBILITY_UPDATED);
        });
    }
};
CoreMainMenuPage.ctorParameters = () => [];
CoreMainMenuPage.propDecorators = {
    mainTabs: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"], args: ['mainTabs',] }]
};
CoreMainMenuPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'page-core-mainmenu',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./menu.html */ "./node_modules/raw-loader/dist/cjs.js!./src/core/features/mainmenu/pages/menu/menu.html")).default,
        animations: [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["trigger"])('menuVisibilityAnimation', [
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["state"])('hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["style"])({
                    height: 0,
                    visibility: 'hidden',
                    transform: 'translateY(100%)',
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["style"])({
                    visibility: 'visible',
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["transition"])('visible => hidden', [
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["style"])({ transform: 'translateY(0)' }),
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["animate"])(`${ANIMATION_DURATION}ms ease-in-out`, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["style"])({ transform: 'translateY(100%)' })),
                ]),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["transition"])('hidden => visible', [
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["style"])({ transform: 'translateY(100%)', visibility: 'visible', height: '*' }),
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["animate"])(`${ANIMATION_DURATION}ms ease-in-out`, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_11__["style"])({ transform: 'translateY(0)' })),
                ]),
            ])
        ],
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./menu.scss */ "./src/core/features/mainmenu/pages/menu/menu.scss")).default]
    })
], CoreMainMenuPage);

/**
 * Helper class to manage rol tab.
 */
class CoreMainMenuRoleTab extends _classes_aria_role_tab__WEBPACK_IMPORTED_MODULE_7__["CoreAriaRoleTab"] {
    /**
     * @inheritdoc
     */
    getSelectableTabs() {
        const allTabs = this.componentInstance.tabs.filter((tab) => !tab.hide).map((tab) => ({
            id: tab.id || tab.page,
            findIndex: tab.page,
        }));
        allTabs.push({
            id: this.componentInstance.morePageName,
            findIndex: this.componentInstance.morePageName,
        });
        return allTabs;
    }
    /**
     * @inheritdoc
     */
    isHorizontal() {
        return this.componentInstance.tabsPlacement == 'bottom';
    }
    /**
     * @inheritdoc
     */
    selectTab(tabId) {
        var _a;
        (_a = this.componentInstance.mainTabs) === null || _a === void 0 ? void 0 : _a.select(tabId);
    }
}


/***/ })

}]);
//# sourceMappingURL=default~mainmenu-lazy-module~scorm-lazy-module.js.map