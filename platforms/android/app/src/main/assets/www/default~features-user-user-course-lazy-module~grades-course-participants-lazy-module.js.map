{"version":3,"sources":["./src/core/features/user/pages/participants/participants.html","./src/core/features/user/classes/participants-source.ts","./src/core/features/user/pages/participants/participants.module.ts","./src/core/features/user/pages/participants/participants.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,mTAAoP,oCAAoC,0hDAA0hD,wBAAwB,0IAA0I,4CAA4C,sGAAsG,8CAA8C,+IAA+I,4BAA4B,iOAAiO,iCAAiC,gGAAgG,wCAAwC,qGAAqG,4BAA4B,u4BAAu4B,E;;;;;;;;;;;;ACAhuH;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAGoE;AAEJ;AAEjG;;GAEG;AACI,MAAM,0BAA2B,SAAQ,kHAAgE;IAc5G,YAAY,QAAgB,EAAE,cAA6B,IAAI;QAC3D,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAjBD;;OAEG;IACH,MAAM,CAAC,WAAW,CAAC,QAAgB,EAAE,cAA6B,IAAI;QAClE,WAAW,GAAG,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,WAAW,CAAC;QAEzC,OAAO,gBAAgB,QAAQ,IAAI,WAAW,EAAE,CAAC;IACrD,CAAC;IAYD;;OAEG;IACH,WAAW,CAAC,IAAwC;QAChD,OAAO,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,kBAAkB;QACd,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED;;OAEG;IACa,aAAa,CAAC,IAAY;;YACtC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,MAAM,uDAAQ,CAAC,kBAAkB,CACnE,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,YAAY,EACjB,IAAI,EACJ,IAAI,EACJ,+DAAgB,CAAC,uBAAuB,CAC3C,CAAC;gBAEF,OAAO;oBACH,KAAK,EAAE,YAAY;oBACnB,YAAY,EAAE,WAAW;iBAC5B,CAAC;aACL;YAED,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,MAAM,uDAAQ,CAAC,eAAe,CAChE,IAAI,CAAC,SAAS,EACd,IAAI,GAAG,+DAAgB,CAAC,uBAAuB,EAC/C,+DAAgB,CAAC,uBAAuB,CAC3C,CAAC;YAEF,OAAO;gBACH,KAAK,EAAE,YAAY;gBACnB,YAAY,EAAE,WAAW;aAC5B,CAAC;QACN,CAAC;KAAA;IAED;;OAEG;IACO,aAAa;QACnB,OAAO,+DAAgB,CAAC,uBAAuB,CAAC;IACpD,CAAC;CAEJ;;;;;;;;;;;;;AC/FD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AAEe;AAEO;AAC4B;IAW9E,8BAA8B,SAA9B,8BAA8B;CAAG;AAAjC,8BAA8B;IAT1C,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,oEAAgB;YAChB,wGAA0B;SAC7B;QACD,YAAY,EAAE;YACV,2EAAwB;SAC3B;KACJ,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;AC9B3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAEsD;AAG/C;AACW;AACC;AACgC;AACT;AACgB;AACzC;AACsC;AAC8B;AAC1C;AACpC;AAExC;;GAEG;IAKU,wBAAwB,sCAAxB,wBAAwB;IAWjC;QAPA,gBAAW,GAAkB,IAAI,CAAC;QAClC,qBAAgB,GAAG,KAAK,CAAC;QACzB,kBAAa,GAAG,KAAK,CAAC;QACtB,gCAA2B,GAAG,KAAK,CAAC;QAKhC,IAAI;YACA,IAAI,CAAC,QAAQ,GAAG,iEAAa,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;YACtE,IAAI,CAAC,YAAY,GAAG,IAAI,2BAA2B,CAC/C,oIAAoC,CAAC,iBAAiB,CAAC,qGAA0B,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACnG,0BAAwB,CAC3B,CAAC;SACL;QAAC,OAAO,KAAK,EAAE;YACZ,gEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAEnC,iEAAa,CAAC,IAAI,EAAE,CAAC;YAErB,OAAO;SACV;IAEL,CAAC;IAED;;OAEG;IACG,QAAQ;;YACV,IAAI,CAAC,aAAa,GAAG,MAAM,qEAAQ,CAAC,2BAA2B,EAAE,CAAC;QACtE,CAAC;KAAA;IAED;;OAEG;IACG,eAAe;;YACjB,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;YACtC,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC;KAAA;IAED;;OAEG;IACG,eAAe;;YACjB,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QACpC,CAAC;KAAA;IAED;;OAEG;IACH,WAAW;QACP,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAED;;OAEG;IACG,WAAW;;YACb,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC3B,oBAAoB;gBACpB,OAAO;aACV;YAED,MAAM,SAAS,GAAG,oIAAoC,CAAC,iBAAiB,CAAC,qGAA0B,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEtH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAEvC,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC1C,CAAC;KAAA;IAED;;;;OAIG;IACG,MAAM,CAAC,KAAa;;YACtB,qDAAO,CAAC,aAAa,EAAE,CAAC;YAExB,MAAM,SAAS,GAAG,oIAAoC,CAAC,iBAAiB,CACpE,qGAA0B,EAC1B,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CACzB,CAAC;YAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAEvC,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAEtC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAClC,CAAC;KAAA;IAED;;;;OAIG;IACG,mBAAmB,CAAC,SAAuB;;YAC7C,MAAM,+DAAS,CAAC,YAAY,CAAC,qEAAQ,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjF,MAAM,+DAAS,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;YAE3D,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,GAAG;QAC1B,CAAC;KAAA;IAED;;;;OAIG;IACG,qBAAqB,CAAC,QAAoB;;YAC5C,IAAI;gBACA,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;aACvC;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,iCAAiC,CAAC,CAAC;gBAE7E,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;aAC3C;YAED,QAAQ,EAAE,CAAC;QACf,CAAC;KAAA;IAED;;OAEG;IACW,wBAAwB;;YAClC,IAAI;gBACA,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;aACtC;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,4BAA4B,CAAC,CAAC;gBAExE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;aAC7B;QACL,CAAC;KAAA;IAED;;;;OAIG;IACW,iBAAiB,CAAC,MAAe;;YAC3C,MAAM;gBACF,CAAC,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBAClC,CAAC,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAErC,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QAC7C,CAAC;KAAA;CAEJ;;;wBA/II,uDAAS,SAAC,wFAAsB;;AATxB,wBAAwB;IAJpC,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,iPAAgC;KACnC,CAAC;GACW,wBAAwB,CAwJpC;AAxJoC;AA0JrC;;GAEG;AACH,MAAM,2BAA4B,SAAQ,iGAAoF;IAE1H;;OAEG;IACa,WAAW;;YACvB,MAAM,+DAAS,CAAC,YAAY,CAAC,qEAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;YAEvF,kEAAa,CAAC,QAAQ,CAAC;gBACnB,IAAI,EAAE,2EAAsB,CAAC,cAAc;gBAC3C,EAAE,EAAE,0BAA0B;gBAC9B,IAAI,EAAE,sDAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC;gBACjD,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE;gBAChE,GAAG,EAAE,sBAAsB,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE;aAC1D,CAAC,CAAC;QACP,CAAC;KAAA;CAEJ","file":"default~features-user-user-course-lazy-module~grades-course-participants-lazy-module.js","sourcesContent":["export default \"<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!participants.loaded || searchInProgress\\\" (ionRefresh)=\\\"refreshParticipants($event.target)\\\">\\r\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n        </ion-refresher>\\r\\n\\r\\n        <core-search-box [disabled]=\\\"searchInProgress\\\" [spellcheck]=\\\"false\\\" [lengthCheck]=\\\"1\\\" autocorrect=\\\"off\\\"\\r\\n            searchArea=\\\"CoreUserParticipants\\\" (onSubmit)=\\\"search($event)\\\" (onClear)=\\\"clearSearch()\\\">\\r\\n        </core-search-box>\\r\\n\\r\\n        <core-loading [hideUntil]=\\\"participants.loaded\\\">\\r\\n            <core-empty-box *ngIf=\\\"participants.empty && !searchInProgress && !searchQuery\\\" icon=\\\"far-user\\\"\\r\\n                [message]=\\\"'core.user.noparticipants' | translate\\\">\\r\\n            </core-empty-box>\\r\\n\\r\\n            <core-empty-box *ngIf=\\\"participants.empty && !searchInProgress && searchQuery\\\" icon=\\\"fas-magnifying-glass\\\"\\r\\n                [message]=\\\"'core.noresults' | translate\\\">\\r\\n            </core-empty-box>\\r\\n\\r\\n            <ion-list *ngIf=\\\"!participants.empty\\\">\\r\\n                <ion-item *ngFor=\\\"let participant of participants.items\\\" class=\\\"ion-text-wrap\\\"\\r\\n                    [attr.aria-current]=\\\"participants.getItemAriaCurrent(participant)\\\" [attr.aria-label]=\\\"participant.fullname\\\"\\r\\n                    (click)=\\\"participants.select(participant)\\\" button detail=\\\"true\\\">\\r\\n\\r\\n                    <core-user-avatar [user]=\\\"participant\\\" [linkProfile]=\\\"false\\\" [checkOnline]=\\\"true\\\" slot=\\\"start\\\">\\r\\n                    </core-user-avatar>\\r\\n\\r\\n                    <ion-label>\\r\\n                        <ng-container *ngIf=\\\"!searchQuery\\\">\\r\\n                            <p class=\\\"item-heading\\\">{{ participant.fullname }}</p>\\r\\n                            <p *ngIf=\\\"participant.lastcourseaccess !== undefined\\\">\\r\\n                                <strong>{{ 'core.user.lastcourseaccess' | translate }}: </strong>\\r\\n                                <ng-container *ngIf=\\\"participant.lastcourseaccess\\\">{{ participant.lastcourseaccess | coreTimeAgo }}\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\\"!participant.lastcourseaccess\\\">{{ 'core.never' | translate }}</ng-container>\\r\\n                            </p>\\r\\n                            <p *ngIf=\\\"participant.lastcourseaccess === undefined && participant.lastaccess !== undefined\\\">\\r\\n                                <strong>{{ 'core.lastaccess' | translate }}: </strong>\\r\\n                                <ng-container *ngIf=\\\"participant.lastaccess\\\">{{ participant.lastaccess | coreTimeAgo }}</ng-container>\\r\\n                                <ng-container *ngIf=\\\"!participant.lastaccess\\\">{{ 'core.never' | translate }}</ng-container>\\r\\n                            </p>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <ng-container *ngIf=\\\"searchQuery\\\">\\r\\n                            <p class=\\\"item-heading\\\">\\r\\n                                <core-format-text [text]=\\\"participant.fullname\\\" [highlight]=\\\"searchQuery\\\" [filter]=\\\"false\\\">\\r\\n                                </core-format-text>\\r\\n                            </p>\\r\\n                        </ng-container>\\r\\n                    </ion-label>\\r\\n\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n            <core-infinite-loading [enabled]=\\\"participants.loaded && !participants.completed\\\" (action)=\\\"fetchMoreParticipants($event)\\\"\\r\\n                [error]=\\\"fetchMoreParticipantsFailed\\\">\\r\\n            </core-infinite-loading>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Params } from '@angular/router';\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\n\nimport { CoreUser, CoreUserData, CoreUserParticipant, CoreUserProvider } from '../services/user';\n\n/**\n * Provides a collection of course participants.\n */\nexport class CoreUserParticipantsSource extends CoreRoutedItemsManagerSource<CoreUserParticipant | CoreUserData> {\n\n    /**\n     * @inheritdoc\n     */\n    static getSourceId(courseId: number, searchQuery: string | null = null): string {\n        searchQuery = searchQuery ?? '__empty__';\n\n        return `participants-${courseId}-${searchQuery}`;\n    }\n\n    readonly COURSE_ID: number;\n    readonly SEARCH_QUERY: string | null;\n\n    constructor(courseId: number, searchQuery: string | null = null) {\n        super();\n\n        this.COURSE_ID = courseId;\n        this.SEARCH_QUERY = searchQuery;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(user: CoreUserParticipant | CoreUserData): string {\n        return user.id.toString();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemQueryParams(): Params {\n        return { search: this.SEARCH_QUERY };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(page: number): Promise<{ items: (CoreUserParticipant | CoreUserData)[]; hasMoreItems: boolean }> {\n        if (this.SEARCH_QUERY) {\n            const { participants, canLoadMore } = await CoreUser.searchParticipants(\n                this.COURSE_ID,\n                this.SEARCH_QUERY,\n                true,\n                page,\n                CoreUserProvider.PARTICIPANTS_LIST_LIMIT,\n            );\n\n            return {\n                items: participants,\n                hasMoreItems: canLoadMore,\n            };\n        }\n\n        const { participants, canLoadMore } = await CoreUser.getParticipants(\n            this.COURSE_ID,\n            page * CoreUserProvider.PARTICIPANTS_LIST_LIMIT,\n            CoreUserProvider.PARTICIPANTS_LIST_LIMIT,\n        );\n\n        return {\n            items: participants,\n            hasMoreItems: canLoadMore,\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getPageLength(): number {\n        return CoreUserProvider.PARTICIPANTS_LIST_LIMIT;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\n\nimport { CoreSharedModule } from '@/core/shared.module';\n\nimport { CoreUserParticipantsPage } from './participants.page';\nimport { CoreSearchComponentsModule } from '@features/search/components/components.module';\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n        CoreSearchComponentsModule,\n    ],\n    declarations: [\n        CoreUserParticipantsPage,\n    ],\n})\nexport class CoreUserParticipantsPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreApp } from '@services/app';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreUser, CoreUserParticipant, CoreUserData } from '@features/user/services/user';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreUserParticipantsSource } from '@features/user/classes/participants-source';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\n\n/**\n * Page that displays the list of course participants.\n */\n@Component({\n    selector: 'page-core-user-participants',\n    templateUrl: 'participants.html',\n})\nexport class CoreUserParticipantsPage implements OnInit, AfterViewInit, OnDestroy {\n\n    courseId!: number;\n    participants!: CoreUserParticipantsManager;\n    searchQuery: string | null = null;\n    searchInProgress = false;\n    searchEnabled = false;\n    fetchMoreParticipantsFailed = false;\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    constructor() {\n        try {\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.participants = new CoreUserParticipantsManager(\n                CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreUserParticipantsSource, [this.courseId]),\n                CoreUserParticipantsPage,\n            );\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.searchEnabled = await CoreUser.canSearchParticipantsInSite();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.fetchInitialParticipants();\n        await this.participants.start(this.splitView);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ionViewDidEnter(): Promise<void> {\n        await this.participants.start();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.participants.destroy();\n    }\n\n    /**\n     * Clear search.\n     */\n    async clearSearch(): Promise<void> {\n        if (this.searchQuery === null) {\n            // Nothing to clear.\n            return;\n        }\n\n        const newSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreUserParticipantsSource, [this.courseId]);\n\n        this.searchQuery = null;\n        this.searchInProgress = false;\n        this.participants.setSource(newSource);\n\n        await this.fetchInitialParticipants();\n    }\n\n    /**\n     * Start a new search.\n     *\n     * @param query Text to search for.\n     */\n    async search(query: string): Promise<void> {\n        CoreApp.closeKeyboard();\n\n        const newSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n            CoreUserParticipantsSource,\n            [this.courseId, query],\n        );\n\n        this.searchInProgress = true;\n        this.searchQuery = query;\n        this.participants.setSource(newSource);\n\n        await this.fetchInitialParticipants();\n\n        this.searchInProgress = false;\n    }\n\n    /**\n     * Refresh participants.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshParticipants(refresher: IonRefresher): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreUser.invalidateParticipantsList(this.courseId));\n        await CoreUtils.ignoreErrors(this.fetchParticipants(true));\n\n        refresher?.complete();\n    }\n\n    /**\n     * Load a new batch of participants.\n     *\n     * @param complete Completion callback.\n     */\n    async fetchMoreParticipants(complete: () => void): Promise<void> {\n        try {\n            await this.fetchParticipants(false);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading more participants');\n\n            this.fetchMoreParticipantsFailed = true;\n        }\n\n        complete();\n    }\n\n    /**\n     * Obtain the initial batch of participants.\n     */\n    private async fetchInitialParticipants(): Promise<void> {\n        try {\n            await this.fetchParticipants(true);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading participants');\n\n            this.participants.reset();\n        }\n    }\n\n    /**\n     * Update the list of participants.\n     *\n     * @param reload Whether to reload the list or load the next page.\n     */\n    private async fetchParticipants(reload: boolean): Promise<void> {\n        reload\n            ? await this.participants.reload()\n            : await this.participants.load();\n\n        this.fetchMoreParticipantsFailed = false;\n    }\n\n}\n\n/**\n * Helper to manage the list of participants.\n */\nclass CoreUserParticipantsManager extends CoreListItemsManager<CoreUserParticipant | CoreUserData, CoreUserParticipantsSource> {\n\n    /**\n     * @inheritdoc\n     */\n    protected async logActivity(): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreUser.logParticipantsView(this.getSource().COURSE_ID));\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n            ws: 'core_user_view_user_list',\n            name: Translate.instant('core.user.participants'),\n            data: { courseid: this.getSource().COURSE_ID, category: 'user' },\n            url: `/user/index.php?id=${this.getSource().COURSE_ID}`,\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///"}