{"version":3,"sources":["./src/addons/mod/quiz/pages/attempt/attempt.html","./src/addons/mod/quiz/pages/index/index.html","./src/addons/mod/quiz/pages/player/player.html","./src/addons/mod/quiz/pages/review/review.html","./src/addons/mod/quiz/classes/auto-save.ts","./src/addons/mod/quiz/pages/attempt/attempt.ts","./src/addons/mod/quiz/pages/index/index.ts","./src/addons/mod/quiz/pages/player/player.scss","./src/addons/mod/quiz/pages/player/player.ts","./src/addons/mod/quiz/pages/review/review.scss","./src/addons/mod/quiz/pages/review/review.ts","./src/addons/mod/quiz/quiz-lazy.module.ts"],"names":[],"mappings":"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","file":"quiz-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text *ngIf=\\\"quiz\\\" [text]=\\\"quiz.name\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"quiz.coursemodule\\\"\\r\\n                    [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-list *ngIf=\\\"attempt\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.attemptnumber' | translate }}</p>\\r\\n                    <p *ngIf=\\\"attempt.preview\\\">{{ 'addon.mod_quiz.preview' | translate }}</p>\\r\\n                    <p *ngIf=\\\"!attempt.preview\\\">{{ attempt.attempt }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.attemptstate' | translate }}</p>\\r\\n                    <p *ngFor=\\\"let sentence of attempt.readableState\\\">{{ sentence }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"quiz!.showMarkColumn && attempt.readableMark !== ''\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.marks' | translate }} / {{ quiz!.sumGradesFormatted }}</p>\\r\\n                    <p>{{ attempt.readableMark }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"quiz!.showGradeColumn && attempt.readableGrade !== ''\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.grade' | translate }} / {{ quiz!.gradeFormatted }}</p>\\r\\n                    <p>{{ attempt.readableGrade }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"quiz!.showFeedbackColumn && feedback\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.feedback' | translate }}</p>\\r\\n                    <p>\\r\\n                        <core-format-text [component]=\\\"component\\\" [componentId]=\\\"componentId\\\" [text]=\\\"feedback\\\" contextLevel=\\\"module\\\"\\r\\n                            [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n                        </core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap core-danger-item\\\" *ngIf=\\\"!showReviewColumn\\\">\\r\\n                <ion-label>\\r\\n                    <p>{{ 'addon.mod_quiz.noreviewattempt' | translate }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n\\r\\n        <div collapsible-footer appearOnBottom *ngIf=\\\"loaded && attempt && showReviewColumn && attempt.finished\\\" slot=\\\"fixed\\\">\\r\\n            <div class=\\\"list-item-limited-width\\\">\\r\\n                <ion-button class=\\\"ion-margin ion-text-wrap\\\" expand=\\\"block\\\" (click)=\\\"reviewAttempt()\\\">\\r\\n                    <ion-icon name=\\\"fas-magnifying-glass\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    {{ 'addon.mod_quiz.review' | translate }}\\r\\n                </ion-button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header collapsible>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"module?.id\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <!-- The buttons defined by the component will be added in here. -->\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"activityComponent?.showLoading\\\" (ionRefresh)=\\\"activityComponent?.doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <addon-mod-quiz-index [module]=\\\"module\\\" [courseId]=\\\"courseId\\\" (dataRetrieved)=\\\"updateData($event)\\\"></addon-mod-quiz-index>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text *ngIf=\\\"quiz\\\" [text]=\\\"quiz.name\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"quiz.coursemodule\\\"\\r\\n                    [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" id=\\\"addon-mod_quiz-connection-error-button\\\" [hidden]=\\\"!autoSaveError\\\"\\r\\n                (click)=\\\"showConnectionError($event)\\\" [attr.aria-label]=\\\"'addon.mod_quiz.connectionerror' | translate\\\"\\r\\n                aria-haspopup=\\\"dialog\\\">\\r\\n                <ion-icon name=\\\"fas-circle-exclamation\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"navigation.length\\\" [attr.aria-label]=\\\"'addon.mod_quiz.opentoc' | translate\\\" (click)=\\\"openNavigation()\\\">\\r\\n                <ion-icon name=\\\"fas-bookmark\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n    <core-timer *ngIf=\\\"loaded && endTime && questions.length && !quizAborted && !showSummary\\\" [endTime]=\\\"endTime\\\" (finished)=\\\"timeUp()\\\"\\r\\n        [timerText]=\\\"'addon.mod_quiz.timeleft' | translate\\\" [hiddable]=\\\"true\\\">\\r\\n    </core-timer>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\" class=\\\"has-spacer\\\">\\r\\n        <!-- Button to start attempting. -->\\r\\n        <ion-button *ngIf=\\\"!attempt\\\" expand=\\\"block\\\" class=\\\"ion-margin\\\" (click)=\\\"start()\\\">\\r\\n            {{ 'addon.mod_quiz.startattempt' | translate }}\\r\\n        </ion-button>\\r\\n\\r\\n        <!-- Questions -->\\r\\n        <form name=\\\"addon-mod_quiz-player-form\\\" *ngIf=\\\"questions.length && !quizAborted && !showSummary\\\" #quizForm>\\r\\n            <div *ngFor=\\\"let question of questions\\\">\\r\\n                <ion-card id=\\\"addon-mod_quiz-question-{{question.slot}}\\\">\\r\\n                    <!-- \\\"Header\\\" of the question. -->\\r\\n                    <ion-item-divider>\\r\\n                        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                            <h2 *ngIf=\\\"question.type !== 'description' && question.questionnumber\\\" class=\\\"inline\\\">\\r\\n                                {{ 'core.question.questionno' | translate:{$a: question.questionnumber} }}\\r\\n                            </h2>\\r\\n                            <h2 *ngIf=\\\"question.type === 'description' || !question.questionnumber\\\" class=\\\"inline\\\">\\r\\n                                {{ 'core.question.information' | translate }}\\r\\n                            </h2>\\r\\n                        </ion-label>\\r\\n                        <div *ngIf=\\\"question.status || question.readableMark\\\" slot=\\\"end\\\"\\r\\n                            class=\\\"ion-text-wrap ion-margin-horizontal addon-mod_quiz-question-note\\\">\\r\\n                            <p *ngIf=\\\"question.status\\\" class=\\\"block\\\">{{question.status}}</p>\\r\\n                            <p *ngIf=\\\"question.readableMark\\\" [innerHTML]=\\\"question.readableMark\\\"></p>\\r\\n                        </div>\\r\\n                    </ion-item-divider>\\r\\n\\r\\n                    <!-- Body of the question. -->\\r\\n                    <core-question class=\\\"ion-text-wrap\\\" [question]=\\\"question\\\" [component]=\\\"component\\\" [componentId]=\\\"cmId\\\"\\r\\n                        [attemptId]=\\\"attempt!.id\\\" [usageId]=\\\"attempt!.uniqueid\\\" [offlineEnabled]=\\\"offline\\\" contextLevel=\\\"module\\\"\\r\\n                        [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\" [preferredBehaviour]=\\\"quiz!.preferredbehaviour\\\" [review]=\\\"false\\\"\\r\\n                        (onAbort)=\\\"abortQuiz()\\\" (buttonClicked)=\\\"behaviourButtonClicked($event)\\\">\\r\\n                    </core-question>\\r\\n                </ion-card>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <!-- Go to next or previous page. -->\\r\\n        <ion-row *ngIf=\\\"questions.length && !quizAborted && !showSummary\\\" class=\\\"spacer-top\\\">\\r\\n            <ion-col *ngIf=\\\"previousPage >= 0\\\">\\r\\n                <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"changePage(previousPage)\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-icon name=\\\"fas-chevron-left\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    {{ 'core.previous' | translate }}\\r\\n                </ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col *ngIf=\\\"nextPage >= -1\\\">\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"changePage(nextPage)\\\" class=\\\"ion-text-wrap\\\" *ngIf=\\\"nextPage > 0\\\">\\r\\n                    {{ 'core.next' | translate }}\\r\\n                    <ion-icon name=\\\"fas-chevron-right\\\" slot=\\\"end\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"changePage(nextPage)\\\" class=\\\"ion-text-wrap\\\" *ngIf=\\\"nextPage == -1\\\">\\r\\n                    {{ 'core.submit' | translate }}\\r\\n                </ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <!-- Summary -->\\r\\n        <ion-card *ngIf=\\\"!quizAborted && showSummary && summaryQuestions.length\\\" class=\\\"addon-mod_quiz-table\\\">\\r\\n            <ion-card-header class=\\\"ion-text-wrap\\\">\\r\\n                <ion-card-title>{{ 'addon.mod_quiz.summaryofattempt' | translate }}</ion-card-title>\\r\\n            </ion-card-header>\\r\\n\\r\\n            <!-- \\\"Header\\\" of the summary table. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                        <ion-col size=\\\"3\\\" class=\\\"ion-text-center ion-hide-md-down\\\">\\r\\n                            <strong>{{ 'addon.mod_quiz.question' | translate }}</strong>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"3\\\" class=\\\"ion-text-center ion-hide-md-up\\\"><strong>#</strong></ion-col>\\r\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-text-center\\\">\\r\\n                            <strong>{{ 'addon.mod_quiz.status' | translate }}</strong>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- List of questions of the summary table. -->\\r\\n            <ng-container *ngFor=\\\"let question of summaryQuestions\\\">\\r\\n                <ion-item *ngIf=\\\"question.type !== 'description' && question.questionnumber\\\"\\r\\n                    (click)=\\\"changePage(question.page, false, question.slot)\\\"\\r\\n                    [attr.aria-label]=\\\"'core.question.questionno' | translate:{$a: question.questionnumber}\\\"\\r\\n                    [detail]=\\\"!isSequential && canReturn\\\" [button]=\\\"!isSequential && canReturn\\\">\\r\\n                    <ion-label>\\r\\n                        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col size=\\\"3\\\" class=\\\"ion-text-center ion-text-wrap\\\">{{ question.questionnumber }}</ion-col>\\r\\n                            <ion-col size=\\\"9\\\" class=\\\"ion-text-center ion-text-wrap\\\">{{ question.status }}</ion-col>\\r\\n                        </ion-row>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Due date warning. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"dueDateWarning\\\">\\r\\n                <ion-label>{{ dueDateWarning }}</ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Time left (if quiz is timed). -->\\r\\n            <core-timer *ngIf=\\\"endTime\\\" [endTime]=\\\"endTime\\\" (finished)=\\\"timeUp()\\\" [timerText]=\\\"'addon.mod_quiz.timeleft' | translate\\\">\\r\\n            </core-timer>\\r\\n\\r\\n            <!-- List of messages explaining why the quiz cannot be submitted. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"preventSubmitMessages.length\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.cannotsubmitquizdueto' | translate }}</p>\\r\\n                    <p *ngFor=\\\"let message of preventSubmitMessages\\\">{{message}}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <!-- Quiz aborted -->\\r\\n        <ion-card *ngIf=\\\"attempt && ((!questions.length && !showSummary) || quizAborted)\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>{{ 'addon.mod_quiz.errorparsequestions' | translate }}</ion-label>\\r\\n            </ion-item>\\r\\n            <ion-button *ngIf=\\\"canReturn\\\" expand=\\\"block\\\" class=\\\"ion-margin ion-text-wrap\\\" fill=\\\"outline\\\"\\r\\n                (click)=\\\"changePage(attempt!.currentpage!)\\\">\\r\\n                {{ 'addon.mod_quiz.returnattempt' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-card>\\r\\n\\r\\n        <div collapsible-footer appearOnBottom *ngIf=\\\"!quizAborted && showSummary && summaryQuestions.length && loaded\\\" slot=\\\"fixed\\\">\\r\\n            <div class=\\\"list-item-limited-width\\\">\\r\\n                <ion-button *ngIf=\\\"preventSubmitMessages.length\\\" expand=\\\"block\\\" class=\\\"ion-margin ion-text-wrap\\\" [href]=\\\"moduleUrl\\\"\\r\\n                    core-link [showBrowserWarning]=\\\"false\\\">\\r\\n                    {{ 'core.openinbrowser' | translate }}\\r\\n                    <ion-icon name=\\\"fas-up-right-from-square\\\" slot=\\\"end\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n\\r\\n                <!-- Button to submit the quiz. -->\\r\\n                <ion-button *ngIf=\\\"!attempt!.finishedOffline && !preventSubmitMessages.length\\\" expand=\\\"block\\\"\\r\\n                    class=\\\"ion-margin ion-text-wrap\\\" (click)=\\\"finishAttempt(true)\\\">\\r\\n                    {{ 'addon.mod_quiz.submitallandfinish' | translate }}\\r\\n                </ion-button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'addon.mod_quiz.review' | translate }}</h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" *ngIf=\\\"navigation.length\\\" [attr.aria-label]=\\\"'addon.mod_quiz.opentoc' | translate\\\"\\r\\n                (click)=\\\"openNavigation()\\\" aria-haspopup=\\\"true\\\">\\r\\n                <ion-icon name=\\\"fas-bookmark\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n\\r\\n        <!-- Review summary -->\\r\\n        <ion-card *ngIf=\\\"attempt\\\">\\r\\n            <ion-list>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.startedon' | translate }}</p>\\r\\n                        <p>{{ attempt.timestart! * 1000 | coreFormatDate }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.attemptstate' | translate }}</p>\\r\\n                        <p>{{ readableState }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"showCompleted\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.completedon' | translate }}</p>\\r\\n                        <p>{{ attempt.timefinish! * 1000 | coreFormatDate }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"timeTaken\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.timetaken' | translate }}</p>\\r\\n                        <p>{{ timeTaken }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"overTime\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.overdue' | translate }}</p>\\r\\n                        <p>{{ overTime }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"readableMark\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.marks' | translate }}</p>\\r\\n                        <p>{{ readableMark }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"readableGrade\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.mod_quiz.grade' | translate }}</p>\\r\\n                        <p>{{ readableGrade }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let data of additionalData\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ data.title }}</p>\\r\\n                        <core-format-text [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [text]=\\\"data.content\\\" contextLevel=\\\"module\\\"\\r\\n                            [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n                        </core-format-text>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n        </ion-card>\\r\\n\\r\\n        <!-- Questions -->\\r\\n        <div *ngIf=\\\"attempt && questions.length\\\">\\r\\n\\r\\n            <!-- Questions. -->\\r\\n            <div *ngFor=\\\"let question of questions\\\">\\r\\n                <ion-card id=\\\"addon-mod_quiz-question-{{question.slot}}\\\">\\r\\n                    <!-- \\\"Header\\\" of the question. -->\\r\\n                    <ion-item-divider>\\r\\n                        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                            <h2 *ngIf=\\\"question.type !== 'description' && question.questionnumber\\\">\\r\\n                                {{ 'core.question.questionno' | translate:{$a: question.questionnumber} }}\\r\\n                            </h2>\\r\\n                            <h2 *ngIf=\\\"question.type === 'description' || !question.questionnumber\\\">\\r\\n                                {{ 'core.question.information' | translate }}\\r\\n                            </h2>\\r\\n                        </ion-label>\\r\\n                        <div class=\\\"ion-text-wrap ion-margin-horizontal addon-mod_quiz-question-note\\\" slot=\\\"end\\\"\\r\\n                            *ngIf=\\\"question.status || question.readableMark\\\">\\r\\n                            <p *ngIf=\\\"question.status\\\">{{question.status}}</p>\\r\\n                            <p *ngIf=\\\"question.readableMark\\\" [innerHTML]=\\\"question.readableMark\\\"></p>\\r\\n                        </div>\\r\\n                    </ion-item-divider>\\r\\n\\r\\n                    <!-- Body of the question. -->\\r\\n                    <core-question class=\\\"ion-text-wrap\\\" [question]=\\\"question\\\" [component]=\\\"component\\\" [componentId]=\\\"cmId\\\"\\r\\n                        [attemptId]=\\\"attempt.id\\\" [usageId]=\\\"attempt.uniqueid\\\" [offlineEnabled]=\\\"false\\\" contextLevel=\\\"module\\\"\\r\\n                        [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\" [review]=\\\"true\\\" [preferredBehaviour]=\\\"quiz?.preferredbehaviour\\\">\\r\\n                    </core-question>\\r\\n                </ion-card>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div collapsible-footer appearOnBottom *ngIf=\\\"loaded && numPages > 1\\\" slot=\\\"fixed\\\">\\r\\n            <ion-row class=\\\"ion-justify-content-between ion-align-items-center ion-no-padding ion-wrap\\\">\\r\\n                <ion-col class=\\\"ion-text-start ion-no-padding core-navigation-arrow\\\" size=\\\"auto\\\" *ngIf=\\\"!showAll\\\">\\r\\n                    <ion-button [disabled]=\\\"previousPage < 0\\\" fill=\\\"clear\\\" [attr.aria-label]=\\\"'core.previous' | translate\\\"\\r\\n                        (click)=\\\"changePage(previousPage)\\\">\\r\\n                        <ion-icon name=\\\"fas-chevron-left\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col class=\\\"ion-text-center\\\">\\r\\n                    <!-- In review we can toggle between all questions in same page or one page at a time. -->\\r\\n                    <ion-button class=\\\"ion-text-wrap\\\" *ngIf=\\\"numPages > 1\\\" (click)=\\\"switchMode()\\\" fill=\\\"outline\\\">\\r\\n                        <span *ngIf=\\\"!showAll\\\">{{ 'addon.mod_quiz.showall' | translate }}</span>\\r\\n                        <span *ngIf=\\\"showAll\\\">{{ 'addon.mod_quiz.showeachpage' | translate }}</span>\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col class=\\\"ion-text-end ion-no-padding core-navigation-arrow\\\" size=\\\"auto\\\" *ngIf=\\\"!showAll\\\">\\r\\n                    <ion-button [disabled]=\\\"nextPage >= numPages\\\" fill=\\\"clear\\\" [attr.aria-label]=\\\"'core.next' | translate\\\"\\r\\n                        (click)=\\\"changePage(nextPage)\\\">\\r\\n                        <ion-icon name=\\\"fas-chevron-right\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { CoreQuestionsAnswers } from '@features/question/services/question';\nimport { CoreLogger } from '@singletons/logger';\nimport { AddonModQuizConnectionErrorComponent } from '../components/connection-error/connection-error';\nimport { AddonModQuiz, AddonModQuizAttemptWSData, AddonModQuizQuizWSData } from '../services/quiz';\nimport { CoreDomUtils } from '@services/utils/dom';\n\n/**\n * Class to support auto-save in quiz. Every certain seconds, it will check if there are changes in the current page answers\n * and, if so, it will save them automatically.\n */\nexport class AddonModQuizAutoSave {\n\n    protected readonly CHECK_CHANGES_INTERVAL = 5000;\n\n    protected logger: CoreLogger;\n    protected checkChangesInterval?: number; // Interval to check if there are changes in the answers.\n    protected loadPreviousAnswersTimeout?: number; // Timeout to load previous answers.\n    protected autoSaveTimeout?: number; // Timeout to auto-save the answers.\n    protected popover?: HTMLIonPopoverElement; // Popover to display there's been an error.\n    protected popoverShown = false; // Whether the popover is shown.\n    protected previousAnswers?: CoreQuestionsAnswers; // The previous answers, to check if answers have changed.\n    protected errorObservable: BehaviorSubject<boolean>; // An observable to notify if there's been an error.\n\n    /**\n     * Constructor.\n     *\n     * @param formName Name of the form where the answers are stored.\n     * @param buttonSelector Selector to find the button to show the connection error.\n     */\n    constructor(\n        protected formName: string,\n        protected buttonSelector: string,\n    ) {\n        this.logger = CoreLogger.getInstance('AddonModQuizAutoSave');\n\n        // Create the observable to notify if an error happened.\n        this.errorObservable = new BehaviorSubject<boolean>(false);\n    }\n\n    /**\n     * Cancel a pending auto save.\n     */\n    cancelAutoSave(): void {\n        clearTimeout(this.autoSaveTimeout);\n        this.autoSaveTimeout = undefined;\n    }\n\n    /**\n     * Check if the answers have changed in a page.\n     *\n     * @param quiz Quiz.\n     * @param attempt Attempt.\n     * @param preflightData Preflight data.\n     * @param offline Whether the quiz is being attempted in offline mode.\n     */\n    checkChanges(\n        quiz: AddonModQuizQuizWSData,\n        attempt: AddonModQuizAttemptWSData,\n        preflightData: Record<string, string>,\n        offline?: boolean,\n    ): void {\n        if (this.autoSaveTimeout) {\n            // We already have an auto save pending, no need to check changes.\n            return;\n        }\n\n        const answers = this.getAnswers();\n\n        if (!this.previousAnswers) {\n            // Previous answers isn't set, set it now.\n            this.previousAnswers = answers;\n\n            return;\n        }\n\n        // Check if answers have changed.\n        let equal = true;\n\n        for (const name in answers) {\n            if (this.previousAnswers[name] != answers[name]) {\n                equal = false;\n                break;\n            }\n        }\n\n        if (!equal) {\n            this.setAutoSaveTimer(quiz, attempt, preflightData, offline);\n        }\n\n        this.previousAnswers = answers;\n    }\n\n    /**\n     * Get answers from a form.\n     *\n     * @returns Answers.\n     */\n    protected getAnswers(): CoreQuestionsAnswers {\n        return CoreQuestionHelper.getAnswersFromForm(document.forms[this.formName]);\n    }\n\n    /**\n     * Hide the auto save error.\n     */\n    hideAutoSaveError(): void {\n        this.errorObservable.next(false);\n        this.popover?.dismiss();\n    }\n\n    /**\n     * Returns an observable that will notify when an error happens or stops.\n     * It will send true when there's an error, and false when the error has been ammended.\n     *\n     * @returns Observable.\n     */\n    onError(): BehaviorSubject<boolean> {\n        return this.errorObservable;\n    }\n\n    /**\n     * Schedule an auto save process if it's not scheduled already.\n     *\n     * @param quiz Quiz.\n     * @param attempt Attempt.\n     * @param preflightData Preflight data.\n     * @param offline Whether the quiz is being attempted in offline mode.\n     */\n    setAutoSaveTimer(\n        quiz: AddonModQuizQuizWSData,\n        attempt: AddonModQuizAttemptWSData,\n        preflightData: Record<string, string>,\n        offline?: boolean,\n    ): void {\n        // Don't schedule if already shceduled or quiz is almost closed.\n        if (!quiz.autosaveperiod || this.autoSaveTimeout || AddonModQuiz.isAttemptTimeNearlyOver(quiz, attempt)) {\n            return;\n        }\n\n        // Schedule save.\n        this.autoSaveTimeout = window.setTimeout(async () => {\n            const answers = this.getAnswers();\n            this.cancelAutoSave();\n            this.previousAnswers = answers; // Update previous answers to match what we're sending to the server.\n\n            try {\n                await AddonModQuiz.saveAttempt(quiz, attempt, answers, preflightData, offline);\n\n                // Save successful, we can hide the connection error if it was shown.\n                this.hideAutoSaveError();\n            } catch (error) {\n                // Error auto-saving. Show error and set timer again.\n                this.logger.warn('Error auto-saving data.', error);\n\n                // If there was no error already, show the error message.\n                if (!this.errorObservable.getValue()) {\n                    this.errorObservable.next(true);\n                    this.showAutoSaveError();\n                }\n\n                // Try again.\n                this.setAutoSaveTimer(quiz, attempt, preflightData, offline);\n            }\n        }, quiz.autosaveperiod * 1000);\n    }\n\n    /**\n     * Show an error popover due to an auto save error.\n     */\n    async showAutoSaveError(ev?: Event): Promise<void> {\n        // Don't show popover if it was already shown.\n        if (this.popoverShown) {\n            return;\n        }\n\n        const event: unknown = ev || {\n            // Cannot use new Event() because event's target property is readonly\n            target: document.querySelector(this.buttonSelector),\n            stopPropagation: () => {}, // eslint-disable-line @typescript-eslint/no-empty-function\n            preventDefault: () => {}, // eslint-disable-line @typescript-eslint/no-empty-function\n        };\n        this.popoverShown = true;\n\n        this.popover = await CoreDomUtils.openPopover({\n            component: AddonModQuizConnectionErrorComponent,\n            event: <Event> event,\n        });\n\n        this.popoverShown = false;\n    }\n\n    /**\n     * Start a process to periodically check changes in answers.\n     *\n     * @param quiz Quiz.\n     * @param attempt Attempt.\n     * @param preflightData Preflight data.\n     * @param offline Whether the quiz is being attempted in offline mode.\n     */\n    startCheckChangesProcess(\n        quiz: AddonModQuizQuizWSData,\n        attempt: AddonModQuizAttemptWSData,\n        preflightData: Record<string, string>,\n        offline?: boolean,\n    ): void {\n        if (this.checkChangesInterval || !quiz.autosaveperiod) {\n            // We already have the interval in place or the quiz has autosave disabled.\n            return;\n        }\n\n        this.previousAnswers = undefined;\n\n        // Load initial answers in 2.5 seconds so the first check interval finds them already loaded.\n        this.loadPreviousAnswersTimeout = window.setTimeout(() => {\n            this.checkChanges(quiz, attempt, preflightData, offline);\n        }, 2500);\n\n        // Check changes every certain time.\n        this.checkChangesInterval = window.setInterval(() => {\n            this.checkChanges(quiz, attempt, preflightData, offline);\n        }, this.CHECK_CHANGES_INTERVAL);\n    }\n\n    /**\n     * Stops the periodical check for changes.\n     */\n    stopCheckChangesProcess(): void {\n        clearTimeout(this.loadPreviousAnswersTimeout);\n        clearInterval(this.checkChangesInterval);\n\n        this.loadPreviousAnswersTimeout = undefined;\n        this.checkChangesInterval = undefined;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { isSafeNumber } from '@/core/utils/types';\nimport { Component, OnInit } from '@angular/core';\nimport { CoreError } from '@classes/errors/error';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport {\n    AddonModQuiz,\n    AddonModQuizAttemptWSData,\n    AddonModQuizGetQuizAccessInformationWSResponse,\n    AddonModQuizProvider,\n} from '../../services/quiz';\nimport { AddonModQuizAttempt, AddonModQuizHelper, AddonModQuizQuizData } from '../../services/quiz-helper';\n\n/**\n * Page that displays some summary data about an attempt.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-attempt',\n    templateUrl: 'attempt.html',\n})\nexport class AddonModQuizAttemptPage implements OnInit {\n\n    courseId!: number; // The course ID the quiz belongs to.\n    quiz?: AddonModQuizQuizData; // The quiz the attempt belongs to.\n    attempt?: AddonModQuizAttempt; // The attempt to view.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    componentId?: number; // Component ID to use in conjunction with the component.\n    loaded = false; // Whether data has been loaded.\n    feedback?: string; // Attempt feedback.\n    showReviewColumn = false;\n    cmId!: number; // Course module id the attempt belongs to.\n\n    protected attemptId!: number; // Attempt to view.\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.attemptId = CoreNavigator.getRequiredRouteNumberParam('attemptId');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.fetchQuizData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher: IonRefresher): void {\n        this.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Get quiz data and attempt data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchQuizData(): Promise<void> {\n        try {\n            this.quiz = await AddonModQuiz.getQuiz(this.courseId, this.cmId);\n\n            this.componentId = this.quiz.coursemodule;\n\n            // Load attempt data.\n            const [options, accessInfo, attempt] = await Promise.all([\n                AddonModQuiz.getCombinedReviewOptions(this.quiz.id, { cmId: this.quiz.coursemodule }),\n                this.fetchAccessInfo(this.quiz),\n                this.fetchAttempt(this.quiz.id),\n            ]);\n\n            // Set calculated data.\n            this.showReviewColumn = accessInfo.canreviewmyattempts;\n            AddonModQuizHelper.setQuizCalculatedData(this.quiz, options);\n\n            this.attempt = await AddonModQuizHelper.setAttemptCalculatedData(this.quiz, attempt, false, undefined, true);\n\n            // Check if the feedback should be displayed.\n            const grade = Number(this.attempt.rescaledGrade);\n\n            if (this.quiz.showFeedbackColumn && AddonModQuiz.isAttemptFinished(this.attempt.state) &&\n                    options.someoptions.overallfeedback && isSafeNumber(grade)) {\n\n                // Feedback should be displayed, get the feedback for the grade.\n                const response = await AddonModQuiz.getFeedbackForGrade(this.quiz.id, grade, {\n                    cmId: this.quiz.coursemodule,\n                });\n\n                this.feedback = response.feedbacktext;\n            } else {\n                delete this.feedback;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetattempt', true);\n        }\n    }\n\n    /**\n     * Get the attempt.\n     *\n     * @param quizId Quiz ID.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchAttempt(quizId: number): Promise<AddonModQuizAttemptWSData> {\n        // Get all the attempts and search the one we want.\n        const attempts = await AddonModQuiz.getUserAttempts(quizId, { cmId: this.cmId });\n\n        const attempt = attempts.find(attempt => attempt.id == this.attemptId);\n\n        if (!attempt) {\n            // Attempt not found, error.\n            this.attempt = undefined;\n\n            throw new CoreError(Translate.instant('addon.mod_quiz.errorgetattempt'));\n        }\n\n        return attempt;\n    }\n\n    /**\n     * Get the access info.\n     *\n     * @param quiz Quiz instance.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchAccessInfo(quiz: AddonModQuizQuizData): Promise<AddonModQuizGetQuizAccessInformationWSResponse> {\n        const accessInfo = await AddonModQuiz.getQuizAccessInformation(quiz.id, { cmId: this.cmId });\n\n        if (!accessInfo.canreviewmyattempts) {\n            return accessInfo;\n        }\n\n        // Check if the user can review the attempt.\n        await CoreUtils.ignoreErrors(AddonModQuiz.invalidateAttemptReviewForPage(this.attemptId, -1));\n\n        try {\n            await AddonModQuiz.getAttemptReview(this.attemptId, { page: -1, cmId: quiz.coursemodule });\n        } catch {\n            // Error getting the review, assume the user cannot review the attempt.\n            accessInfo.canreviewmyattempts = false;\n        }\n\n        return accessInfo;\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async refreshData(): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModQuiz.invalidateQuizData(this.courseId));\n        promises.push(AddonModQuiz.invalidateAttemptReview(this.attemptId));\n\n        if (this.quiz) {\n            promises.push(AddonModQuiz.invalidateUserAttemptsForUser(this.quiz.id));\n            promises.push(AddonModQuiz.invalidateQuizAccessInformation(this.quiz.id));\n            promises.push(AddonModQuiz.invalidateCombinedReviewOptionsForUser(this.quiz.id));\n\n            if (this.attempt && this.feedback !== undefined) {\n                promises.push(AddonModQuiz.invalidateFeedback(this.quiz.id));\n            }\n        }\n\n        await CoreUtils.ignoreErrors(Promise.all(promises));\n\n        await this.fetchQuizData();\n    }\n\n    /**\n     * Go to the page to review the attempt.\n     *\n     * @returns Promise resolved when done.\n     */\n    async reviewAttempt(): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        CoreNavigator.navigate(`../../review/${this.attempt.id}`);\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild } from '@angular/core';\nimport { CoreCourseModuleMainActivityPage } from '@features/course/classes/main-activity-page';\nimport { AddonModQuizIndexComponent } from '../../components/index/index';\n\n/**\n * Page that displays the quiz entry page.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModQuizIndexPage extends CoreCourseModuleMainActivityPage<AddonModQuizIndexComponent> {\n\n    @ViewChild(AddonModQuizIndexComponent) activityComponent?: AddonModQuizIndexComponent;\n\n}\n","export default \"/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host .addon-mod_quiz-question-note p {\\n  margin-top: 2px;\\n  margin-bottom: 2px;\\n}\\n:host core-timer.core-timer-timeleft-0 {\\n  --timer-background: #ca3120;\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-1 {\\n  --timer-background: rgba(202, 49, 32, 0.9333333333);\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-2 {\\n  --timer-background: rgba(202, 49, 32, 0.8666666667);\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-3 {\\n  --timer-background: rgba(202, 49, 32, 0.8);\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-4 {\\n  --timer-background: rgba(202, 49, 32, 0.7333333333);\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-5 {\\n  --timer-background: rgba(202, 49, 32, 0.6666666667);\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-6 {\\n  --timer-background: rgba(202, 49, 32, 0.6);\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-7 {\\n  --timer-background: rgba(202, 49, 32, 0.5333333333);\\n  --timer-text-color: var(--white);\\n}\\n:host core-timer.core-timer-timeleft-8 {\\n  --timer-background: rgba(202, 49, 32, 0.4666666667);\\n}\\n:host core-timer.core-timer-timeleft-9 {\\n  --timer-background: rgba(202, 49, 32, 0.4);\\n}\\n:host core-timer.core-timer-timeleft-10 {\\n  --timer-background: rgba(202, 49, 32, 0.3333333333);\\n}\\n:host core-timer.core-timer-timeleft-11 {\\n  --timer-background: rgba(202, 49, 32, 0.2666666667);\\n}\\n:host core-timer.core-timer-timeleft-12 {\\n  --timer-background: rgba(202, 49, 32, 0.2);\\n}\\n:host core-timer.core-timer-timeleft-13 {\\n  --timer-background: rgba(202, 49, 32, 0.1333333333);\\n}\\n:host core-timer.core-timer-timeleft-14 {\\n  --timer-background: rgba(202, 49, 32, 0.0666666667);\\n}\\n:host core-timer.core-timer-timeleft-15 {\\n  --timer-background: rgba(202, 49, 32, 0);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ChangeDetectorRef, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { CoreIonLoadingElement } from '@classes/ion-loading';\nimport { CoreQuestionComponent } from '@features/question/components/question/question';\nimport { CoreQuestionQuestionParsed, CoreQuestionsAnswers } from '@features/question/services/question';\nimport { CoreQuestionBehaviourButton, CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModQuizAutoSave } from '../../classes/auto-save';\nimport {\n    AddonModQuizNavigationModalComponent,\n    AddonModQuizNavigationModalReturn,\n    AddonModQuizNavigationQuestion,\n} from '../../components/navigation-modal/navigation-modal';\nimport {\n    AddonModQuiz,\n    AddonModQuizAttemptWSData,\n    AddonModQuizGetAttemptAccessInformationWSResponse,\n    AddonModQuizGetQuizAccessInformationWSResponse,\n    AddonModQuizProvider,\n    AddonModQuizQuizWSData,\n} from '../../services/quiz';\nimport { AddonModQuizAttempt, AddonModQuizHelper } from '../../services/quiz-helper';\nimport { AddonModQuizSync } from '../../services/quiz-sync';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreForms } from '@singletons/form';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreTime } from '@singletons/time';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\nimport { CoreWSError } from '@classes/errors/wserror';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that allows attempting a quiz.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-player',\n    templateUrl: 'player.html',\n    styleUrls: ['player.scss'],\n})\nexport class AddonModQuizPlayerPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content?: IonContent;\n    @ViewChildren(CoreQuestionComponent) questionComponents?: QueryList<CoreQuestionComponent>;\n    @ViewChild('quizForm') formElement?: ElementRef;\n\n    quiz?: AddonModQuizQuizWSData; // The quiz the attempt belongs to.\n    attempt?: AddonModQuizAttempt; // The attempt being attempted.\n    moduleUrl?: string; // URL to the module in the site.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    loaded = false; // Whether data has been loaded.\n    quizAborted = false; // Whether the quiz was aborted due to an error.\n    offline = false; // Whether the quiz is being attempted in offline mode.\n    navigation: AddonModQuizNavigationQuestion[] = []; // List of questions to navigate them.\n    questions: QuizQuestion[] = []; // Questions of the current page.\n    nextPage = -2; // Next page.\n    previousPage = -1; // Previous page.\n    showSummary = false; // Whether the attempt summary should be displayed.\n    summaryQuestions: CoreQuestionQuestionParsed[] = []; // The questions to display in the summary.\n    canReturn = false; // Whether the user can return to a page after seeing the summary.\n    preventSubmitMessages: string[] = []; // List of messages explaining why the quiz cannot be submitted.\n    endTime?: number; // The time when the attempt must be finished.\n    autoSaveError = false; // Whether there's been an error in auto-save.\n    isSequential = false; // Whether quiz navigation is sequential.\n    readableTimeLimit?: string; // Time limit in a readable format.\n    dueDateWarning?: string; // Warning about due date.\n    courseId!: number; // The course ID the quiz belongs to.\n    cmId!: number; // Course module ID.\n\n    protected preflightData: Record<string, string> = {}; // Preflight data to attempt the quiz.\n    protected quizAccessInfo?: AddonModQuizGetQuizAccessInformationWSResponse; // Quiz access information.\n    protected attemptAccessInfo?: AddonModQuizGetAttemptAccessInformationWSResponse; // Attempt access info.\n    protected lastAttempt?: AddonModQuizAttemptWSData; // Last user attempt before a new one is created (if needed).\n    protected newAttempt = false; // Whether the user is starting a new attempt.\n    protected quizDataLoaded = false; // Whether the quiz data has been loaded.\n    protected timeUpCalled = false; // Whether the time up function has been called.\n    protected autoSave!: AddonModQuizAutoSave; // Class to auto-save answers every certain time.\n    protected autoSaveErrorSubscription?: Subscription; // To be notified when an error happens in auto-save.\n    protected forceLeave = false; // If true, don't perform any check when leaving the view.\n    protected reloadNavigation = false; // Whether navigation needs to be reloaded because some data was sent to server.\n\n    constructor(\n        protected changeDetector: ChangeDetectorRef,\n        protected elementRef: ElementRef,\n    ) {\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.moduleUrl = CoreNavigator.getRouteParam('moduleUrl');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        // Create the auto save instance.\n        this.autoSave = new AddonModQuizAutoSave(\n            'addon-mod_quiz-player-form',\n            '#addon-mod_quiz-connection-error-button',\n        );\n\n        // Start the player when the page is loaded.\n        this.start();\n\n        // Listen for errors on auto-save.\n        this.autoSaveErrorSubscription = this.autoSave.onError().subscribe((error) => {\n            this.autoSaveError = error;\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.stopAutoSave();\n\n        if (this.quiz) {\n            // Unblock the quiz so it can be synced.\n            CoreSync.unblockOperation(AddonModQuizProvider.COMPONENT, this.quiz.id);\n        }\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (this.forceLeave || this.quizAborted || !this.questions.length || this.showSummary) {\n            return true;\n        }\n\n        // Save answers.\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await this.processAttempt(false, false);\n        } catch (error) {\n            // Save attempt failed. Show confirmation.\n            modal.dismiss();\n\n            await CoreDomUtils.showConfirm(Translate.instant('addon.mod_quiz.confirmleavequizonerror'));\n\n            CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n        } finally {\n            modal.dismiss();\n        }\n\n        return true;\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    async ionViewWillLeave(): Promise<void> {\n        // Close any modal if present.\n        const modal = await ModalController.getTop();\n\n        modal?.dismiss();\n    }\n\n    /**\n     * Abort the quiz.\n     */\n    abortQuiz(): void {\n        this.quizAborted = true;\n    }\n\n    /**\n     * A behaviour button in a question was clicked (Check, Redo, ...).\n     *\n     * @param button Clicked button.\n     */\n    async behaviourButtonClicked(button: CoreQuestionBehaviourButton): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            // Confirm that the user really wants to do it.\n            await CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            // Get the answers.\n            const answers = await this.prepareAnswers(this.quiz.coursemodule);\n\n            // Add the clicked button data.\n            answers[button.name] = button.value;\n\n            // Behaviour checks are always in online.\n            await AddonModQuiz.processAttempt(this.quiz, this.attempt, answers, this.preflightData);\n\n            this.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n\n            // Reload the current page.\n            const scrollElement = await this.content?.getScrollElement();\n            const scrollTop = scrollElement?.scrollTop || -1;\n\n            this.loaded = false;\n            this.content?.scrollToTop(); // Scroll top so the spinner is seen.\n\n            try {\n                await this.loadPage(this.attempt.currentpage ?? 0);\n            } finally {\n                this.loaded = true;\n                if (scrollTop != -1) {\n                    // Wait for content to be rendered.\n                    setTimeout(() => {\n                        this.content?.scrollToPoint(0, scrollTop);\n                    }, 50);\n                }\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error performing action.');\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Change the current page. If slot is supplied, try to scroll to that question.\n     *\n     * @param page Page to load. -1 means summary.\n     * @param fromModal Whether the page was selected using the navigation modal.\n     * @param slot Slot of the question to scroll to.\n     * @returns Promise resolved when done.\n     */\n    async changePage(page: number, fromModal?: boolean, slot?: number): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        if (page != -1 && (this.attempt.state == AddonModQuizProvider.ATTEMPT_OVERDUE || this.attempt.finishedOffline)) {\n            // We can't load a page if overdue or the local attempt is finished.\n            return;\n        } else if (page == this.attempt.currentpage && !this.showSummary && slot !== undefined) {\n            // Navigating to a question in the current page.\n            await this.scrollToQuestion(slot);\n\n            return;\n        } else if ((page == this.attempt.currentpage && !this.showSummary) || (fromModal && this.isSequential && page != -1)) {\n            // If the user is navigating to the current page we do nothing.\n            // Also, in sequential quizzes we don't allow navigating using the modal except for finishing the quiz (summary).\n            return;\n        } else if (page === -1 && this.showSummary) {\n            // Summary already shown.\n            return;\n        }\n\n        this.content?.scrollToTop();\n\n        // First try to save the attempt data. We only save it if we're not seeing the summary.\n        if (!this.showSummary) {\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            try {\n                await this.processAttempt(false, false);\n\n                modal.dismiss();\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true);\n                modal.dismiss();\n\n                return;\n            }\n\n            this.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n        }\n\n        this.loaded = false;\n\n        try {\n            // Attempt data successfully saved, load the page or summary.\n            // Stop checking for changes during page change.\n            this.autoSave.stopCheckChangesProcess();\n\n            if (page === -1) {\n                await this.loadSummary();\n            } else {\n                await this.loadPage(page);\n            }\n        } catch (error) {\n            // If the user isn't seeing the summary, start the check again.\n            if (!this.showSummary && this.quiz) {\n                this.autoSave.startCheckChangesProcess(this.quiz, this.attempt, this.preflightData, this.offline);\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n        } finally {\n            this.loaded = true;\n\n            if (slot !== undefined) {\n                // Scroll to the question.\n                await this.scrollToQuestion(slot);\n            }\n        }\n    }\n\n    /**\n     * Convenience function to get the quiz data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        this.quiz = await AddonModQuiz.getQuiz(this.courseId, this.cmId);\n\n        // Block the quiz so it cannot be synced.\n        CoreSync.blockOperation(AddonModQuizProvider.COMPONENT, this.quiz.id);\n\n        // Wait for any ongoing sync to finish. We won't sync a quiz while it's being played.\n        await AddonModQuizSync.waitForSync(this.quiz.id);\n\n        this.isSequential = AddonModQuiz.isNavigationSequential(this.quiz);\n\n        if (AddonModQuiz.isQuizOffline(this.quiz)) {\n            // Quiz supports offline.\n            this.offline = true;\n        } else {\n            // Quiz doesn't support offline right now, but maybe it did and then the setting was changed.\n            // If we have an unfinished offline attempt then we'll use offline mode.\n            this.offline = await AddonModQuiz.isLastAttemptOfflineUnfinished(this.quiz);\n        }\n\n        if (this.quiz.timelimit && this.quiz.timelimit > 0) {\n            this.readableTimeLimit = CoreTime.formatTime(this.quiz.timelimit);\n        }\n\n        // Get access information for the quiz.\n        this.quizAccessInfo = await AddonModQuiz.getQuizAccessInformation(this.quiz.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        // Get user attempts to determine last attempt.\n        const attempts = await AddonModQuiz.getUserAttempts(this.quiz.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        if (!attempts.length) {\n            // There are no attempts, start a new one.\n            this.newAttempt = true;\n\n            return;\n        }\n\n        // Get the last attempt. If it's finished, start a new one.\n        this.lastAttempt = await AddonModQuizHelper.setAttemptCalculatedData(\n            this.quiz,\n            attempts[attempts.length - 1],\n            false,\n            undefined,\n            true,\n        );\n\n        this.newAttempt = AddonModQuiz.isAttemptFinished(this.lastAttempt.state);\n    }\n\n    /**\n     * Finish an attempt, either by timeup or because the user clicked to finish it.\n     *\n     * @param userFinish Whether the user clicked to finish the attempt.\n     * @param timeUp Whether the quiz time is up.\n     * @returns Promise resolved when done.\n     */\n    async finishAttempt(userFinish?: boolean, timeUp?: boolean): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            // Show confirm if the user clicked the finish button and the quiz is in progress.\n            if (!timeUp && this.attempt.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS) {\n                let message = Translate.instant('addon.mod_quiz.confirmclose');\n\n                const unansweredCount = this.summaryQuestions\n                    .filter(question => question.state === 'todo' || question.state === 'invalid')\n                    .length;\n\n                if (unansweredCount > 0) {\n                    const warning = Translate.instant(\n                        'addon.mod_quiz.submission_confirmation_unanswered',\n                        { $a: unansweredCount },\n                    );\n\n                    message += `\n                        <ion-card class=\"core-warning-card\">\n                            <ion-item>\n                                <ion-label>\n                                    ${ warning }\n                                </ion-label>\n                            </ion-item>\n                        </ion-card>\n                    `;\n                }\n\n                await CoreDomUtils.showConfirm(\n                    message,\n                    Translate.instant('addon.mod_quiz.submitallandfinish'),\n                    Translate.instant('core.submit'),\n                );\n            }\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            await this.processAttempt(userFinish, timeUp);\n\n            // Trigger an event to notify the attempt was finished.\n            CoreEvents.trigger(AddonModQuizProvider.ATTEMPT_FINISHED_EVENT, {\n                quizId: this.quiz.id,\n                attemptId: this.attempt.id,\n                synced: !this.offline,\n            }, CoreSites.getCurrentSiteId());\n\n            CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'quiz' });\n\n            if (!timeUp || !this.quiz.graceperiod) {\n                // Leave the player.\n                this.forceLeave = true;\n                CoreNavigator.back();\n            } else {\n                // Stay in player to show summary.\n                this.stopAutoSave();\n                this.clearTimer();\n\n                await this.refreshAttempt();\n                await this.loadSummary();\n            }\n        } catch (error) {\n            // eslint-disable-next-line promise/catch-or-return\n            CoreDomUtils\n                .showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true)\n                .then(async alert => {\n                    await alert?.onWillDismiss();\n\n                    if (error instanceof CoreWSError && error.errorcode === 'attemptalreadyclosed') {\n                        CoreNavigator.back();\n                    }\n\n                    return;\n                });\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Fix sequence checks of current page.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fixSequenceChecks(): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        // Get current page data again to get the latest sequencechecks.\n        const data = await AddonModQuiz.getAttemptData(this.attempt.id, this.attempt.currentpage ?? 0, this.preflightData, {\n            cmId: this.quiz?.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        const newSequenceChecks: Record<number, { name: string; value: string }> = {};\n\n        data.questions.forEach((question) => {\n            const sequenceCheck = CoreQuestionHelper.getQuestionSequenceCheckFromHtml(question.html);\n            if (sequenceCheck) {\n                newSequenceChecks[question.slot] = sequenceCheck;\n            }\n        });\n\n        // Notify the new sequence checks to the components.\n        this.questionComponents?.forEach((component) => {\n            component.updateSequenceCheck(newSequenceChecks);\n        });\n    }\n\n    /**\n     * Get the input answers.\n     *\n     * @returns Object with the answers.\n     */\n    protected getAnswers(): CoreQuestionsAnswers {\n        return CoreQuestionHelper.getAnswersFromForm(document.forms['addon-mod_quiz-player-form']);\n    }\n\n    /**\n     * Initializes the timer if enabled.\n     */\n    protected initTimer(): void {\n        if (!this.quizAccessInfo || !this.attempt || !this.attemptAccessInfo?.endtime || this.attemptAccessInfo.endtime < 0) {\n            return;\n        }\n\n        // Quiz has an end time. Check if time left should be shown.\n        const shouldShowTime = AddonModQuiz.shouldShowTimeLeft(\n            this.quizAccessInfo.activerulenames,\n            this.attempt,\n            this.attemptAccessInfo.endtime,\n        );\n\n        if (shouldShowTime) {\n            this.endTime = this.attemptAccessInfo.endtime;\n        } else {\n            delete this.endTime;\n        }\n    }\n\n    /**\n     * Remove timer info.\n     */\n    protected clearTimer(): void {\n        delete this.endTime;\n    }\n\n    /**\n     * Load a page questions.\n     *\n     * @param page The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async loadPage(page: number): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        // @todo MOBILE-4350: This is called before getting the attempt data in sequential quizzes as a workaround for a bug\n        // in the LMS. Once the bug has been fixed, this should be reverted.\n        if (this.isSequential) {\n            await this.logViewPage(page);\n        }\n\n        const data = await AddonModQuiz.getAttemptData(this.attempt.id, page, this.preflightData, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        // Update attempt, status could change during the execution.\n        this.attempt = data.attempt;\n        this.attempt.currentpage = page;\n\n        this.questions = data.questions;\n        this.nextPage = data.nextpage;\n        this.previousPage = this.isSequential ? -1 : page - 1;\n        this.showSummary = false;\n\n        this.questions.forEach((question) => {\n            // Get the readable mark for each question.\n            question.readableMark = AddonModQuizHelper.getQuestionMarkFromHtml(question.html);\n\n            // Extract the question info box.\n            CoreQuestionHelper.extractQuestionInfoBox(question, '.info');\n\n            // Check if the question is blocked. If it is, treat it as a description question.\n            if (AddonModQuiz.isQuestionBlocked(question)) {\n                question.type = 'description';\n            }\n        });\n\n        // Mark the page as viewed.\n        if (!this.isSequential) {\n            // @todo MOBILE-4350: Undo workaround.\n            await this.logViewPage(page);\n        }\n\n        // Start looking for changes.\n        this.autoSave.startCheckChangesProcess(this.quiz, this.attempt, this.preflightData, this.offline);\n    }\n\n    /**\n     * Log view a page.\n     *\n     * @param page Page viewed.\n     */\n    protected async logViewPage(page: number): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        await CoreUtils.ignoreErrors(AddonModQuiz.logViewAttempt(this.attempt.id, page, this.preflightData, this.offline));\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_quiz_view_attempt',\n            name: this.quiz.name,\n            data: { id: this.attempt.id, quizid: this.quiz.id, page, category: 'quiz' },\n            url: `/mod/quiz/attempt.php?attempt=${this.attempt.id}&cmid=${this.cmId}` + (page > 0 ? `&page=${page}` : ''),\n        });\n    }\n\n    /**\n     * Log view summary.\n     */\n    protected async logViewSummary(): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        await CoreUtils.ignoreErrors(\n            AddonModQuiz.logViewAttemptSummary(this.attempt.id, this.preflightData, this.quiz.id),\n        );\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_quiz_view_attempt_summary',\n            name: this.quiz.name,\n            data: { id: this.attempt.id, quizid: this.quiz.id, category: 'quiz' },\n            url: `/mod/quiz/summary.php?attempt=${this.attempt.id}&cmid=${this.cmId}`,\n        });\n    }\n\n    /**\n     * Refresh attempt data.\n     */\n    protected async refreshAttempt(): Promise<void> {\n        if (!this.quiz) {\n            return;\n        }\n\n        const attempts = await AddonModQuiz.getUserAttempts(this.quiz.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.attempt = attempts.find(attempt => attempt.id === this.attempt?.id);\n    }\n\n    /**\n     * Load attempt summary.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadSummary(): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        this.summaryQuestions = [];\n\n        this.summaryQuestions = await AddonModQuiz.getAttemptSummary(this.attempt.id, this.preflightData, {\n            cmId: this.quiz.coursemodule,\n            loadLocal: this.offline,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.showSummary = true;\n        this.canReturn = this.attempt.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS && !this.attempt.finishedOffline;\n        this.preventSubmitMessages = AddonModQuiz.getPreventSubmitMessages(this.summaryQuestions);\n\n        this.dueDateWarning = AddonModQuiz.getAttemptDueDateWarning(this.quiz, this.attempt);\n\n        this.logViewSummary();\n    }\n\n    /**\n     * Load data to navigate the questions using the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadNavigation(): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        // We use the attempt summary to build the navigation because it contains all the questions.\n        this.navigation = await AddonModQuiz.getAttemptSummary(this.attempt.id, this.preflightData, {\n            cmId: this.quiz?.coursemodule,\n            loadLocal: this.offline,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.navigation.forEach((question) => {\n            question.stateClass = CoreQuestionHelper.getQuestionStateClass(question.state || '');\n        });\n    }\n\n    /**\n     * Open the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    async openNavigation(): Promise<void> {\n\n        if (this.reloadNavigation) {\n            // Some data has changed, reload the navigation.\n            const modal = await CoreDomUtils.showModalLoading();\n\n            await CoreUtils.ignoreErrors(this.loadNavigation());\n\n            modal.dismiss();\n            this.reloadNavigation = false;\n        }\n\n        // Create the navigation modal.\n        const modalData = await CoreDomUtils.openSideModal<AddonModQuizNavigationModalReturn>({\n            component: AddonModQuizNavigationModalComponent,\n            componentProps: {\n                navigation: this.navigation,\n                summaryShown: this.showSummary,\n                currentPage: this.attempt?.currentpage,\n                isReview: false,\n            },\n        });\n\n        if (!modalData) {\n            return;\n        }\n\n        this.changePage(modalData.page, true, modalData.slot);\n    }\n\n    /**\n     * Prepare the answers to be sent for the attempt.\n     *\n     * @param componentId Component ID.\n     * @returns Promise resolved with the answers.\n     */\n    protected prepareAnswers(componentId: number): Promise<CoreQuestionsAnswers> {\n        return CoreQuestionHelper.prepareAnswers(\n            this.questions,\n            this.getAnswers(),\n            this.offline,\n            this.component,\n            componentId,\n        );\n    }\n\n    /**\n     * Process attempt.\n     *\n     * @param userFinish Whether the user clicked to finish the attempt.\n     * @param timeUp Whether the quiz time is up.\n     * @param retrying Whether we're retrying the change.\n     * @returns Promise resolved when done.\n     */\n    protected async processAttempt(userFinish?: boolean, timeUp?: boolean, retrying?: boolean): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        // Get the answers to send.\n        let answers: CoreQuestionsAnswers = {};\n\n        if (!this.showSummary) {\n            answers = await this.prepareAnswers(this.quiz.coursemodule);\n        }\n\n        try {\n            // Send the answers.\n            await AddonModQuiz.processAttempt(\n                this.quiz,\n                this.attempt,\n                answers,\n                this.preflightData,\n                userFinish,\n                timeUp,\n                this.offline,\n            );\n        } catch (error) {\n            if (!error || error.errorcode != 'submissionoutofsequencefriendlymessage') {\n                throw error;\n            }\n\n            try {\n                // There was an error with the sequence check. Try to ammend it.\n                await this.fixSequenceChecks();\n            } catch {\n                throw error;\n            }\n\n            if (retrying) {\n                // We're already retrying, don't send the data again because it could cause an infinite loop.\n                throw error;\n            }\n\n            // Sequence checks updated, try to send the data again.\n            return this.processAttempt(userFinish, timeUp, true);\n        }\n\n        // Answers saved, cancel auto save.\n        this.autoSave.cancelAutoSave();\n        this.autoSave.hideAutoSaveError();\n\n        if (this.formElement) {\n            CoreForms.triggerFormSubmittedEvent(this.formElement, !this.offline, CoreSites.getCurrentSiteId());\n        }\n\n        return CoreQuestionHelper.clearTmpData(this.questions, this.component, this.quiz.coursemodule);\n    }\n\n    /**\n     * Scroll to a certain question.\n     *\n     * @param slot Slot of the question to scroll to.\n     */\n    protected async scrollToQuestion(slot: number): Promise<void> {\n        await CoreUtils.nextTick();\n        await CoreDirectivesRegistry.waitDirectivesReady(this.elementRef.nativeElement, 'core-question');\n        await CoreDom.scrollToElement(\n            this.elementRef.nativeElement,\n            '#addon-mod_quiz-question-' + slot,\n        );\n    }\n\n    /**\n     * Show connection error.\n     *\n     * @param ev Click event.\n     */\n    showConnectionError(ev: Event): void {\n        this.autoSave.showAutoSaveError(ev);\n    }\n\n    /**\n     * Convenience function to start the player.\n     */\n    async start(): Promise<void> {\n        try {\n            this.loaded = false;\n\n            if (!this.quizDataLoaded) {\n                // Fetch data.\n                await this.fetchData();\n\n                this.quizDataLoaded = true;\n            }\n\n            // Quiz data has been loaded, try to start or continue.\n            await this.startOrContinueAttempt();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquiz', true);\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Start or continue an attempt.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async startOrContinueAttempt(): Promise<void> {\n        if (!this.quiz || !this.quizAccessInfo) {\n            return;\n        }\n\n        let attempt = this.newAttempt ? undefined : this.lastAttempt;\n\n        // Get the preflight data and start attempt if needed.\n        attempt = await AddonModQuizHelper.getAndCheckPreflightData(\n            this.quiz,\n            this.quizAccessInfo,\n            this.preflightData,\n            attempt,\n            this.offline,\n            false,\n            'addon.mod_quiz.startattempt',\n        );\n\n        // Re-fetch attempt access information with the right attempt (might have changed because a new attempt was created).\n        this.attemptAccessInfo = await AddonModQuiz.getAttemptAccessInformation(this.quiz.id, attempt.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.attempt = attempt;\n\n        await this.loadNavigation();\n\n        if (this.attempt.state != AddonModQuizProvider.ATTEMPT_OVERDUE && !this.attempt.finishedOffline) {\n            // Attempt not overdue and not finished in offline, load page.\n            await this.loadPage(this.attempt.currentpage ?? 0);\n\n            this.initTimer();\n        } else {\n            // Attempt is overdue or finished in offline, we can only load the summary.\n            await this.loadSummary();\n        }\n    }\n\n    /**\n     * Quiz time has finished.\n     */\n    timeUp(): void {\n        if (this.timeUpCalled) {\n            return;\n        }\n\n        this.timeUpCalled = true;\n        this.finishAttempt(false, true);\n    }\n\n    /**\n     * Stop auto-saving answers.\n     */\n    protected stopAutoSave(): void {\n        this.autoSave.cancelAutoSave();\n        this.autoSave.stopCheckChangesProcess();\n        this.autoSaveErrorSubscription?.unsubscribe();\n    }\n\n}\n\n/**\n * Question with some calculated data for the view.\n */\ntype QuizQuestion = CoreQuestionQuestionParsed & {\n    readableMark?: string;\n};\n","export default \":host .addon-mod_quiz-question-note p {\\n  margin-top: 2px;\\n  margin-bottom: 2px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL3F1aXovcGFnZXMvcmV2aWV3L3Jldmlldy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksZUFBQTtFQUNBLGtCQUFBO0FBQVIiLCJmaWxlIjoic3JjL2FkZG9ucy9tb2QvcXVpei9wYWdlcy9yZXZpZXcvcmV2aWV3LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICAuYWRkb24tbW9kX3F1aXotcXVlc3Rpb24tbm90ZSBwIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CoreQuestionQuestionParsed } from '@features/question/services/question';\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { IonContent, IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreTime } from '@singletons/time';\nimport {\n    AddonModQuizNavigationModalComponent,\n    AddonModQuizNavigationModalReturn,\n    AddonModQuizNavigationQuestion,\n} from '../../components/navigation-modal/navigation-modal';\nimport {\n    AddonModQuiz,\n    AddonModQuizAttemptWSData,\n    AddonModQuizCombinedReviewOptions,\n    AddonModQuizGetAttemptReviewResponse,\n    AddonModQuizProvider,\n    AddonModQuizQuizWSData,\n    AddonModQuizWSAdditionalData,\n} from '../../services/quiz';\nimport { AddonModQuizHelper } from '../../services/quiz-helper';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that allows reviewing a quiz attempt.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-review',\n    templateUrl: 'review.html',\n    styleUrls: ['review.scss'],\n})\nexport class AddonModQuizReviewPage implements OnInit {\n\n    @ViewChild(IonContent) content?: IonContent;\n\n    attempt?: AddonModQuizAttemptWSData; // The attempt being reviewed.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    showAll = false; // Whether to view all questions in the same page.\n    numPages = 1; // Number of pages.\n    showCompleted = false; // Whether to show completed time.\n    additionalData?: AddonModQuizWSAdditionalData[]; // Additional data to display for the attempt.\n    loaded = false; // Whether data has been loaded.\n    navigation: AddonModQuizNavigationQuestion[] = []; // List of questions to navigate them.\n    questions: QuizQuestion[] = []; // Questions of the current page.\n    nextPage = -2; // Next page.\n    previousPage = -2; // Previous page.\n    readableState?: string;\n    readableGrade?: string;\n    readableMark?: string;\n    timeTaken?: string;\n    overTime?: string;\n    quiz?: AddonModQuizQuizWSData; // The quiz the attempt belongs to.\n    courseId!: number; // The course ID the quiz belongs to.\n    cmId!: number; // Course module id the attempt belongs to.\n\n    protected attemptId!: number; // The attempt being reviewed.\n    protected currentPage!: number; // The current page being reviewed.\n    protected options?: AddonModQuizCombinedReviewOptions; // Review options.\n    protected logView: () => void;\n\n    constructor(\n        protected elementRef: ElementRef,\n    ) {\n        this.logView = CoreTime.once(() => this.performLogView(true, {\n            showAllDisabled: !this.showAll,\n            page: this.currentPage,\n        }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.attemptId = CoreNavigator.getRequiredRouteNumberParam('attemptId');\n            this.currentPage = CoreNavigator.getRouteNumberParam('page') || -1;\n            this.showAll = this.currentPage == -1;\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        try {\n            await this.fetchData();\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Change the current page. If slot is supplied, try to scroll to that question.\n     *\n     * @param page Page to load. -1 means all questions in same page.\n     * @param slot Slot of the question to scroll to.\n     */\n    async changePage(page: number, slot?: number): Promise<void> {\n        if (slot !== undefined && (this.attempt?.currentpage == -1 || page == this.currentPage)) {\n            // Scrol to a certain question in the current page.\n            this.scrollToQuestion(slot);\n\n            return;\n        } else if (page == this.currentPage) {\n            // If the user is navigating to the current page and no question specified, we do nothing.\n            return;\n        }\n\n        this.loaded = false;\n        this.content?.scrollToTop();\n\n        try {\n            await this.loadPage(page);\n\n            this.performLogView(false, { page });\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n        } finally {\n            this.loaded = true;\n\n            if (slot !== undefined) {\n                // Scroll to the question.\n                this.scrollToQuestion(slot);\n            }\n        }\n    }\n\n    /**\n     * Convenience function to get the quiz data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        try {\n            this.quiz = await AddonModQuiz.getQuiz(this.courseId, this.cmId);\n\n            this.options = await AddonModQuiz.getCombinedReviewOptions(this.quiz.id, { cmId: this.cmId });\n\n            // Load the navigation data.\n            await this.loadNavigation();\n\n            // Load questions.\n            await this.loadPage(this.currentPage);\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquiz', true);\n        }\n    }\n\n    /**\n     * Load a page questions.\n     *\n     * @param page The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async loadPage(page: number): Promise<void> {\n        const data = await AddonModQuiz.getAttemptReview(this.attemptId, { page, cmId: this.quiz?.coursemodule });\n\n        this.attempt = data.attempt;\n        this.attempt.currentpage = page;\n        this.currentPage = page;\n\n        // Set the summary data.\n        this.setSummaryCalculatedData(data);\n\n        this.questions = data.questions;\n        this.nextPage = page + 1;\n        this.previousPage = page - 1;\n\n        this.questions.forEach((question) => {\n            // Get the readable mark for each question.\n            question.readableMark = AddonModQuizHelper.getQuestionMarkFromHtml(question.html);\n\n            // Extract the question info box.\n            CoreQuestionHelper.extractQuestionInfoBox(question, '.info');\n        });\n    }\n\n    /**\n     * Load data to navigate the questions using the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadNavigation(): Promise<void> {\n        // Get all questions in single page to retrieve all the questions.\n        const data = await AddonModQuiz.getAttemptReview(this.attemptId, { page: -1, cmId: this.quiz?.coursemodule });\n\n        this.navigation = data.questions;\n\n        this.navigation.forEach((question) => {\n            question.stateClass = CoreQuestionHelper.getQuestionStateClass(question.state || '');\n        });\n\n        const lastQuestion = data.questions[data.questions.length - 1];\n        this.numPages = lastQuestion ? lastQuestion.page + 1 : 0;\n    }\n\n    /**\n     * Refreshes data.\n     *\n     * @param refresher Refresher\n     */\n    async refreshData(refresher: IonRefresher): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModQuiz.invalidateQuizData(this.courseId));\n        promises.push(AddonModQuiz.invalidateAttemptReview(this.attemptId));\n        if (this.quiz) {\n            promises.push(AddonModQuiz.invalidateCombinedReviewOptionsForUser(this.quiz.id));\n        }\n\n        await CoreUtils.ignoreErrors(Promise.all(promises));\n\n        try {\n            await this.fetchData();\n        } finally {\n            refresher.complete();\n        }\n    }\n\n    /**\n     * Scroll to a certain question.\n     *\n     * @param slot Slot of the question to scroll to.\n     */\n    protected scrollToQuestion(slot: number): void {\n        CoreDom.scrollToElement(\n            this.elementRef.nativeElement,\n            `#addon-mod_quiz-question-${slot}`,\n        );\n    }\n\n    /**\n     * Calculate review summary data.\n     *\n     * @param data Result of getAttemptReview.\n     */\n    protected setSummaryCalculatedData(data: AddonModQuizGetAttemptReviewResponse): void {\n        if (!this.attempt || !this.quiz) {\n            return;\n        }\n\n        this.readableState = AddonModQuiz.getAttemptReadableStateName(this.attempt.state ?? '');\n\n        if (this.attempt.state != AddonModQuizProvider.ATTEMPT_FINISHED) {\n            return;\n        }\n\n        this.showCompleted = true;\n        this.additionalData = data.additionaldata;\n\n        const timeTaken = (this.attempt.timefinish || 0) - (this.attempt.timestart || 0);\n        if (timeTaken > 0) {\n            // Format time taken.\n            this.timeTaken = CoreTime.formatTime(timeTaken);\n\n            // Calculate overdue time.\n            if (this.quiz.timelimit && timeTaken > this.quiz.timelimit + 60) {\n                this.overTime = CoreTime.formatTime(timeTaken - this.quiz.timelimit);\n            }\n        } else {\n            this.timeTaken = undefined;\n        }\n\n        // Treat grade.\n        if (this.options && this.options.someoptions.marks >= AddonModQuizProvider.QUESTION_OPTIONS_MARK_AND_MAX &&\n                AddonModQuiz.quizHasGrades(this.quiz)) {\n\n            if (data.grade === null || data.grade === undefined) {\n                this.readableGrade = AddonModQuiz.formatGrade(data.grade, this.quiz.decimalpoints);\n            } else {\n                // Show raw marks only if they are different from the grade (like on the entry page).\n                if (this.quiz.grade != this.quiz.sumgrades) {\n                    this.readableMark = Translate.instant('addon.mod_quiz.outofshort', { $a: {\n                        grade: AddonModQuiz.formatGrade(this.attempt.sumgrades, this.quiz.decimalpoints),\n                        maxgrade: AddonModQuiz.formatGrade(this.quiz.sumgrades, this.quiz.decimalpoints),\n                    } });\n                }\n\n                // Now the scaled grade.\n                const gradeObject: Record<string, unknown> = {\n                    grade: AddonModQuiz.formatGrade(Number(data.grade), this.quiz.decimalpoints),\n                    maxgrade: AddonModQuiz.formatGrade(this.quiz.grade, this.quiz.decimalpoints),\n                };\n\n                if (this.quiz.grade != 100) {\n                    gradeObject.percent = AddonModQuiz.formatGrade(\n                        (this.attempt.sumgrades ?? 0) * 100 / (this.quiz.sumgrades ?? 1),\n                        this.quiz.decimalpoints,\n                    );\n                    this.readableGrade = Translate.instant('addon.mod_quiz.outofpercent', { $a: gradeObject });\n                } else {\n                    this.readableGrade = Translate.instant('addon.mod_quiz.outof', { $a: gradeObject });\n                }\n            }\n        }\n\n        // Treat additional data.\n        this.additionalData.forEach((data) => {\n            // Remove help links from additional data.\n            data.content = CoreDomUtils.removeElementFromHtml(data.content, '.helptooltip');\n        });\n    }\n\n    /**\n     * Switch mode: all questions in same page OR one page at a time.\n     */\n    async switchMode(): Promise<void> {\n        this.showAll = !this.showAll;\n\n        // Load all questions or first page, depending on the mode.\n        await this.loadPage(this.showAll ? -1 : 0);\n\n        this.performLogView(false, { showAllDisabled: !this.showAll });\n    }\n\n    async openNavigation(): Promise<void> {\n        // Create the navigation modal.\n        const modalData = await CoreDomUtils.openSideModal<AddonModQuizNavigationModalReturn>({\n            component: AddonModQuizNavigationModalComponent,\n            componentProps: {\n                navigation: this.navigation,\n                summaryShown: false,\n                currentPage: this.attempt?.currentpage,\n                isReview: true,\n            },\n        });\n\n        if (!modalData) {\n            return;\n        }\n\n        this.changePage(modalData.page, modalData.slot);\n    }\n\n    /**\n     * Perform log view.\n     *\n     * @param logInLMS Whether to log in LMS too or only in analytics.\n     * @param options Other options.\n     */\n    protected async performLogView(logInLMS = false, options: LogViewOptions = {}): Promise<void> {\n        if (!this.quiz) {\n            return;\n        }\n\n        if (logInLMS) {\n            await CoreUtils.ignoreErrors(AddonModQuiz.logViewAttemptReview(this.attemptId, this.quiz.id));\n        }\n\n        let url = `/mod/quiz/review.php?attempt=${this.attemptId}&cmid=${this.cmId}`;\n        if (options.showAllDisabled) {\n            url += '&showall=0';\n        } else if (options.page && options.page > 0) {\n            url += `&page=${ options.page}`;\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_quiz_view_attempt_review',\n            name: this.quiz.name,\n            data: { id: this.attemptId, quizid: this.quiz.id, page: options.page, category: 'quiz' },\n            url: url,\n        });\n    }\n\n}\n\n/**\n * Question with some calculated data for the view.\n */\ntype QuizQuestion = CoreQuestionQuestionParsed & {\n    readableMark?: string;\n};\n\ntype LogViewOptions = {\n    page?: number; // Page being viewed (if viewing pages);\n    showAllDisabled?: boolean; // Whether the showAll option has just been disabled.\n};\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModQuizComponentsModule } from './components/components.module';\n\nimport { AddonModQuizIndexPage } from './pages/index';\nimport { AddonModQuizAttemptPage } from '@addons/mod/quiz/pages/attempt/attempt';\nimport { CoreQuestionComponentsModule } from '@features/question/components/components.module';\nimport { AddonModQuizPlayerPage } from '@addons/mod/quiz/pages/player/player';\nimport { CanLeaveGuard } from '@guards/can-leave';\nimport { AddonModQuizReviewPage } from '@addons/mod/quiz/pages/review/review';\n\nconst routes: Routes = [\n    {\n        path: ':courseId/:cmId',\n        component: AddonModQuizIndexPage,\n    },\n    {\n        path: ':courseId/:cmId/player',\n        component: AddonModQuizPlayerPage,\n        canDeactivate: [CanLeaveGuard],\n    },\n    {\n        path: ':courseId/:cmId/attempt/:attemptId',\n        component: AddonModQuizAttemptPage,\n    },\n    {\n        path: ':courseId/:cmId/review/:attemptId',\n        component: AddonModQuizReviewPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonModQuizComponentsModule,\n        CoreQuestionComponentsModule,\n    ],\n    declarations: [\n        AddonModQuizIndexPage,\n        AddonModQuizAttemptPage,\n        AddonModQuizPlayerPage,\n        AddonModQuizReviewPage,\n    ],\n})\nexport class AddonModQuizLazyModule {}\n"],"sourceRoot":"webpack:///"}