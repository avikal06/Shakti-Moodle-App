{"version":3,"sources":["./src/addons/mod/folder/pages/index/index.html","./src/addons/mod/folder/folder-lazy.module.ts","./src/addons/mod/folder/pages/index/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,m+BAAo6B,oCAAoC,2SAA2S,E;;;;;;;;;;;;ACAlwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AACc;AAEC;AACwB;AAExB;AAExD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,uBAAuB;QAC7B,SAAS,EAAE,oEAAuB;KACrC;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,UAAU,EAAE,kBAAkB;QAC9B,SAAS,EAAE,MAAM;KACpB;CACJ,CAAC;IAYW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAVpC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;YAChB,4FAA8B;SACjC;QACD,YAAY,EAAE;YACV,oEAAuB;SAC1B;KACJ,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;AC5CrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAE4B;AACkC;AAC3C;AACwB;AAI5E;;GAEG;IAKU,uBAAuB,SAAvB,uBAAwB,SAAQ,4GAA8D;IAOvG;;OAEG;IACH,QAAQ;;QACJ,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,iEAAa,CAAC,aAAa,CAAuB,gBAAgB,CAAC,CAAC;QAC1F,IAAI,CAAC,SAAS,GAAG,iEAAa,CAAC,aAAa,CAAoC,WAAW,CAAC,CAAC;QAE7F,IAAI,CAAC,KAAK,GAAG,WAAI,CAAC,SAAS,0CAAE,QAAQ,KAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAC9D,CAAC;CAEJ;;gCAhBI,uDAAS,SAAC,oFAA4B;;AAF9B,uBAAuB;IAJnC,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,2NAAyB;KAC5B,CAAC;GACW,uBAAuB,CAkBnC;AAlBmC","file":"folder-lazy-module.js","sourcesContent":["export default \"<ion-header [collapsible]=\\\"!subfolder\\\">\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"module?.id\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <!-- The buttons defined by the component will be added in here. -->\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"subfolder || activityComponent?.showLoading\\\"\\r\\n        (ionRefresh)=\\\"activityComponent?.doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <addon-mod-folder-index [module]=\\\"module\\\" [courseId]=\\\"courseId\\\" [folderInstance]=\\\"folderInstance\\\" [subfolder]=\\\"subfolder\\\"\\r\\n        (dataRetrieved)=\\\"updateData($event)\\\">\\r\\n    </addon-mod-folder-index>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModFolderComponentsModule } from './components/components.module';\n\nimport { AddonModFolderIndexPage } from './pages/index';\n\nconst routes: Routes = [\n    {\n        path: ':courseId/:cmId/:hash',\n        component: AddonModFolderIndexPage,\n    },\n    {\n        path: ':courseId/:cmId',\n        redirectTo: ':courseId/:cmId/', // Fake \"hash\".\n        pathMatch: 'full',\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonModFolderComponentsModule,\n    ],\n    declarations: [\n        AddonModFolderIndexPage,\n    ],\n})\nexport class AddonModFolderLazyModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { CoreCourseModuleMainActivityPage } from '@features/course/classes/main-activity-page';\nimport { CoreNavigator } from '@services/navigator';\nimport { AddonModFolderIndexComponent } from '../../components/index/index';\nimport { AddonModFolderFolder } from '../../services/folder';\nimport { AddonModFolderFolderFormattedData } from '../../services/folder-helper';\n\n/**\n * Page that displays a folder.\n */\n@Component({\n    selector: 'page-addon-mod-folder-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModFolderIndexPage extends CoreCourseModuleMainActivityPage<AddonModFolderIndexComponent> implements OnInit {\n\n    @ViewChild(AddonModFolderIndexComponent) activityComponent?: AddonModFolderIndexComponent;\n\n    folderInstance?: AddonModFolderFolder;\n    subfolder?: AddonModFolderFolderFormattedData;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.folderInstance = CoreNavigator.getRouteParam<AddonModFolderFolder>('folderInstance');\n        this.subfolder = CoreNavigator.getRouteParam<AddonModFolderFolderFormattedData>('subfolder');\n\n        this.title = this.subfolder?.filename || this.module.name;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}