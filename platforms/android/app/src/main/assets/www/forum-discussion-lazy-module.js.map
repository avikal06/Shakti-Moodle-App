{"version":3,"sources":["./src/addons/mod/forum/pages/discussion/discussion.html","./src/addons/mod/forum/forum-discussion-lazy.module.ts","./src/addons/mod/forum/pages/discussion/discussion.scss","./src/addons/mod/forum/pages/discussion/discussion.ts","./src/core/classes/items-management/swipe-navigation-items-manager.ts"],"names":[],"mappings":"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","file":"forum-discussion-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1 *ngIf=\\\"startingPost\\\">\\r\\n                <core-format-text contextLevel=\\\"module\\\" [text]=\\\"startingPost.subject\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <!-- The context menu will be added in here. -->\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<core-navbar-buttons slot=\\\"end\\\">\\r\\n    <core-context-menu>\\r\\n        <core-context-menu-item *ngIf=\\\"discussionLoaded && !postHasOffline && isOnline\\\" [priority]=\\\"650\\\"\\r\\n            [content]=\\\"'addon.mod_forum.refreshposts' | translate\\\" [iconAction]=\\\"refreshIcon\\\" [closeOnClick]=\\\"false\\\"\\r\\n            (action)=\\\"doRefresh(null, $event)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item *ngIf=\\\"discussionLoaded && isMobile && postHasOffline && isOnline\\\" [priority]=\\\"550\\\"\\r\\n            [content]=\\\"'core.settings.synchronizenow' | translate\\\" [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\"\\r\\n            (action)=\\\"doRefresh(null, $event, true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'flat-oldest'\\\" [priority]=\\\"500\\\"\\r\\n            [content]=\\\"'addon.mod_forum.modeflatoldestfirst' | translate\\\" iconAction=\\\"fas-arrow-down\\\" (action)=\\\"changeSort('flat-oldest')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'flat-newest'\\\" [priority]=\\\"450\\\"\\r\\n            [content]=\\\"'addon.mod_forum.modeflatnewestfirst' | translate\\\" iconAction=\\\"fas-arrow-up\\\" (action)=\\\"changeSort('flat-newest')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'nested'\\\" [priority]=\\\"400\\\" [content]=\\\"'addon.mod_forum.modenested' | translate\\\"\\r\\n            iconAction=\\\"fas-right-left\\\" (action)=\\\"changeSort('nested')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canlock || discussion.locked\\\" [priority]=\\\"300\\\"\\r\\n            [content]=\\\"'addon.mod_forum.lockdiscussion' | translate\\\" iconAction=\\\"fas-lock\\\" (action)=\\\"setLockState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canlock || !discussion.locked\\\" [priority]=\\\"300\\\"\\r\\n            [content]=\\\"'addon.mod_forum.unlockdiscussion' | translate\\\" iconAction=\\\"fas-unlock\\\" (action)=\\\"setLockState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !canPin || discussion.pinned\\\" [priority]=\\\"250\\\"\\r\\n            [content]=\\\"'addon.mod_forum.pindiscussion' | translate\\\" iconAction=\\\"fas-map-pin\\\" (action)=\\\"setPinState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !canPin || !discussion.pinned\\\" [priority]=\\\"250\\\"\\r\\n            [content]=\\\"'addon.mod_forum.unpindiscussion' | translate\\\" [iconSlash]=\\\"true\\\" iconAction=\\\"fas-map-pin\\\"\\r\\n            (action)=\\\"setPinState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canfavourite || discussion.starred\\\" [priority]=\\\"200\\\"\\r\\n            [content]=\\\"'addon.mod_forum.addtofavourites' | translate\\\" iconAction=\\\"fas-star\\\" (action)=\\\"toggleFavouriteState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canfavourite || !discussion.starred\\\" [priority]=\\\"200\\\"\\r\\n            [content]=\\\"'addon.mod_forum.removefromfavourites' | translate\\\" iconAction=\\\"fas-star\\\" [iconSlash]=\\\"true\\\"\\r\\n            (action)=\\\"toggleFavouriteState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!externalUrl\\\" [priority]=\\\"100\\\" [content]=\\\"'core.openinbrowser' | translate\\\" [href]=\\\"externalUrl\\\"\\r\\n            iconAction=\\\"fas-up-right-from-square\\\" [showBrowserWarning]=\\\"false\\\"></core-context-menu-item>\\r\\n    </core-context-menu>\\r\\n</core-navbar-buttons>\\r\\n<ion-content [core-swipe-navigation]=\\\"discussions\\\" class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!discussionLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"discussionLoaded\\\">\\r\\n        <!-- Discussion replies found to be synchronized -->\\r\\n        <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"postHasOffline || hasOfflineRatings\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-triangle-exclamation\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: discussionStr} }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <!-- Cut-off date or due date message -->\\r\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"availabilityMessage\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-circle-info\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ availabilityMessage }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"discussion && discussion.locked\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-lock\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'addon.mod_forum.discussionlocked' | translate }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <!-- Q&A message. -->\\r\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"showQAMessage\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-circle-info\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'addon.mod_forum.qandanotify' | translate }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <div *ngIf=\\\"startingPost\\\" class=\\\"ion-margin-bottom\\\">\\r\\n            <addon-mod-forum-post [post]=\\\"startingPost\\\" [discussion]=\\\"discussion\\\" [courseId]=\\\"courseId\\\" [highlight]=\\\"true\\\"\\r\\n                [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [formData]=\\\"formData\\\"\\r\\n                [originalData]=\\\"originalData\\\" [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\" [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\"\\r\\n                [leavingPage]=\\\"leavingPage\\\" (onPostChange)=\\\"postListChanged()\\\">\\r\\n            </addon-mod-forum-post>\\r\\n        </div>\\r\\n\\r\\n        <ion-card *ngIf=\\\"sort != 'nested' && posts.length\\\">\\r\\n            <ng-container *ngFor=\\\"let post of posts; first as first\\\">\\r\\n                <core-spacer *ngIf=\\\"!first\\\"></core-spacer>\\r\\n                <addon-mod-forum-post [post]=\\\"post\\\" [courseId]=\\\"courseId\\\" [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\"\\r\\n                    [componentId]=\\\"cmId\\\" [formData]=\\\"formData\\\" [originalData]=\\\"originalData\\\" [parentSubject]=\\\"postSubjects[post.parentid]\\\"\\r\\n                    [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\" [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\"\\r\\n                    [leavingPage]=\\\"leavingPage\\\" (onPostChange)=\\\"postListChanged()\\\">\\r\\n                </addon-mod-forum-post>\\r\\n            </ng-container>\\r\\n        </ion-card>\\r\\n\\r\\n        <ng-container *ngIf=\\\"sort == 'nested' && posts.length\\\">\\r\\n            <ng-container *ngFor=\\\"let post of posts\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"nestedPosts; context: {post: post}\\\"></ng-container>\\r\\n            </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-template #nestedPosts let-post=\\\"post\\\">\\r\\n            <ion-card>\\r\\n                <addon-mod-forum-post [post]=\\\"post\\\" [courseId]=\\\"courseId\\\" [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\"\\r\\n                    [componentId]=\\\"cmId\\\" [formData]=\\\"formData\\\" [originalData]=\\\"originalData\\\" [parentSubject]=\\\"postSubjects[post.parentid]\\\"\\r\\n                    [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\" [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\"\\r\\n                    [leavingPage]=\\\"leavingPage\\\" (onPostChange)=\\\"postListChanged()\\\">\\r\\n                </addon-mod-forum-post>\\r\\n            </ion-card>\\r\\n            <div class=\\\"ion-padding-start\\\" *ngIf=\\\"post.children && post.children.length && post.children[0].subject\\\">\\r\\n                <ng-container *ngFor=\\\"let child of post.children\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"nestedPosts; context: {post: child}\\\"></ng-container>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddonModForumComponentsModule } from '@addons/mod/forum/components/components.module';\nimport { CanLeaveGuard } from '@guards/can-leave';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModForumDiscussionPage } from '@addons/mod/forum/pages/discussion/discussion';\n\nconst routes: Routes = [{\n    path: '',\n    component: AddonModForumDiscussionPage,\n    canDeactivate: [CanLeaveGuard],\n}];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonModForumComponentsModule,\n    ],\n    declarations: [\n        AddonModForumDiscussionPage,\n    ],\n})\nexport class AddonForumDiscussionLazyModule {}\n","export default \":host .addon-forum-reply-button .label {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2ZvcnVtL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksU0FBQTtBQURSIiwiZmlsZSI6InNyYy9hZGRvbnMvbW9kL2ZvcnVtL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG5cclxuICAgIC5hZGRvbi1mb3J1bS1yZXBseS1idXR0b24gLmxhYmVsIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ContextLevel, CoreConstants } from '@/core/constants';\nimport { Component, OnDestroy, ViewChild, OnInit, AfterViewInit, ElementRef, Optional } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreRatingInfo, CoreRatingProvider } from '@features/rating/services/rating';\nimport { CoreRatingOffline } from '@features/rating/services/rating-offline';\nimport { CoreRatingSyncProvider } from '@features/rating/services/rating-sync';\nimport { CoreUser } from '@features/user/services/user';\nimport { CanLeave } from '@guards/can-leave';\nimport { IonContent, IonRefresher } from '@ionic/angular';\nimport { CoreNetwork } from '@services/network';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreArray } from '@singletons/array';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { Subscription } from 'rxjs';\nimport { AddonModForumDiscussionsSource } from '../../classes/forum-discussions-source';\nimport { AddonModForumDiscussionsSwipeManager } from '../../classes/forum-discussions-swipe-manager';\nimport {\n    AddonModForum,\n    AddonModForumAccessInformation,\n    AddonModForumData,\n    AddonModForumDiscussion,\n    AddonModForumPost,\n    AddonModForumProvider,\n    AddonModForumPostFormData,\n    AddonModForumChangeDiscussionData,\n    AddonModForumReplyDiscussionData,\n} from '../../services/forum';\nimport { AddonModForumHelper } from '../../services/forum-helper';\nimport { AddonModForumOffline } from '../../services/forum-offline';\nimport { AddonModForumSync, AddonModForumSyncProvider } from '../../services/forum-sync';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\ntype SortType = 'flat-newest' | 'flat-oldest' | 'nested';\n\ntype Post = AddonModForumPost & { children?: Post[] };\n\n/**\n * Page that displays a forum discussion.\n */\n@Component({\n    selector: 'page-addon-mod-forum-discussion',\n    templateUrl: 'discussion.html',\n    styleUrls: ['discussion.scss'],\n})\nexport class AddonModForumDiscussionPage implements OnInit, AfterViewInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content!: IonContent;\n\n    courseId?: number;\n    discussionId!: number;\n    forum: Partial<AddonModForumData> = {};\n    accessInfo: AddonModForumAccessInformation = {};\n    discussion?: AddonModForumDiscussion;\n    discussions?: AddonModForumDiscussionDiscussionsSwipeManager;\n    startingPost?: Post;\n    posts: Post[] = [];\n    discussionLoaded = false;\n    postSubjects!: { [id: string]: string };\n    isOnline!: boolean;\n    postHasOffline!: boolean;\n    sort: SortType = 'nested';\n    trackPosts!: boolean;\n    formData: AddonModForumSharedPostFormData = {\n        replyingTo: 0,\n        isEditing: false,\n        subject: '',\n        message: null,\n        files: [],\n        isprivatereply: false,\n    };\n\n    originalData: Omit<AddonModForumPostFormData, 'id'> = {\n        subject: null,\n        message: null,\n        files: [],\n        isprivatereply: false,\n    };\n\n    refreshIcon = CoreConstants.ICON_LOADING;\n    syncIcon = CoreConstants.ICON_LOADING;\n    discussionStr = '';\n    component = AddonModForumProvider.COMPONENT;\n    cmId?: number;\n    canPin = false;\n    availabilityMessage: string | null = null;\n    showQAMessage = false;\n    leavingPage = false;\n    externalUrl?: string;\n\n    protected forumId?: number;\n    protected postId?: number;\n    protected parent?: number;\n    protected onlineObserver?: Subscription;\n    protected syncObserver?: CoreEventObserver;\n    protected syncManualObserver?: CoreEventObserver;\n\n    ratingInfo?: CoreRatingInfo;\n    hasOfflineRatings = false;\n    protected ratingOfflineObserver?: CoreEventObserver;\n    protected ratingSyncObserver?: CoreEventObserver;\n    protected changeDiscObserver?: CoreEventObserver;\n\n    constructor(\n        @Optional() protected splitView: CoreSplitViewComponent,\n        protected elementRef: ElementRef,\n        protected route: ActivatedRoute,\n    ) {}\n\n    get isMobile(): boolean {\n        return CoreScreen.isMobile;\n    }\n\n    async ngOnInit(): Promise<void> {\n        try {\n            const routeData = this.route.snapshot.data;\n            this.courseId = CoreNavigator.getRouteNumberParam('courseId');\n            this.cmId = CoreNavigator.getRouteNumberParam('cmId');\n            this.forumId = CoreNavigator.getRouteNumberParam('forumId');\n            this.discussion = CoreNavigator.getRouteParam<AddonModForumDiscussion>('discussion');\n            this.discussionId = this.discussion\n                ? this.discussion.discussion\n                : CoreNavigator.getRequiredRouteNumberParam('discussionId');\n            this.trackPosts = CoreNavigator.getRouteBooleanParam('trackPosts') || false;\n            this.postId = CoreNavigator.getRouteNumberParam('postId');\n            this.parent = CoreNavigator.getRouteNumberParam('parent');\n\n            if (this.courseId && this.cmId && (routeData.swipeEnabled ?? true)) {\n                this.discussions = new AddonModForumDiscussionDiscussionsSwipeManager(\n                    CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                        AddonModForumDiscussionsSource,\n                        [this.courseId, this.cmId, routeData.discussionsPathPrefix ?? ''],\n                    ),\n                );\n\n                await this.discussions.start();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            this.goBack();\n\n            return;\n        }\n\n        this.isOnline = CoreNetwork.isOnline();\n        this.externalUrl = CoreSites.getCurrentSite()?.createSiteUrl('/mod/forum/discuss.php', { d: this.discussionId.toString() });\n        this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n            });\n        });\n\n        this.discussionStr = Translate.instant('addon.mod_forum.discussion');\n    }\n\n    /**\n     * View loaded.\n     */\n    async ngAfterViewInit(): Promise<void> {\n        this.sort = this.parent\n            ? 'nested' // Force nested order.\n            : await this.getUserSort();\n\n        await this.fetchPosts(true, false, true);\n\n        const scrollTo = this.postId || this.parent;\n        if (scrollTo) {\n            // Scroll to the post.\n            CoreDom.scrollToElement(\n                this.elementRef.nativeElement,\n                '#addon-mod_forum-post-' + scrollTo,\n            );\n        }\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    async ionViewDidEnter(): Promise<void> {\n        if (this.syncObserver) {\n            // Already setup.\n            return;\n        }\n\n        // The discussion object was not passed as parameter.\n        if (!this.discussion) {\n            await this.loadDiscussion(this.discussionId, this.forumId, this.cmId);\n        }\n\n        const discussion = this.discussion;\n\n        // Refresh data if this discussion is synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonModForumSyncProvider.AUTO_SYNCED, data => {\n            if (data.forumId == this.forumId && this.discussionId == data.discussionId\n                    && data.userId == CoreSites.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, CoreSites.getCurrentSiteId());\n\n        // Refresh data if this forum discussion is synchronized from discussions list.\n        this.syncManualObserver = CoreEvents.on(AddonModForumSyncProvider.MANUAL_SYNCED, data => {\n            if (data.source != 'discussion' && data.forumId == this.forumId &&\n                    data.userId == CoreSites.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, CoreSites.getCurrentSiteId());\n\n        // Invalidate discussion list if it was not read.\n        if (this.forumId && discussion && discussion.numunread > 0) {\n            AddonModForum.invalidateDiscussionsList(this.forumId);\n        }\n\n        // Listen for offline ratings saved and synced.\n        this.ratingOfflineObserver = CoreEvents.on(CoreRatingProvider.RATING_SAVED_EVENT, (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = true;\n            }\n        });\n\n        this.ratingSyncObserver = CoreEvents.on(CoreRatingSyncProvider.SYNCED_EVENT, async (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = false;\n            }\n        });\n\n        this.changeDiscObserver = CoreEvents.on(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data => {\n            if (discussion && this.forumId && (this.forumId === data.forumId || data.cmId === this.cmId)) {\n                AddonModForum.invalidateDiscussionsList(this.forumId).finally(() => {\n                    if (data.locked !== undefined) {\n                        discussion.locked = data.locked;\n                    }\n                    if (data.pinned !== undefined) {\n                        discussion.pinned = data.pinned;\n                    }\n                    if (data.starred !== undefined) {\n                        discussion.starred = data.starred;\n                    }\n\n                    if (data.deleted !== undefined && data.deleted) {\n                        if (!data.post?.parentid) {\n                            this.goBack();\n                        } else {\n                            this.discussionLoaded = false;\n                            this.refreshPosts();\n                        }\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (AddonModForumHelper.hasPostDataChanged(this.formData, this.originalData)) {\n            // Show confirmation if some data has been modified.\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        // Delete the local files from the tmp folder.\n        CoreFileUploader.clearTmpFiles(this.formData.files);\n\n        this.leavingPage = true;\n\n        return true;\n    }\n\n    /**\n     * Helper function to go back.\n     */\n    protected goBack(): void {\n        if (this.leavingPage) {\n            return;\n        }\n\n        if (this.splitView?.outletActivated) {\n            CoreNavigator.navigate('../');\n        } else {\n            CoreNavigator.back();\n        }\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.syncObserver && this.syncObserver.off();\n        this.syncManualObserver && this.syncManualObserver.off();\n        this.ratingOfflineObserver && this.ratingOfflineObserver.off();\n        this.ratingSyncObserver && this.ratingSyncObserver.off();\n        this.changeDiscObserver && this.changeDiscObserver.off();\n        delete this.syncObserver;\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.onlineObserver && this.onlineObserver.unsubscribe();\n        this.discussions && this.discussions.destroy();\n    }\n\n    /**\n     * Get sort type configured by the current user.\n     *\n     * @returns Promise resolved with the sort type.\n     */\n    protected async getUserSort(): Promise<SortType> {\n        try {\n            const value = await CoreSites.getRequiredCurrentSite().getLocalSiteConfig<SortType>('AddonModForumDiscussionSort');\n\n            return value;\n        } catch (error) {\n            try {\n                const value = await CoreUser.getUserPreference('forum_displaymode');\n\n                switch (Number(value)) {\n                    case 1:\n                        return 'flat-oldest';\n                    case -1:\n                        return 'flat-newest';\n                    case 3:\n                        return 'nested';\n                    case 2: // Threaded not implemented.\n                    default:\n                        // Not set, use default sort.\n                        // @TODO add fallback to $CFG->forum_displaymode.\n                }\n            } catch {\n                // Ignore errors.\n            }\n        }\n\n        return 'flat-oldest';\n    }\n\n    /**\n     * Convenience function to get the forum.\n     *\n     * @returns Promise resolved with the forum.\n     */\n    protected fetchForum(): Promise<AddonModForumData> {\n        if (this.courseId && this.cmId) {\n            return AddonModForum.getForum(this.courseId, this.cmId);\n        }\n\n        if (this.courseId && this.forumId) {\n            return AddonModForum.getForumById(this.courseId, this.forumId);\n        }\n\n        throw new Error('Cannot get the forum');\n    }\n\n    /**\n     * Convenience function to get the posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @param forceMarkAsRead Whether to mark all posts as read.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchPosts(sync?: boolean, showErrors?: boolean, forceMarkAsRead?: boolean): Promise<void> {\n        let onlinePosts: AddonModForumPost[] = [];\n        const offlineReplies: AddonModForumPost[] = [];\n        let hasUnreadPosts = false;\n\n        try {\n            if (sync) {\n                // Try to synchronize the forum.\n                await CoreUtils.ignoreErrors(this.syncDiscussion(!!showErrors));\n            }\n\n            const response = await AddonModForum.getDiscussionPosts(this.discussionId, { cmId: this.cmId });\n            const replies = await AddonModForumOffline.getDiscussionReplies(this.discussionId);\n            this.ratingInfo = response.ratinginfo;\n\n            onlinePosts = response.posts;\n            this.courseId = response.courseid || this.courseId;\n            this.forumId = response.forumid || this.forumId;\n\n            // Check if there are responses stored in offline.\n            this.postHasOffline = !!replies.length;\n            const convertPromises: Promise<void>[] = [];\n\n            // Index posts to allow quick access. Also check unread field.\n            const onlinePostsMap: Record<string, AddonModForumPost> = {};\n            onlinePosts.forEach((post) => {\n                onlinePostsMap[post.id] = post;\n                hasUnreadPosts = hasUnreadPosts || !!post.unread;\n            });\n\n            replies.forEach((offlineReply) => {\n                // If we don't have forumId and courseId, get it from the post.\n                if (!this.forumId) {\n                    this.forumId = offlineReply.forumid;\n                }\n                if (!this.courseId) {\n                    this.courseId = offlineReply.courseid;\n                }\n\n                convertPromises.push(\n                    AddonModForumHelper.instance\n                        .convertOfflineReplyToOnline(offlineReply)\n                        .then(async reply => {\n                            offlineReplies.push(reply);\n\n                            // Disable reply of the parent. Reply in offline to the same post is not allowed, edit instead.\n                            reply.parentid && (onlinePostsMap[reply.parentid].capabilities.reply = false);\n\n                            return;\n                        }),\n                );\n            });\n\n            await Promise.all(convertPromises);\n\n            // Convert back to array.\n            onlinePosts = CoreUtils.objectToArray(onlinePostsMap);\n\n            let posts = offlineReplies.concat(onlinePosts);\n\n            this.startingPost = AddonModForum.extractStartingPost(posts);\n\n            // If sort type is nested, normal sorting is disabled and nested posts will be displayed.\n            if (this.sort == 'nested') {\n                // Sort first by creation date to make format tree work.\n                AddonModForum.sortDiscussionPosts(posts, 'ASC');\n\n                const rootId = this.startingPost ? this.startingPost.id : (this.discussion ? this.discussion.id : 0);\n                posts = CoreUtils.formatTree(posts, 'parentid', 'id', rootId);\n            } else {\n                // Set default reply subject.\n                const direction = this.sort == 'flat-newest' ? 'DESC' : 'ASC';\n                AddonModForum.sortDiscussionPosts(posts, direction);\n            }\n\n            try {\n                // Now try to get the forum.\n                const forum = await this.fetchForum();\n                // \"forum.istracked\" is more reliable than \"trackPosts\".\n                if (forum.istracked !== undefined) {\n                    this.trackPosts = forum.istracked;\n                }\n\n                this.forumId = forum.id;\n                this.cmId = forum.cmid;\n                this.courseId = forum.course;\n                this.forum = forum;\n                this.availabilityMessage = AddonModForumHelper.getAvailabilityMessage(forum);\n\n                const promises: Promise<void>[] = [];\n\n                promises.push(\n                    AddonModForum.instance\n                        .getAccessInformation(this.forumId, { cmId: this.cmId })\n                        .then(async accessInfo => {\n                            this.accessInfo = accessInfo;\n\n                            // Disallow replying if cut-off date is reached and the user has not the capability to override it.\n                            // Just in case the posts were fetched from WS when the cut-off date was not reached but it is now.\n                            if (AddonModForumHelper.isCutoffDateReached(forum) && !accessInfo.cancanoverridecutoff) {\n                                posts.forEach((post) => {\n                                    post.capabilities.reply = false;\n                                });\n                            }\n\n                            // Show Q&A message if user hasn't posted.\n                            const currentUserId = CoreSites.getCurrentSiteUserId();\n                            this.showQAMessage = forum.type === 'qanda' && !accessInfo.canviewqandawithoutposting &&\n                                !posts.some(post => post.author.id === currentUserId);\n\n                            return;\n                        }),\n                );\n\n                // The discussion object was not passed as parameter and there is no starting post.\n                if (!this.discussion) {\n                    promises.push(this.loadDiscussion(this.discussionId, this.forumId, this.cmId));\n                }\n\n                await Promise.all(promises);\n            } catch {\n                // Ignore errors.\n            }\n\n            if (!this.discussion && !this.startingPost) {\n                // The discussion object was not passed as parameter and there is no starting post. Should not happen.\n                throw new Error('Invalid forum discussion.');\n            }\n\n            if (this.startingPost && this.startingPost.author && this.forum.type == 'single') {\n                // Hide author and groups for first post and type single.\n                delete this.startingPost.author.fullname;\n                delete this.startingPost.author.groups;\n            }\n\n            this.posts = posts;\n            this.postSubjects = this.getAllPosts().reduce(\n                (postSubjects, post) => {\n                    postSubjects[post.id] = post.subject;\n\n                    return postSubjects;\n                },\n                this.startingPost\n                    ? { [this.startingPost.id]: this.startingPost.subject }\n                    : {},\n            );\n\n            if (AddonModForum.isSetPinStateAvailableForSite() && this.forumId) {\n                // Use the canAddDiscussion WS to check if the user can pin discussions.\n                try {\n                    const response = await AddonModForum.canAddDiscussionToAll(this.forumId, { cmId: this.cmId });\n\n                    this.canPin = !!response.canpindiscussions;\n                } catch (error) {\n                    this.canPin = false;\n                }\n            } else {\n                this.canPin = false;\n            }\n\n            this.hasOfflineRatings =\n                await CoreRatingOffline.hasRatings('mod_forum', 'post', ContextLevel.MODULE, this.cmId, this.discussionId);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            this.discussionLoaded = true;\n            this.refreshIcon = CoreConstants.ICON_REFRESH;\n            this.syncIcon = CoreConstants.ICON_SYNC;\n\n            if (forceMarkAsRead || (hasUnreadPosts && this.trackPosts)) {\n                // Add log in Moodle and mark unread posts as readed.\n                this.logDiscussionView(forceMarkAsRead);\n            }\n        }\n    }\n\n    /**\n     * Convenience function to load discussion.\n     *\n     * @param discussionId Discussion ID.\n     * @param forumId Forum ID.\n     * @param cmId Forum cmid.\n     * @returns Promise resolved when done.\n     */\n    protected async loadDiscussion(discussionId: number, forumId?: number, cmId?: number): Promise<void> {\n        // Fetch the discussion if not passed as parameter.\n        if (this.discussion || !forumId || ! cmId) {\n            return;\n        }\n\n        this.discussion = await AddonModForumHelper.getDiscussionById(forumId, cmId, discussionId);\n        this.discussionId = this.discussion.discussion;\n    }\n\n    /**\n     * Tries to synchronize the posts discussion.\n     *\n     * @param showErrors Whether to show errors in a modal.\n     * @returns Promise resolved when done.\n     */\n    protected async syncDiscussion(showErrors: boolean): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(\n            AddonModForumSync.instance\n                .syncDiscussionReplies(this.discussionId)\n                .then((result) => {\n                    if (result.warnings && result.warnings.length) {\n                        CoreDomUtils.showAlert(undefined, result.warnings[0]);\n                    }\n\n                    if (result && result.updated && this.forumId) {\n                        // Sync successful, send event.\n                        CoreEvents.trigger(AddonModForumSyncProvider.MANUAL_SYNCED, {\n                            forumId: this.forumId,\n                            userId: CoreSites.getCurrentSiteUserId(),\n                            source: 'discussion',\n                        }, CoreSites.getCurrentSiteId());\n                    }\n\n                    return;\n                }),\n        );\n\n        promises.push(\n            AddonModForumSync.instance\n                .syncRatings(this.cmId, this.discussionId)\n                .then((result) => {\n                    if (result.warnings && result.warnings.length) {\n                        CoreDomUtils.showAlert(undefined, result.warnings[0]);\n                    }\n\n                    return;\n                }),\n        );\n\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            if (showErrors) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n\n            throw new Error('Failed syncing discussion');\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors If show errors to the user of hide them.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher | null, done?: () => void, showErrors: boolean = false): Promise<void> {\n        if (this.discussionLoaded) {\n            await this.refreshPosts(true, showErrors).finally(() => {\n                refresher?.complete();\n                done && done();\n            });\n        }\n    }\n\n    /**\n     * Refresh posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @returns Promise resolved when done.\n     */\n    async refreshPosts(sync?: boolean, showErrors?: boolean): Promise<void> {\n        this.content.scrollToTop();\n        this.refreshIcon = CoreConstants.ICON_LOADING;\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        this.courseId && promises.push(AddonModForum.invalidateForumData(this.courseId));\n        promises.push(AddonModForum.invalidateDiscussionPosts(this.discussionId, this.forumId));\n        this.forumId && promises.push(AddonModForum.invalidateAccessInformation(this.forumId));\n        this.forumId && promises.push(AddonModForum.invalidateCanAddDiscussion(this.forumId));\n\n        await CoreUtils.ignoreErrors(CoreUtils.allPromises(promises));\n\n        await this.fetchPosts(sync, showErrors);\n    }\n\n    /**\n     * Function to change posts sorting\n     *\n     * @param type Sort type.\n     * @returns Promised resolved when done.\n     */\n    changeSort(type: SortType): Promise<void> {\n        this.discussionLoaded = false;\n        this.sort = type;\n        CoreSites.getRequiredCurrentSite().setLocalSiteConfig('AddonModForumDiscussionSort', this.sort);\n        this.content.scrollToTop();\n\n        return this.fetchPosts();\n    }\n\n    /**\n     * Lock or unlock the discussion.\n     *\n     * @param locked True to lock the discussion, false to unlock.\n     */\n    async setLockState(locked: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            const response = await AddonModForum.setLockState(this.forumId, this.discussionId, locked);\n            this.discussion.locked = response.locked;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                locked: this.discussion.locked,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.lockupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Pin or unpin the discussion.\n     *\n     * @param pinned True to pin the discussion, false to unpin it.\n     */\n    async setPinState(pinned: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModForum.setPinState(this.discussionId, pinned);\n\n            this.discussion.pinned = pinned;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                pinned: this.discussion.pinned,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.pinupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Star or unstar the discussion.\n     *\n     * @param starred True to star the discussion, false to unstar it.\n     */\n    async toggleFavouriteState(starred: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModForum.toggleFavouriteState(this.discussionId, starred);\n\n            this.discussion.starred = starred;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                starred: this.discussion.starred,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.favouriteupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * New post added.\n     */\n    postListChanged(): void {\n        if (!this.forumId || !this.cmId) {\n            return;\n        }\n\n        // Trigger an event to notify a new reply.\n        const data: AddonModForumReplyDiscussionData = {\n            forumId: this.forumId,\n            discussionId: this.discussionId,\n            cmId: this.cmId,\n        };\n        CoreEvents.trigger(AddonModForumProvider.REPLY_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n        this.discussionLoaded = false;\n        this.refreshPosts().finally(() => {\n            this.discussionLoaded = true;\n        });\n    }\n\n    /**\n     * Get all the posts contained in the discussion.\n     *\n     * @returns Array containing all the posts of the discussion.\n     */\n    protected getAllPosts(): Post[] {\n        const allPosts = this.posts.map(post => this.flattenPostHierarchy(post));\n\n        return CoreArray.flatten(allPosts);\n    }\n\n    /**\n     * Flatten a post's hierarchy into an array.\n     *\n     * @param parent Parent post.\n     * @returns Array containing all the posts within the hierarchy (including the parent).\n     */\n    protected flattenPostHierarchy(parent: Post): Post[] {\n        const posts = [parent];\n        const children = parent.children || [];\n\n        for (const child of children) {\n            posts.push(...this.flattenPostHierarchy(child));\n        }\n\n        return posts;\n    }\n\n    /**\n     * Log discussion as viewed. This will also mark the posts as read.\n     *\n     * @param logAnalytics Whether to log analytics too or not.\n     */\n    protected async logDiscussionView(logAnalytics = false): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonModForum.logDiscussionView(this.discussionId, this.forumId || -1));\n\n        if (logAnalytics) {\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM,\n                ws: 'mod_forum_view_forum_discussion',\n                name: this.startingPost?.subject ?? this.forum.name ?? '',\n                data: { id: this.discussionId, forumid: this.forumId, category: 'forum' },\n                url: `/mod/forum/discuss.php?d=${this.discussionId}` + (this.postId ? `#p${this.postId}` : ''),\n            });\n        }\n\n        if (!this.courseId || !this.cmId) {\n            return;\n        }\n\n        // Trigger mark read posts.\n        CoreEvents.trigger(AddonModForumProvider.MARK_READ_EVENT, {\n            courseId: this.courseId,\n            moduleId: this.cmId,\n        }, CoreSites.getCurrentSiteId());\n    }\n\n}\n\n/**\n * Reply data shared by post.\n */\nexport type AddonModForumSharedPostFormData = Omit<AddonModForumPostFormData, 'id'> & {\n    id?: number; // ID when editing an online reply.\n    syncId?: string; // Sync ID if some post has blocked synchronization.\n};\n\n/**\n * Helper to manage swiping within a collection of discussions.\n */\nclass AddonModForumDiscussionDiscussionsSwipeManager extends AddonModForumDiscussionsSwipeManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return this.getSource().DISCUSSIONS_PATH_PREFIX + route.params.discussionId;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ActivatedRoute, ActivatedRouteSnapshot, UrlSegment } from '@angular/router';\n\nimport { CoreNavigator } from '@services/navigator';\n\nimport { CoreRoutedItemsManager } from './routed-items-manager';\nimport { CoreRoutedItemsManagerSource } from './routed-items-manager-source';\n\n/**\n * Helper class to manage the state and routing of a swipeable page.\n */\nexport class CoreSwipeNavigationItemsManager<\n    Item = unknown,\n    Source extends CoreRoutedItemsManagerSource<Item> = CoreRoutedItemsManagerSource<Item>\n>\n    extends CoreRoutedItemsManager<Item, Source> {\n\n    /**\n     * Process page started operations.\n     */\n    async start(): Promise<void> {\n        this.updateSelectedItem();\n    }\n\n    /**\n     * Navigate to the next item.\n     */\n    async navigateToNextItem(): Promise<void> {\n        await this.navigateToItemBy(1, 'forward');\n    }\n\n    /**\n     * Navigate to the previous item.\n     */\n    async navigateToPreviousItem(): Promise<void> {\n        await this.navigateToItemBy(-1, 'back');\n    }\n\n    /**\n     * Has a next item.\n     *\n     * @returns If has next item.\n     */\n    async hasNextItem(): Promise<boolean> {\n        const item = await this.getItemBy(1);\n\n        return !!item;\n    }\n\n    /**\n     * Has a previous item.\n     *\n     * @returns If has previous item.\n     */\n    async hasPreviousItem(): Promise<boolean> {\n        const item = await this.getItemBy(-1);\n\n        return !!item;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getCurrentPageRoute(): ActivatedRoute | null {\n        return CoreNavigator.getCurrentRoute();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        const segments: UrlSegment[] = [];\n\n        while (route) {\n            segments.push(...route.url);\n\n            if (!route.firstChild) {\n                break;\n            }\n\n            route = route.firstChild;\n        }\n\n        return segments.map(segment => segment.path).join('/').replace(/\\/+/, '/').trim() || null;\n    }\n\n    /**\n     * Navigate to an item by an offset.\n     *\n     * @param delta Index offset.\n     * @param animationDirection Animation direction.\n     */\n    protected async navigateToItemBy(delta: number, animationDirection: 'forward' | 'back'): Promise<void> {\n        const item = await this.getItemBy(delta);\n\n        if (!item) {\n            return;\n        }\n\n        await this.navigateToItem(item, { animationDirection, replace: true });\n    }\n\n    /**\n     * Get item by an offset.\n     *\n     * @param delta Index offset.\n     * @returns The item or null if none.\n     */\n    protected async getItemBy(delta: number): Promise<Item | null> {\n        const items = this.getSource().getItems();\n        const selectedIndex = (this.selectedItem && items?.indexOf(this.selectedItem)) ?? -1;\n\n        if (selectedIndex === -1 || items === null) {\n            return null;\n        }\n\n        const deltaStep = delta > 0 ? 1 : -1;\n        let nextIndex = selectedIndex;\n        let deltaMoved = 0;\n\n        while (deltaMoved !== delta) {\n            nextIndex += deltaStep;\n\n            if (nextIndex < 0) {\n                return null;\n            }\n\n            if (nextIndex >= items.length) {\n                break;\n            }\n\n            if (this.skipItemInSwipe(items[nextIndex])) {\n                continue;\n            }\n\n            deltaMoved += deltaStep;\n        }\n\n        if (deltaMoved === delta) {\n            return items[nextIndex];\n        }\n\n        if (!this.getSource().isCompleted()) {\n            await this.getSource().load();\n\n            return this.getItemBy(delta);\n        }\n\n        return null;\n    }\n\n    /**\n     * Check if an item should be skipped during swipe navigation.\n     *\n     * @param item Item.\n     * @returns Whether to skip this item during swipe navigation.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected skipItemInSwipe(item: Item): boolean {\n        return false;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}