{"version":3,"sources":["./src/addons/calendar/pages/day/day.html","./src/addons/calendar/pages/edit-event/edit-event.html","./src/addons/calendar/pages/event/event.html","./src/addons/calendar/pages/index/index.html","./src/addons/calendar/pages/settings/settings.html","./src/addons/calendar/calendar-lazy.module.ts","./src/addons/calendar/classes/events-source.ts","./src/addons/calendar/pages/day/day.scss","./src/addons/calendar/pages/day/day.ts","./src/addons/calendar/pages/edit-event/edit-event.scss","./src/addons/calendar/pages/edit-event/edit-event.ts","./src/addons/calendar/pages/event/event.scss","./src/addons/calendar/pages/event/event.ts","./src/addons/calendar/pages/index/index.ts","./src/addons/calendar/pages/settings/settings.ts","./src/core/classes/items-management/swipe-navigation-items-manager.ts"],"names":[],"mappings":"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","file":"calendar-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'addon.calendar.calendarevents' | translate }}</h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"openFilter()\\\" [attr.aria-label]=\\\"'core.filter' | translate\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-filter\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <core-context-menu>\\r\\n                <core-context-menu-item *ngIf=\\\"!selectedDayIsCurrent()\\\" [priority]=\\\"900\\\" [content]=\\\"'addon.calendar.today' | translate\\\"\\r\\n                    iconAction=\\\"fas-calendar-day\\\" (action)=\\\"goToCurrentDay()\\\">\\r\\n                </core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!loaded || !selectedDayHasOffline() || !isOnline\\\" [priority]=\\\"400\\\"\\r\\n                    [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event)\\\" [iconAction]=\\\"syncIcon\\\"\\r\\n                    [closeOnClick]=\\\"false\\\">\\r\\n                </core-context-menu-item>\\r\\n            </core-context-menu>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <div class=\\\"core-swipe-slides-container\\\">\\r\\n            <!-- Period name and arrows to navigate. -->\\r\\n            <ion-grid class=\\\"ion-no-padding safe-area-padding\\\">\\r\\n                <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                    <ion-col class=\\\"ion-text-start\\\">\\r\\n                        <ion-button fill=\\\"clear\\\" (click)=\\\"loadPrevious()\\\" [attr.aria-label]=\\\"'addon.calendar.dayprev' | translate\\\">\\r\\n                            <ion-icon name=\\\"fas-chevron-left\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center addon-calendar-period\\\">\\r\\n                        <h2>{{ periodName }}</h2>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-end\\\">\\r\\n                        <ion-button fill=\\\"clear\\\" (click)=\\\"loadNext()\\\" [attr.aria-label]=\\\"'addon.calendar.daynext' | translate\\\">\\r\\n                            <ion-icon name=\\\"fas-chevron-right\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            <core-swipe-slides [manager]=\\\"manager\\\">\\r\\n                <ng-template let-day=\\\"item\\\">\\r\\n                    <core-loading [hideUntil]=\\\"day.loaded\\\">\\r\\n                        <!-- There is data to be synchronized -->\\r\\n                        <ion-card class=\\\"core-warning-card list-item-limited-width\\\" *ngIf=\\\"day.hasOffline\\\">\\r\\n                            <ion-item>\\r\\n                                <ion-icon name=\\\"fas-triangle-exclamation\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'core.day' | translate} }}</ion-label>\\r\\n                            </ion-item>\\r\\n                        </ion-card>\\r\\n\\r\\n                        <core-empty-box *ngIf=\\\"!day.filteredEvents || !day.filteredEvents.length\\\" icon=\\\"fas-calendar\\\"\\r\\n                            [message]=\\\"'addon.calendar.noevents' | translate\\\">\\r\\n                        </core-empty-box>\\r\\n\\r\\n                        <ion-list *ngIf=\\\"day.filteredEvents && day.filteredEvents.length\\\" class=\\\"list-item-limited-width\\\">\\r\\n                            <ng-container *ngFor=\\\"let event of day.filteredEvents\\\">\\r\\n                                <ion-card>\\r\\n                                    <ion-item class=\\\"addon-calendar-event ion-text-wrap\\\" [attr.aria-label]=\\\"event.name\\\"\\r\\n                                        (click)=\\\"gotoEvent(event.id, day)\\\" [class.item-dimmed]=\\\"event.ispast\\\"\\r\\n                                        [ngClass]=\\\"['addon-calendar-eventtype-'+event.eventtype]\\\" button [detail]=\\\"false\\\">\\r\\n                                        <core-mod-icon *ngIf=\\\"event.moduleIcon\\\" [modicon]=\\\"event.moduleIcon\\\" slot=\\\"start\\\" [showAlt]=\\\"false\\\"\\r\\n                                            [modname]=\\\"event.modulename\\\" [componentId]=\\\"event.instance\\\" [purpose]=\\\"event.purpose\\\">\\r\\n                                        </core-mod-icon>\\r\\n                                        <ion-icon *ngIf=\\\"event.eventIcon && !event.moduleIcon\\\" [name]=\\\"event.eventIcon\\\" slot=\\\"start\\\"\\r\\n                                            aria-hidden=\\\"true\\\">\\r\\n                                        </ion-icon>\\r\\n                                        <ion-label>\\r\\n                                            <!-- Add the icon title so accessibility tools read it. -->\\r\\n                                            <span class=\\\"sr-only\\\">\\r\\n                                                {{ 'addon.calendar.type' + event.formattedType | translate }}\\r\\n                                                <span class=\\\"sr-only\\\" *ngIf=\\\"event.moduleIcon && event.iconTitle\\\">{{ event.iconTitle\\r\\n                                                    }}</span>\\r\\n                                            </span>\\r\\n                                            <p class=\\\"item-heading\\\">\\r\\n                                                <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                                                    [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                                            </p>\\r\\n                                            <p>\\r\\n                                                <core-format-text [text]=\\\"event.formattedtime\\\" [filter]=\\\"false\\\"></core-format-text>\\r\\n                                            </p>\\r\\n                                        </ion-label>\\r\\n                                        <ion-note *ngIf=\\\"event.offline && !event.deleted\\\" slot=\\\"end\\\">\\r\\n                                            <ion-icon name=\\\"fas-clock\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                                            <span class=\\\"ion-text-wrap\\\">{{ 'core.notsent' | translate }}</span>\\r\\n                                        </ion-note>\\r\\n                                        <ion-note *ngIf=\\\"event.deleted\\\" slot=\\\"end\\\">\\r\\n                                            <ion-icon name=\\\"fas-trash\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                                            <span class=\\\"ion-text-wrap\\\">{{ 'core.deletedoffline' | translate }}</span>\\r\\n                                        </ion-note>\\r\\n                                    </ion-item>\\r\\n                                </ion-card>\\r\\n                            </ng-container>\\r\\n                        </ion-list>\\r\\n                    </core-loading>\\r\\n                </ng-template>\\r\\n            </core-swipe-slides>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n\\r\\n    <!-- Create a calendar event. -->\\r\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"canCreate && loaded\\\">\\r\\n        <ion-fab-button (click)=\\\"openEdit()\\\" [attr.aria-label]=\\\"'addon.calendar.newevent' | translate\\\">\\r\\n            <ion-icon name=\\\"fas-plus\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <span class=\\\"sr-only\\\">{{ 'addon.calendar.newevent' | translate }}</span>\\r\\n        </ion-fab-button>\\r\\n    </ion-fab>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ title | translate }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <form [formGroup]=\\\"form\\\" *ngIf=\\\"!error\\\" #editEventForm>\\r\\n            <!-- Event name. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label position=\\\"stacked\\\">\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'addon.calendar.eventname' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"text\\\" name=\\\"name\\\" [placeholder]=\\\"'addon.calendar.eventname' | translate\\\" formControlName=\\\"name\\\">\\r\\n                </ion-input>\\r\\n                <core-input-errors [control]=\\\"form.controls.name\\\" [errorMessages]=\\\"errors\\\"></core-input-errors>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Date. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label position=\\\"stacked\\\">\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.date' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-datetime formControlName=\\\"timestart\\\" [placeholder]=\\\"'core.date' | translate\\\" [displayFormat]=\\\"dateFormat\\\"\\r\\n                    [max]=\\\"maxDate\\\" [min]=\\\"minDate\\\" [displayTimezone]=\\\"displayTimezone\\\">\\r\\n                </ion-datetime>\\r\\n                <core-input-errors [control]=\\\"form.controls.timestart\\\" [errorMessages]=\\\"errors\\\"></core-input-errors>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Type. -->\\r\\n            <ion-item class=\\\"ion-text-wrap addon-calendar-eventtype-container\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'addon.calendar.eventkind' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <p *ngIf=\\\"eventTypes.length == 1\\\" slot=\\\"end\\\">{{eventTypes[0].name | translate }}</p>\\r\\n                <ion-select *ngIf=\\\"eventTypes.length > 1\\\" formControlName=\\\"eventtype\\\" interface=\\\"action-sheet\\\"\\r\\n                    [cancelText]=\\\"'core.cancel' | translate\\\" [interfaceOptions]=\\\"{header: 'addon.calendar.eventkind' | translate}\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let type of eventTypes\\\" [value]=\\\"type.value\\\">\\r\\n                        {{ type.name | translate }}\\r\\n                    </ion-select-option>\\r\\n                </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Category. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"typeControl.value == 'category'\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.category' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-select formControlName=\\\"categoryid\\\" interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                    [cancelText]=\\\"'core.cancel' | translate\\\" [interfaceOptions]=\\\"{header: 'core.category' | translate}\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\r\\n                        {{ category.name }}\\r\\n                    </ion-select-option>\\r\\n                </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Course. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"typeControl.value == 'course'\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.course' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-select formControlName=\\\"courseid\\\" interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                    [cancelText]=\\\"'core.cancel' | translate\\\" [interfaceOptions]=\\\"{header: 'core.course' | translate}\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let course of courses\\\" [value]=\\\"course.id\\\">{{ course.fullname }}</ion-select-option>\\r\\n                </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Group. -->\\r\\n            <ng-container *ngIf=\\\"typeControl.value == 'group'\\\">\\r\\n                <!-- Select the course. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.course' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-select formControlName=\\\"groupcourseid\\\" interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                        [cancelText]=\\\"'core.cancel' | translate\\\" (ionChange)=\\\"groupCourseSelected()\\\"\\r\\n                        [interfaceOptions]=\\\"{header: 'core.course' | translate}\\\">\\r\\n                        <ion-select-option *ngFor=\\\"let course of courses\\\" [value]=\\\"course.id\\\">\\r\\n                            {{ course.fullname }}\\r\\n                        </ion-select-option>\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n                <!-- The course has no groups. -->\\r\\n                <ion-item class=\\\"ion-text-wrap core-danger-item\\\" *ngIf=\\\"!loadingGroups && courseGroupSet && !groups.length\\\">\\r\\n                    <ion-label>\\r\\n                        <p>{{ 'core.coursenogroups' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <!-- Select the group. -->\\r\\n                <ion-item class=\\\"ion-text-wrap core-edit-set-group\\\" *ngIf=\\\"!loadingGroups && groups.length > 0\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.group' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-select formControlName=\\\"groupid\\\" interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                        [cancelText]=\\\"'core.cancel' | translate\\\" [interfaceOptions]=\\\"{header: 'core.group' | translate}\\\">\\r\\n                        <ion-select-option *ngFor=\\\"let group of groups\\\" [value]=\\\"group.id\\\">{{ group.name }}</ion-select-option>\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n                <!-- Loading groups. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"loadingGroups\\\">\\r\\n                    <ion-label>\\r\\n                        <ion-spinner *ngIf=\\\"loadingGroups\\\" [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Reminders. Right now, only allow adding them here for new events. -->\\r\\n            <ng-container *ngIf=\\\"remindersEnabled && !eventId\\\">\\r\\n                <ion-item-divider class=\\\"addon-calendar-reminders-title\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.calendar.reminders' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"addReminder()\\\" slot=\\\"end\\\"\\r\\n                        [attr.aria-label]=\\\"'addon.calendar.setnewreminder' | translate\\\">\\r\\n                        <ion-icon name=\\\"fas-plus\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                </ion-item-divider>\\r\\n                <ion-item *ngFor=\\\"let reminder of reminders\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p>{{ reminder.label }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"removeReminder(reminder)\\\" [attr.aria-label]=\\\"'core.delete' | translate\\\" slot=\\\"end\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" color=\\\"danger\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Duration. -->\\r\\n            <div class=\\\"ion-text-wrap addon-calendar-radio-container\\\">\\r\\n                <ion-radio-group formControlName=\\\"duration\\\">\\r\\n                    <ion-item-divider class=\\\"addon-calendar-radio-title\\\">\\r\\n                        <ion-label>\\r\\n                            <p class=\\\"item-heading\\\">{{ 'addon.calendar.eventduration' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                    </ion-item-divider>\\r\\n                    <ion-item>\\r\\n                        <ion-label>\\r\\n                            <p>{{ 'addon.calendar.durationnone' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                        <ion-radio slot=\\\"end\\\" [value]=\\\"0\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label>\\r\\n                            <p>{{ 'addon.calendar.durationuntil' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                        <ion-radio slot=\\\"end\\\" [value]=\\\"1\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item *ngIf=\\\"form.controls.duration.value === 1\\\">\\r\\n                        <ion-label position=\\\"stacked\\\"></ion-label>\\r\\n                        <ion-datetime formControlName=\\\"timedurationuntil\\\" [max]=\\\"maxDate\\\" [min]=\\\"minDate\\\"\\r\\n                            [placeholder]=\\\"'addon.calendar.durationuntil' | translate\\\" [displayFormat]=\\\"dateFormat\\\"\\r\\n                            [displayTimezone]=\\\"displayTimezone\\\">\\r\\n                        </ion-datetime>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label>\\r\\n                            <p>{{ 'addon.calendar.durationminutes' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                        <ion-radio slot=\\\"end\\\" [value]=\\\"2\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item *ngIf=\\\"form.controls.duration.value === 2\\\">\\r\\n                        <ion-label class=\\\"sr-only\\\">{{ 'addon.calendar.durationminutes' | translate }}</ion-label>\\r\\n                        <ion-input type=\\\"number\\\" name=\\\"timedurationminutes\\\" slot=\\\"end\\\"\\r\\n                            [placeholder]=\\\"'addon.calendar.durationminutes' | translate\\\" formControlName=\\\"timedurationminutes\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n\\r\\n            <!-- Repeat (for new events). -->\\r\\n            <ng-container *ngIf=\\\"!eventId || eventId < 0\\\">\\r\\n                <ion-item class=\\\"ion-text-wrap divider\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.calendar.repeatevent' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-checkbox slot=\\\"end\\\" formControlName=\\\"repeat\\\"></ion-checkbox>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label position=\\\"stacked\\\">\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.calendar.repeatweeksl' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-input type=\\\"number\\\" name=\\\"repeats\\\" formControlName=\\\"repeats\\\" [disabled]=\\\"!form.controls.repeat.value\\\">\\r\\n                    </ion-input>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Apply to all events or just this one (editing repeated events). -->\\r\\n            <div *ngIf=\\\"eventRepeatId\\\" class=\\\"ion-text-wrap addon-calendar-radio-container\\\">\\r\\n                <ion-radio-group formControlName=\\\"repeateditall\\\">\\r\\n                    <ion-item-divider class=\\\"addon-calendar-radio-title\\\">\\r\\n                        <ion-label>\\r\\n                            <p class=\\\"item-heading\\\">{{ 'addon.calendar.repeatedevents' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                    </ion-item-divider>\\r\\n                    <ion-item>\\r\\n                        <ion-label>\\r\\n                            <p>{{ 'addon.calendar.repeateditall' | translate:{$a: otherEventsCount} }}</p>\\r\\n                        </ion-label>\\r\\n                        <ion-radio slot=\\\"end\\\" value=\\\"1\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label>\\r\\n                            <p>{{ 'addon.calendar.repeateditthis' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                        <ion-radio slot=\\\"end\\\" value=\\\"0\\\"></ion-radio>\\r\\n                    </ion-item>\\r\\n                </ion-radio-group>\\r\\n            </div>\\r\\n\\r\\n            <!-- Description. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label position=\\\"stacked\\\">\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.description' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <core-rich-text-editor [control]=\\\"descriptionControl\\\" [attr.aria-label]=\\\"'core.description' | translate\\\"\\r\\n                    [placeholder]=\\\"'core.description' | translate\\\" name=\\\"description\\\" [component]=\\\"component\\\" [componentId]=\\\"eventId\\\"\\r\\n                    [autoSave]=\\\"false\\\"></core-rich-text-editor>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Location. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label position=\\\"stacked\\\">\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.location' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"text\\\" name=\\\"location\\\" [placeholder]=\\\"'core.location' | translate\\\" formControlName=\\\"location\\\">\\r\\n                </ion-input>\\r\\n            </ion-item>\\r\\n        </form>\\r\\n        <div collapsible-footer appearOnBottom *ngIf=\\\"loaded && !error\\\" slot=\\\"fixed\\\">\\r\\n            <div class=\\\"list-item-limited-width adaptable-buttons-row\\\">\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"ion-margin ion-text-wrap\\\">\\r\\n                    {{ 'core.save' | translate }}\\r\\n                </ion-button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header collapsible>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1 *ngIf=\\\"event\\\">\\r\\n                <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\" [contextInstanceId]=\\\"event.contextInstanceId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <core-context-menu>\\r\\n                <core-context-menu-item [hidden]=\\\"!eventLoaded || (!hasOffline && event && !event.deleted) || !isOnline\\\" [priority]=\\\"400\\\"\\r\\n                    [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event, true)\\\"\\r\\n                    [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\">\\r\\n                </core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!event || !event.canedit || event.deleted || (!canEdit && event.id > 0)\\\" [priority]=\\\"300\\\"\\r\\n                    [content]=\\\"'core.edit' | translate\\\" (action)=\\\"openEdit()\\\" iconAction=\\\"fas-pen\\\">\\r\\n                </core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!event || !event.candelete || event.deleted\\\" [priority]=\\\"200\\\"\\r\\n                    [content]=\\\"'core.delete' | translate\\\" (action)=\\\"deleteEvent()\\\" iconAction=\\\"fas-trash\\\"></core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!event || !event.deleted\\\" [priority]=\\\"200\\\" [content]=\\\"'core.restore' | translate\\\"\\r\\n                    (action)=\\\"undoDelete()\\\" iconAction=\\\"fas-rotate-left\\\"></core-context-menu-item>\\r\\n            </core-context-menu>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content [core-swipe-navigation]=\\\"events\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!eventLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"eventLoaded\\\">\\r\\n        <ion-list *ngIf=\\\"event\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap addon-calendar-event\\\" collapsible [ngClass]=\\\"['addon-calendar-eventtype-'+event.eventtype]\\\">\\r\\n                <core-mod-icon *ngIf=\\\"event.moduleIcon\\\" [modicon]=\\\"event.moduleIcon\\\" [showAlt]=\\\"false\\\" [modname]=\\\"event.modulename\\\"\\r\\n                    [componentId]=\\\"event.instance\\\" slot=\\\"start\\\" [purpose]=\\\"event.purpose\\\"></core-mod-icon>\\r\\n                <ion-icon *ngIf=\\\" event.eventIcon && !event.moduleIcon\\\" [name]=\\\"event.eventIcon\\\" aria-hidden=\\\"true\\\" slot=\\\"start\\\">\\r\\n                </ion-icon>\\r\\n                <ion-label>\\r\\n                    <!-- Add the icon title so accessibility tools read it. -->\\r\\n                    <span class=\\\"sr-only\\\">\\r\\n                        {{ 'addon.calendar.type' + event.formattedType | translate }}\\r\\n                        <span class=\\\"sr-only\\\" *ngIf=\\\"event.moduleIcon && event.iconTitle\\\">{{ event.iconTitle }}</span>\\r\\n                    </span>\\r\\n                    <h1>\\r\\n                        <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                            [contextInstanceId]=\\\"event.contextInstanceId\\\">\\r\\n                        </core-format-text>\\r\\n                    </h1>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <!-- There is data to be synchronized -->\\r\\n            <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"hasOffline || event.deleted\\\">\\r\\n                <ion-item>\\r\\n                    <ion-icon name=\\\"fas-triangle-exclamation\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'addon.calendar.calendarevent' | translate} }}</ion-label>\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.calendar.when' | translate }}</p>\\r\\n                    <core-format-text [text]=\\\"event.formattedtime\\\" [filter]=\\\"false\\\"></core-format-text>\\r\\n                </ion-label>\\r\\n                <ion-note slot=\\\"end\\\" *ngIf=\\\"event.deleted\\\">\\r\\n                    <ion-icon name=\\\"fas-trash\\\" aria-hidden=\\\"true\\\"></ion-icon> {{ 'core.deletedoffline' | translate }}\\r\\n                </ion-note>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.calendar.eventtype' | translate }}</p>\\r\\n                    <p>{{ 'addon.calendar.type' + event.formattedType | translate }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"courseName\\\" [href]=\\\"courseUrl\\\" core-link capture=\\\"true\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.course' | translate}}</p>\\r\\n                    <p>\\r\\n                        <core-format-text [text]=\\\"courseName\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"courseId\\\">\\r\\n                        </core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap core-groupname\\\" *ngIf=\\\"groupName\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.group' | translate}}</p>\\r\\n                    <p>\\r\\n                        <core-format-text [text]=\\\"groupName\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"event.courseid\\\">\\r\\n                        </core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"categoryPath\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.category' | translate}}</p>\\r\\n                    <p>\\r\\n                        <core-format-text [text]=\\\"categoryPath\\\" contextLevel=\\\"coursecat\\\" [contextInstanceId]=\\\"event.categoryid\\\">\\r\\n                        </core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"event.description\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.description' | translate}}</p>\\r\\n                    <p>\\r\\n                        <core-format-text [text]=\\\"event.description\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                            [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"event.location\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.location' | translate}}</p>\\r\\n                    <p>\\r\\n                        <a [href]=\\\"event.encodedLocation\\\" core-link auto-login=\\\"no\\\">\\r\\n                            <core-format-text [text]=\\\"event.location\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                                [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                        </a>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"moduleUrl\\\">\\r\\n                <ion-label>\\r\\n                    <ion-button expand=\\\"block\\\" [href]=\\\"moduleUrl\\\" core-link capture=\\\"true\\\">\\r\\n                        {{ 'addon.calendar.gotoactivity' | translate }}\\r\\n                    </ion-button>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n\\r\\n        <ion-card *ngIf=\\\"remindersEnabled && event\\\">\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'addon.calendar.reminders' | translate }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ng-container *ngFor=\\\"let reminder of reminders\\\">\\r\\n                <ion-item *ngIf=\\\"reminder.timestamp > 0\\\" class=\\\"ion-text-wrap\\\" [class.item-dimmed]=\\\"reminder.timestamp <= currentTime\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ reminder.label }}</p>\\r\\n                        <p *ngIf=\\\"reminder.sublabel\\\">{{ reminder.sublabel }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"deleteReminder(reminder.id, $event)\\\" [attr.aria-label]=\\\"'core.delete' | translate\\\"\\r\\n                        slot=\\\"end\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" color=\\\"danger\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"event.timestart > currentTime\\\">\\r\\n                <ion-item>\\r\\n                    <ion-label>\\r\\n                        <ion-button expand=\\\"block\\\" (click)=\\\"addReminder()\\\">\\r\\n                            {{ 'addon.calendar.setnewreminder' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n        </ion-card>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ (showCalendar ? 'addon.calendar.calendarevents' : 'addon.calendar.upcomingevents') | translate }}</h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"openFilter()\\\" [attr.aria-label]=\\\"'core.filter' | translate\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-filter\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <core-context-menu>\\r\\n                <core-context-menu-item *ngIf=\\\"showCalendar\\\" [priority]=\\\"800\\\" [content]=\\\"'addon.calendar.upcomingevents' | translate\\\"\\r\\n                    iconAction=\\\"fas-table-list\\\" (action)=\\\"toggleDisplay()\\\"></core-context-menu-item>\\r\\n                <core-context-menu-item *ngIf=\\\"!showCalendar\\\" [priority]=\\\"800\\\" [content]=\\\"'addon.calendar.monthlyview' | translate\\\"\\r\\n                    iconAction=\\\"fas-calendar-days\\\" (action)=\\\"toggleDisplay()\\\"></core-context-menu-item>\\r\\n                <core-context-menu-item [priority]=\\\"600\\\" [content]=\\\"'core.settings.settings' | translate\\\" (action)=\\\"openSettings()\\\"\\r\\n                    iconAction=\\\"fas-gears\\\">\\r\\n                </core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!loaded || !hasOffline || !isOnline\\\" [priority]=\\\"400\\\"\\r\\n                    [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event, true)\\\"\\r\\n                    [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\"></core-context-menu-item>\\r\\n            </core-context-menu>\\r\\n            <core-user-menu-button></core-user-menu-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <!-- There is data to be synchronized -->\\r\\n    <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"hasOffline\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon name=\\\"fas-triangle-exclamation\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'addon.calendar.calendar' | translate} }}</ion-label>\\r\\n        </ion-item>\\r\\n    </ion-card>\\r\\n\\r\\n    <addon-calendar-calendar [hidden]=\\\"!showCalendar\\\" [initialYear]=\\\"year\\\" [initialMonth]=\\\"month\\\" [filter]=\\\"filter\\\"\\r\\n        [displayNavButtons]=\\\"showCalendar\\\" (onEventClicked)=\\\"gotoEvent($event)\\\" (onDayClicked)=\\\"gotoDay($event)\\\">\\r\\n    </addon-calendar-calendar>\\r\\n\\r\\n    <addon-calendar-upcoming-events *ngIf=\\\"loadUpcoming\\\" [hidden]=\\\"showCalendar\\\" [filter]=\\\"filter\\\" (onEventClicked)=\\\"gotoEvent($event)\\\">\\r\\n    </addon-calendar-upcoming-events>\\r\\n\\r\\n    <!-- Create a calendar event. -->\\r\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"canCreate\\\">\\r\\n        <ion-fab-button (click)=\\\"openEdit()\\\" [attr.aria-label]=\\\"'addon.calendar.newevent' | translate\\\">\\r\\n            <ion-icon name=\\\"fas-plus\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <span class=\\\"sr-only\\\">{{ 'addon.calendar.newevent' | translate }}</span>\\r\\n        </ion-fab-button>\\r\\n    </ion-fab>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.settings' | translate }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-list>\\r\\n        <ion-item *ngIf=\\\"defaultTimeLabel\\\">\\r\\n            <ion-label>{{ 'addon.calendar.defaultnotificationtime' | translate }}</ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"defaultTimeLabel\\\" (click)=\\\"changeDefaultTime($event)\\\">\\r\\n                <ion-select-option [value]=\\\"defaultTimeLabel\\\">{{ defaultTimeLabel }}</ion-select-option>\\r\\n            </ion-select>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonCalendarComponentsModule } from '@addons/calendar/components/components.module';\nimport { AddonCalendarDayPage } from '@addons/calendar/pages/day/day';\nimport { AddonCalendarEditEventPage } from '@addons/calendar/pages/edit-event/edit-event';\nimport { AddonCalendarEventPage } from '@addons/calendar/pages/event/event';\nimport { AddonCalendarIndexPage } from '@addons/calendar/pages/index';\nimport { AddonCalendarSettingsPage } from '@addons/calendar/pages/settings/settings';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\nimport { CoreEditorComponentsModule } from '@features/editor/components/components.module';\nimport { CoreMainMenuComponentsModule } from '@features/mainmenu/components/components.module';\n\nimport { buildTabMainRoutes } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { AddonCalendarMainMenuHandlerService } from './services/handlers/mainmenu';\n\n/**\n * Build module routes.\n *\n * @param injector Injector.\n * @returns Routes.\n */\nfunction buildRoutes(injector: Injector): Routes {\n    return [\n        {\n            path: 'index',\n            data: { mainMenuTabRoot: AddonCalendarMainMenuHandlerService.PAGE_NAME },\n            component: AddonCalendarIndexPage,\n        },\n        {\n            path: 'calendar-settings',\n            component: AddonCalendarSettingsPage,\n        },\n        {\n            path: 'day',\n            component: AddonCalendarDayPage,\n        },\n        {\n            path: 'event/:id',\n            component: AddonCalendarEventPage,\n        },\n        {\n            path: 'edit/:eventId',\n            component: AddonCalendarEditEventPage,\n        },\n        ...buildTabMainRoutes(injector, {\n            redirectTo: 'index',\n            pathMatch: 'full',\n        }),\n    ];\n}\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n        AddonCalendarComponentsModule,\n        CoreMainMenuComponentsModule,\n        CoreEditorComponentsModule,\n    ],\n    exports: [RouterModule],\n    declarations: [\n        AddonCalendarDayPage,\n        AddonCalendarEditEventPage,\n        AddonCalendarEventPage,\n        AddonCalendarIndexPage,\n        AddonCalendarSettingsPage,\n    ],\n    providers: [\n        {\n            provide: ROUTES,\n            multi: true,\n            deps: [Injector],\n            useFactory: buildRoutes,\n        },\n    ],\n})\nexport class AddonCalendarLazyModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonCalendarEventToDisplay } from '@addons/calendar/services/calendar';\nimport { Params } from '@angular/router';\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\n\n/**\n * Provides a collection of calendar events.\n */\nexport class AddonCalendarEventsSource extends CoreRoutedItemsManagerSource<AddonCalendarEventToDisplay> {\n\n    readonly DATE: string;\n\n    private events: AddonCalendarEventToDisplay[] = [];\n\n    constructor(date: string) {\n        super();\n\n        this.DATE = date;\n    }\n\n    /**\n     * Set events.\n     *\n     * @param events Events.\n     */\n    setEvents(events: AddonCalendarEventToDisplay[]): void {\n        this.events = events;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: AddonCalendarEventToDisplay[] }> {\n        return { items: this.events.slice(0) };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(event: AddonCalendarEventToDisplay): string {\n        return event.id.toString();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemQueryParams(): Params {\n        return { date: this.DATE };\n    }\n\n}\n","export default \":host .core-swipe-slides-container ion-grid {\\n  flex: none;\\n  width: 100%;\\n}\\n:host .addon-calendar-period {\\n  flex-grow: 3;\\n}\\n:host .addon-calendar-period h2 {\\n  margin-top: 10px;\\n  font-size: 1.2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvZGF5L2RheS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksVUFBQTtFQUNBLFdBQUE7QUFBUjtBQUdJO0VBQ0ksWUFBQTtBQURSO0FBRVE7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0FBQVoiLCJmaWxlIjoic3JjL2FkZG9ucy9jYWxlbmRhci9wYWdlcy9kYXkvZGF5LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICAuY29yZS1zd2lwZS1zbGlkZXMtY29udGFpbmVyIGlvbi1ncmlkIHtcclxuICAgICAgICBmbGV4OiBub25lO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIC5hZGRvbi1jYWxlbmRhci1wZXJpb2Qge1xyXG4gICAgICAgIGZsZXgtZ3JvdzogMztcclxuICAgICAgICBoMiB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0= */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNetwork } from '@services/network';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport {\n    AddonCalendarProvider,\n    AddonCalendar,\n    AddonCalendarEventToDisplay,\n    AddonCalendarCalendarDay,\n    AddonCalendarEventType,\n} from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarFilter, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { CoreCategoryData, CoreCourses, CoreEnrolledCourseData } from '@features/courses/services/courses';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { AddonCalendarFilterComponent } from '../../components/filter/filter';\nimport moment from 'moment-timezone';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreSwipeSlidesDynamicItemsManager } from '@classes/items-management/swipe-slides-dynamic-items-manager';\nimport { CoreSwipeSlidesComponent } from '@components/swipe-slides/swipe-slides';\nimport {\n    CoreSwipeSlidesDynamicItem,\n    CoreSwipeSlidesDynamicItemsManagerSource,\n} from '@classes/items-management/swipe-slides-dynamic-items-manager-source';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { AddonCalendarEventsSource } from '@addons/calendar/classes/events-source';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreTime } from '@singletons/time';\n\n/**\n * Page that displays the calendar events for a certain day.\n */\n@Component({\n    selector: 'page-addon-calendar-day',\n    templateUrl: 'day.html',\n    styleUrls: ['../../calendar-common.scss', 'day.scss'],\n})\nexport class AddonCalendarDayPage implements OnInit, OnDestroy {\n\n    @ViewChild(CoreSwipeSlidesComponent) slides?: CoreSwipeSlidesComponent<PreloadedDay>;\n\n    protected currentSiteId: string;\n\n    // Observers.\n    protected newEventObserver: CoreEventObserver;\n    protected discardedObserver: CoreEventObserver;\n    protected editEventObserver: CoreEventObserver;\n    protected deleteEventObserver: CoreEventObserver;\n    protected undeleteEventObserver: CoreEventObserver;\n    protected syncObserver: CoreEventObserver;\n    protected manualSyncObserver: CoreEventObserver;\n    protected onlineObserver: Subscription;\n    protected filterChangedObserver: CoreEventObserver;\n    protected managerUnsubscribe?: () => void;\n    protected logView: () => void;\n\n    periodName?: string;\n    manager?: CoreSwipeSlidesDynamicItemsManager<PreloadedDay, AddonCalendarDaySlidesItemsManagerSource>;\n    loaded = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING;\n    filter: AddonCalendarFilter = {\n        filtered: false,\n        courseId: undefined,\n        categoryId: undefined,\n        course: true,\n        group: true,\n        site: true,\n        user: true,\n        category: true,\n    };\n\n    constructor() {\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = CoreEvents.on(\n            AddonCalendarProvider.NEW_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.manager?.getSource().markAllItemsUnloaded();\n                    this.refreshData(true, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            this.manager?.getSource().markAllItemsUnloaded();\n            this.refreshData(true, true);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(\n            AddonCalendarProvider.EDIT_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.manager?.getSource().markAllItemsUnloaded();\n                    this.refreshData(true, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonCalendarSyncProvider.AUTO_SYNCED, () => {\n            this.manager?.getSource().markAllItemsUnloaded();\n            this.refreshData(false, true);\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            const selectedDay = this.manager?.getSelectedItem();\n            if (data && (data.source != 'day' || !selectedDay || !data.moment || !selectedDay.moment.isSame(data.moment, 'day'))) {\n                this.manager?.getSource().markAllItemsUnloaded();\n                this.refreshData(false, true);\n            }\n        }, this.currentSiteId);\n\n        // Update the events when an event is deleted.\n        this.deleteEventObserver = CoreEvents.on(\n            AddonCalendarProvider.DELETED_EVENT_EVENT,\n            (data) => {\n                if (data && !data.sent) {\n                    // Event was deleted in offline. Just mark it as deleted, no need to refresh.\n                    this.manager?.getSource().markAsDeleted(data.eventId, true);\n                } else {\n                    this.manager?.getSource().markAllItemsUnloaded();\n                    this.refreshData(false, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for events \"undeleted\" (offline).\n        this.undeleteEventObserver = CoreEvents.on(\n            AddonCalendarProvider.UNDELETED_EVENT_EVENT,\n            (data) => {\n                if (!data || !data.eventId) {\n                    return;\n                }\n\n                // Mark it as undeleted, no need to refresh.\n                this.manager?.getSource().markAsDeleted(data.eventId, false);\n            },\n            this.currentSiteId,\n        );\n\n        this.filterChangedObserver = CoreEvents.on(\n            AddonCalendarProvider.FILTER_CHANGED_EVENT,\n            async (data) => {\n                this.filter = data;\n\n                // Course viewed has changed, check if the user can create events for this course calendar.\n                await this.manager?.getSource().loadCanCreate(this.filter.courseId);\n\n                this.manager?.getSource().filterAllDayEvents(this.filter);\n            },\n        );\n\n        // Refresh online status when changes.\n        this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n            });\n        });\n\n        this.logView = CoreTime.once(() => {\n            const day = this.manager?.getSelectedItem();\n            if (!day) {\n                return;\n            }\n            const params = {\n                course: this.filter.courseId,\n                time: day.moment.unix(),\n            };\n\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'core_calendar_get_calendar_day_view',\n                name: Translate.instant('addon.calendar.dayviewtitle', { $a: this.periodName }),\n                data: {\n                    ...params,\n                    category: 'calendar',\n                },\n                url: CoreUrlUtils.addParamsToUrl('/calendar/view.php?view=day', params),\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        const types: string[] = [];\n\n        CoreUtils.enumKeys(AddonCalendarEventType).forEach((name) => {\n            const value = AddonCalendarEventType[name];\n            this.filter[name] = CoreNavigator.getRouteBooleanParam(name) ?? true;\n            types.push(value);\n        });\n        this.filter.courseId = CoreNavigator.getRouteNumberParam('courseId');\n        this.filter.categoryId = CoreNavigator.getRouteNumberParam('categoryId');\n\n        this.filter.filtered = this.filter.courseId !== undefined || types.some((name) => !this.filter[name]);\n\n        const month = CoreNavigator.getRouteNumberParam('month');\n        const source = new AddonCalendarDaySlidesItemsManagerSource(this, moment({\n            year: CoreNavigator.getRouteNumberParam('year'),\n            month: month ? month - 1 : undefined,\n            date: CoreNavigator.getRouteNumberParam('day'),\n        }).startOf('day'));\n        this.manager = new CoreSwipeSlidesDynamicItemsManager(source);\n        this.managerUnsubscribe = this.manager.addListener({\n            onSelectedItemUpdated: (item) => {\n                this.onDayViewed(item);\n            },\n        });\n\n        this.fetchData(true);\n    }\n\n    get canCreate(): boolean {\n        return this.manager?.getSource().canCreate || false;\n    }\n\n    get timeFormat(): string {\n        return this.manager?.getSource().timeFormat || 'core.strftimetime';\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @returns Promise resolved when done.\n     */\n    async fetchData(sync?: boolean): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n        this.isOnline = CoreNetwork.isOnline();\n\n        if (sync) {\n            await this.sync();\n        }\n\n        try {\n            await this.manager?.getSource().fetchData(this.filter.courseId);\n\n            await this.manager?.getSource().load(this.manager?.getSelectedItem());\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }\n\n        this.loaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Update data related to day being viewed.\n     *\n     * @param day Day viewed.\n     */\n    onDayViewed(day: DayBasicData): void {\n        this.periodName = CoreTimeUtils.userDate(\n            day.moment.unix() * 1000,\n            'core.strftimedaydate',\n        );\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher, done?: () => void): Promise<void> {\n        if (!this.loaded) {\n            return;\n        }\n\n        await this.refreshData(true).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param afterChange Whether the refresh is done after an event has changed or has been synced.\n     * @returns Promise resolved when done.\n     */\n    async refreshData(sync?: boolean, afterChange?: boolean): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const selectedDay = this.manager?.getSelectedItem() || null;\n\n        // Don't invalidate day events after a change, it has already been handled.\n        await this.manager?.getSource().invalidateContent(selectedDay, !afterChange);\n\n        await this.fetchData(sync);\n    }\n\n    /**\n     * Try to synchronize offline events.\n     *\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    protected async sync(showErrors?: boolean): Promise<void> {\n        try {\n            const result = await AddonCalendarSync.syncEvents();\n\n            if (result.warnings && result.warnings.length) {\n                CoreDomUtils.showAlert(undefined, result.warnings[0]);\n            }\n\n            if (result.updated) {\n                // Trigger a manual sync event.\n                const selectedDay = this.manager?.getSelectedItem();\n                result.source = 'day';\n                result.moment = selectedDay?.moment;\n\n                this.manager?.getSource().markAllItemsUnloaded();\n                CoreEvents.trigger(AddonCalendarSyncProvider.MANUAL_SYNCED, result, this.currentSiteId);\n            }\n        } catch (error) {\n            if (showErrors) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n        }\n    }\n\n    /**\n     * Check whether selected day is current day.\n     *\n     * @returns If selected day is current.\n     */\n    selectedDayIsCurrent(): boolean {\n        return !!this.manager?.getSelectedItem()?.isCurrentDay;\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param eventId Event to load.\n     * @param day Day.\n     */\n    gotoEvent(eventId: number, day: PreloadedDay): void {\n        CoreNavigator.navigateToSitePath(`/calendar/event/${eventId}`, { params: { date: day.moment.format('MMDDY') } });\n    }\n\n    /**\n     * Show the filter menu.\n     */\n    async openFilter(): Promise<void> {\n        await CoreDomUtils.openSideModal({\n            component: AddonCalendarFilterComponent,\n            componentProps: {\n                courses: this.manager?.getSource().courses,\n                filter: this.filter,\n            },\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param eventId Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        const params: Params = {};\n\n        if (!eventId) {\n            // It's a new event, set the time.\n            eventId = 0;\n\n            const selectedDay = this.manager?.getSelectedItem();\n            if (selectedDay) {\n                // Use current time but in the specified day.\n                const now = moment();\n                params.timestamp = selectedDay.moment.clone().set({ hour: now.hour(), minute: now.minute() }).unix() * 1000;\n            }\n        }\n\n        if (this.filter.courseId) {\n            params.courseId = this.filter.courseId;\n        }\n\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${eventId}`, { params });\n    }\n\n    /**\n     * Check whether selected day has offline data.\n     *\n     * @returns Whether selected day has offline data.\n     */\n    selectedDayHasOffline(): boolean {\n        const selectedDay = this.manager?.getSelectedItem();\n\n        return !!(selectedDay?.hasOffline);\n    }\n\n    /**\n     * Go to current day.\n     */\n    async goToCurrentDay(): Promise<void> {\n        const manager = this.manager;\n        const slides = this.slides;\n        if (!manager || !slides) {\n            return;\n        }\n\n        const currentDay = {\n            moment: moment(),\n        };\n        this.loaded = false;\n\n        try {\n            // Make sure the day is loaded.\n            await manager.getSource().loadItem(currentDay);\n\n            slides.slideToItem(currentDay);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Load next day.\n     */\n    async loadNext(): Promise<void> {\n        this.slides?.slideNext();\n    }\n\n    /**\n     * Load previous day.\n     */\n    async loadPrevious(): Promise<void> {\n        this.slides?.slidePrev();\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.newEventObserver?.off();\n        this.discardedObserver?.off();\n        this.editEventObserver?.off();\n        this.deleteEventObserver?.off();\n        this.undeleteEventObserver?.off();\n        this.syncObserver?.off();\n        this.manualSyncObserver?.off();\n        this.onlineObserver?.unsubscribe();\n        this.filterChangedObserver?.off();\n        this.manager?.getSource().forgetRelatedSources();\n        this.manager?.destroy();\n        this.managerUnsubscribe?.();\n\n        delete this.manager;\n    }\n\n}\n\n/**\n * Basic data to identify a day.\n */\ntype DayBasicData = {\n    moment: moment.Moment;\n};\n\n/**\n * Preloaded month.\n */\ntype PreloadedDay = DayBasicData & CoreSwipeSlidesDynamicItem & {\n    events?: AddonCalendarEventToDisplay[]; // Events (both online and offline).\n    onlineEvents?: AddonCalendarEventToDisplay[];\n    filteredEvents?: AddonCalendarEventToDisplay[];\n    isCurrentDay?: boolean;\n    isPastDay?: boolean;\n    hasOffline?: boolean; // Whether the day has offline data.\n};\n\n/**\n * Helper to manage swiping within days.\n */\nclass AddonCalendarDaySlidesItemsManagerSource extends CoreSwipeSlidesDynamicItemsManagerSource<PreloadedDay> {\n\n    courses: CoreEnrolledCourseData[] = [];\n    eventsSources: Set<AddonCalendarEventsSource> = new Set();\n    // Offline events classified in month & day.\n    offlineEvents: Record<string, Record<number, AddonCalendarEventToDisplay[]>> = {};\n    offlineEditedEventsIds: number[] = []; // IDs of events edited in offline.\n    categories?: { [id: number]: CoreCategoryData };\n    deletedEvents?: Set<number>; // Events deleted in offline.\n    timeFormat?: string;\n    canCreate = false;\n\n    protected dayPage: AddonCalendarDayPage;\n    protected sendLog = true;\n\n    constructor(page: AddonCalendarDayPage, initialMoment: moment.Moment) {\n        super({ moment: initialMoment });\n\n        this.dayPage = page;\n    }\n\n    /**\n     * Fetch data.\n     *\n     * @param courseId Current selected course id (if any).\n     * @returns Promise resolved when done.\n     */\n    async fetchData(courseId?: number): Promise<void> {\n        await Promise.all([\n            this.loadCourses(courseId),\n            this.loadCanCreate(courseId),\n            this.loadCategories(),\n            this.loadOfflineEvents(),\n            this.loadOfflineDeletedEvents(),\n            this.loadTimeFormat(),\n        ]);\n    }\n\n    /**\n     * Filter all loaded days events based on the filter popover.\n     *\n     * @param filter Filter to apply.\n     */\n    filterAllDayEvents(filter: AddonCalendarFilter): void {\n        this.getItems()?.forEach(day => this.filterEvents(day, filter));\n    }\n\n    /**\n     * Filter events of a certain day based on the filter popover.\n     *\n     * @param day Day with the events.\n     * @param filter Filter to apply.\n     */\n    filterEvents(day: PreloadedDay, filter: AddonCalendarFilter): void {\n        day.filteredEvents = AddonCalendarHelper.getFilteredEvents(day.events || [], filter, this.categories || {});\n\n        this.rememberEventsList(day);\n    }\n\n    /**\n     * Load courses.\n     *\n     * @param courseId Current selected course id (if any).\n     * @returns Promise resolved when done.\n     */\n    async loadCourses(courseId?: number): Promise<void> {\n        const data = await CoreCoursesHelper.getCoursesForPopover(courseId);\n\n        this.courses = data.courses;\n    }\n\n    /**\n     * Load whether user can create events.\n     *\n     * @param courseId Current selected course id (if any).\n     * @returns Promise resolved when done.\n     */\n    async loadCanCreate(courseId?: number): Promise<void> {\n        this.canCreate = await AddonCalendarHelper.canEditEvents(courseId);\n    }\n\n    /**\n     * Load categories to be able to filter events.\n     *\n     * @returns Promise resolved when done.\n     */\n    async loadCategories(): Promise<void> {\n        if (this.categories) {\n            // Already retrieved, stop.\n            return;\n        }\n\n        try {\n            const categories = await CoreCourses.getCategories(0, true);\n\n            // Index categories by ID.\n            this.categories = CoreUtils.arrayToObject(categories, 'id');\n        } catch {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Load events created or edited in offline.\n     *\n     * @returns Promise resolved when done.\n     */\n    async loadOfflineEvents(): Promise<void> {\n        // Get offline events.\n        const events = await AddonCalendarOffline.getAllEditedEvents();\n\n        // Classify them by month & day.\n        this.offlineEvents = AddonCalendarHelper.classifyIntoMonths(events);\n\n        // Get the IDs of events edited in offline.\n        this.offlineEditedEventsIds = events.filter((event) => event.id > 0).map((event) => event.id);\n    }\n\n    /**\n     * Load events deleted in offline.\n     *\n     * @returns Promise resolved when done.\n     */\n    async loadOfflineDeletedEvents(): Promise<void> {\n        const deletedEventsIds = await AddonCalendarOffline.getAllDeletedEventsIds();\n\n        this.deletedEvents = new Set(deletedEventsIds);\n    }\n\n    /**\n     * Load time format.\n     *\n     * @returns Promise resolved when done.\n     */\n    async loadTimeFormat(): Promise<void> {\n        this.timeFormat = await AddonCalendar.getCalendarTimeFormat();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemId(item: DayBasicData): string | number {\n        return AddonCalendarHelper.getDayId(item.moment);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getPreviousItem(item: DayBasicData): DayBasicData | null {\n        return {\n            moment: item.moment.clone().subtract(1, 'day'),\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getNextItem(item: DayBasicData): DayBasicData | null {\n        return {\n            moment: item.moment.clone().add(1, 'day'),\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async loadItemData(day: DayBasicData, preload = false): Promise<PreloadedDay | null> {\n        const preloadedDay: PreloadedDay = {\n            ...day,\n            hasOffline: false,\n            events: [],\n            onlineEvents: [],\n            filteredEvents: [],\n            isCurrentDay: day.moment.isSame(moment(), 'day'),\n            isPastDay: day.moment.isBefore(moment(), 'day'),\n        };\n\n        if (preload) {\n            return preloadedDay;\n        }\n\n        let result: AddonCalendarCalendarDay;\n\n        try {\n            // Don't pass courseId and categoryId, we'll filter them locally.\n            result = await AddonCalendar.getDayEvents(day.moment.year(), day.moment.month() + 1, day.moment.date());\n            preloadedDay.onlineEvents = await Promise.all(result.events.map((event) => AddonCalendarHelper.formatEventData(event)));\n        } catch (error) {\n            // Allow navigating to non-cached days in offline (behave as if using emergency cache).\n            if (CoreNetwork.isOnline()) {\n                throw error;\n            }\n        }\n\n        // Merge the online events with offline data.\n        preloadedDay.events = this.mergeEvents(preloadedDay);\n\n        // Filter events by course.\n        this.filterEvents(preloadedDay, this.dayPage.filter);\n\n        // Re-calculate the formatted time so it uses the device date.\n        const dayTime = day.moment.unix() * 1000;\n        const currentTime = CoreTimeUtils.timestamp();\n\n        const promises = preloadedDay.events.map(async (event) => {\n            event.ispast = preloadedDay.isPastDay || (preloadedDay.isCurrentDay && this.isEventPast(event, currentTime));\n            event.formattedtime = await AddonCalendar.formatEventTime(event, this.dayPage.timeFormat, true, dayTime);\n        });\n\n        await Promise.all(promises);\n\n        return preloadedDay;\n    }\n\n    /**\n     * Returns if the event is in the past or not.\n     *\n     * @param event Event object.\n     * @param currentTime Current time.\n     * @returns True if it's in the past.\n     */\n    isEventPast(event: AddonCalendarEventToDisplay, currentTime: number): boolean {\n        return (event.timestart + event.timeduration) < currentTime;\n    }\n\n    /**\n     * Merge online events with the offline events of that period.\n     *\n     * @param day Day with the events.\n     * @returns Merged events.\n     */\n    mergeEvents(day: PreloadedDay): AddonCalendarEventToDisplay[] {\n        day.hasOffline = false;\n\n        if (!Object.keys(this.offlineEvents).length && !this.deletedEvents?.size) {\n            // No offline events, nothing to merge.\n            return day.onlineEvents || [];\n        }\n\n        const monthOfflineEvents = this.offlineEvents[AddonCalendarHelper.getMonthId(day.moment)];\n        const dayOfflineEvents = monthOfflineEvents && monthOfflineEvents[day.moment.date()];\n        let result = day.onlineEvents || [];\n\n        if (this.deletedEvents?.size) {\n            // Mark as deleted the events that were deleted in offline.\n            result.forEach((event) => {\n                event.deleted = this.deletedEvents?.has(event.id);\n\n                if (event.deleted) {\n                    day.hasOffline = true;\n                }\n            });\n        }\n\n        if (this.offlineEditedEventsIds.length) {\n            // Remove the online events that were modified in offline.\n            result = result.filter((event) => this.offlineEditedEventsIds.indexOf(event.id) == -1);\n\n            if (result.length != day.onlineEvents?.length) {\n                day.hasOffline = true;\n            }\n        }\n\n        if (dayOfflineEvents && dayOfflineEvents.length) {\n            // Add the offline events (either new or edited).\n            day.hasOffline = true;\n            result = AddonCalendarHelper.sortEvents(result.concat(dayOfflineEvents));\n        }\n\n        return result;\n    }\n\n    /**\n     * Invalidate content.\n     *\n     * @param selectedDay The current selected day.\n     * @param invalidateDayEvents Whether to invalidate selected day events.\n     * @returns Promise resolved when done.\n     */\n    async invalidateContent(selectedDay: PreloadedDay | null, invalidateDayEvents?: boolean): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        if (invalidateDayEvents && selectedDay) {\n            promises.push(AddonCalendar.invalidateDayEvents(\n                selectedDay.moment.year(),\n                selectedDay.moment.month() + 1,\n                selectedDay.moment.date(),\n            ));\n        }\n        promises.push(AddonCalendar.invalidateAllowedEventTypes());\n        promises.push(CoreCourses.invalidateCategories(0, true));\n        promises.push(AddonCalendar.invalidateTimeFormat());\n\n        this.categories = undefined; // Get categories again.\n        this.sendLog = true;\n\n        if (selectedDay) {\n            selectedDay.dirty = true;\n        }\n\n        await Promise.all(promises);\n    }\n\n    /**\n     * Find an event and mark it as deleted.\n     *\n     * @param eventId Event ID.\n     * @param deleted Whether to mark it as deleted or not.\n     */\n    markAsDeleted(eventId: number, deleted: boolean): void {\n        // Mark the event as deleted or not.\n        this.getItems()?.some(day => {\n            const event = day.onlineEvents?.find((event) => event.id == eventId);\n\n            if (!event) {\n                return false;\n            }\n\n            event.deleted = deleted;\n\n            if (deleted) {\n                day.hasOffline = true;\n            } else {\n                // Re-calculate \"hasOffline\".\n                day.hasOffline = day.events?.length != day.onlineEvents?.length ||\n                    day.events?.some((event) => event.deleted || event.offline);\n            }\n\n            return true;\n        });\n\n        // Add it or remove it from the list of deleted events.\n        if (deleted) {\n            this.deletedEvents?.add(eventId);\n        } else {\n            this.deletedEvents?.delete(eventId);\n        }\n    }\n\n    /**\n     * Forget other sources that where created whilst using this one.\n     */\n    forgetRelatedSources(): void {\n        for (const source of this.eventsSources) {\n            CoreRoutedItemsManagerSourcesTracker.removeReference(source, this);\n        }\n    }\n\n    /**\n     * Remember the list of events in a day to be used in a different context.\n     *\n     * @param day Day containing the events list.\n     */\n    private async rememberEventsList(day: PreloadedDay): Promise<void> {\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonCalendarEventsSource, [\n            day.moment.format('MMDDY'),\n        ]);\n\n        if (!this.eventsSources.has(source)) {\n            this.eventsSources.add(source);\n\n            CoreRoutedItemsManagerSourcesTracker.addReference(source, this);\n        }\n\n        source.setEvents(day.filteredEvents ?? []);\n\n        await source.reload();\n    }\n\n}\n","export default \":host .addon-calendar-eventtype-container.item-select-disabled ion-label, :host .addon-calendar-eventtype-container.item-select-disabled ion-select {\\n  opacity: 1;\\n}\\n:host .addon-calendar-eventtype-container.item-select-disabled ion-select::part(icon) {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvZWRpdC1ldmVudC9lZGl0LWV2ZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRVE7RUFDSSxVQUFBO0FBRFo7QUFJUTtFQUNJLGFBQUE7QUFGWiIsImZpbGUiOiJzcmMvYWRkb25zL2NhbGVuZGFyL3BhZ2VzL2VkaXQtZXZlbnQvZWRpdC1ldmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgLmFkZG9uLWNhbGVuZGFyLWV2ZW50dHlwZS1jb250YWluZXIuaXRlbS1zZWxlY3QtZGlzYWJsZWQge1xyXG4gICAgICAgIGlvbi1sYWJlbCwgaW9uLXNlbGVjdCB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpb24tc2VsZWN0OjpwYXJ0KGljb24pIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19 */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreGroup, CoreGroups } from '@services/groups';\nimport { CoreSites } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreCategoryData, CoreCourses, CoreCourseSearchedData, CoreEnrolledCourseData } from '@features/courses/services/courses';\nimport { CoreEditorRichTextEditorComponent } from '@features/editor/components/rich-text-editor/rich-text-editor';\nimport {\n    AddonCalendarProvider,\n    AddonCalendarGetCalendarAccessInformationWSResponse,\n    AddonCalendarEvent,\n    AddonCalendarEventType,\n    AddonCalendar,\n    AddonCalendarSubmitCreateUpdateFormDataWSParams,\n} from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarEventTypeOption, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { CoreSite } from '@classes/site';\nimport { Translate } from '@singletons';\nimport { CoreFilterHelper } from '@features/filter/services/filter-helper';\nimport { AddonCalendarOfflineEventDBRecord } from '../../services/database/calendar-offline';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreNavigator } from '@services/navigator';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreForms } from '@singletons/form';\nimport { CoreReminders, CoreRemindersService, CoreRemindersUnits } from '@features/reminders/services/reminders';\nimport { CoreRemindersSetReminderMenuComponent } from '@features/reminders/components/set-reminder-menu/set-reminder-menu';\nimport moment from 'moment-timezone';\nimport { CoreAppProvider } from '@services/app';\n\n/**\n * Page that displays a form to create/edit an event.\n */\n@Component({\n    selector: 'page-addon-calendar-edit-event',\n    templateUrl: 'edit-event.html',\n    styleUrls: ['edit-event.scss'],\n})\nexport class AddonCalendarEditEventPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(CoreEditorRichTextEditorComponent) descriptionEditor!: CoreEditorRichTextEditorComponent;\n    @ViewChild('editEventForm') formElement!: ElementRef;\n\n    title = 'addon.calendar.newevent';\n    dateFormat: string;\n    component = AddonCalendarProvider.COMPONENT;\n    loaded = false;\n    hasOffline = false;\n    eventTypes: AddonCalendarEventTypeOption[] = [];\n    categories: CoreCategoryData[] = [];\n    courses: CoreCourseSearchedData[] | CoreEnrolledCourseData[] = [];\n    groups: CoreGroup[] = [];\n    loadingGroups = false;\n    courseGroupSet = false;\n    errors: Record<string, string>;\n    error = false;\n    eventRepeatId?: number;\n    otherEventsCount = 0;\n    eventId?: number;\n    maxDate: string;\n    minDate: string;\n    displayTimezone?: string;\n\n    // Form variables.\n    form: FormGroup;\n    typeControl: FormControl;\n    groupControl: FormControl;\n    descriptionControl: FormControl;\n\n    // Reminders.\n    remindersEnabled = false;\n    reminders: AddonCalendarEventCandidateReminder[] = [];\n\n    protected courseId!: number;\n    protected originalData?: AddonCalendarOfflineEventDBRecord;\n    protected currentSite: CoreSite;\n    protected types: { [name: string]: boolean } = {}; // Object with the supported types.\n    protected showAll = false;\n    protected isDestroyed = false;\n    protected gotEventData = false;\n\n    constructor(\n        protected fb: FormBuilder,\n    ) {\n        this.currentSite = CoreSites.getRequiredCurrentSite();\n        this.remindersEnabled = CoreReminders.isEnabled();\n        this.errors = {\n            required: Translate.instant('core.required'),\n        };\n\n        // Calculate format to use. ion-datetime doesn't support escaping characters ([]), so we remove them.\n        this.dateFormat = CoreTimeUtils.convertPHPToMoment(Translate.instant('core.strftimedatetimeshort'))\n            .replace(/[[\\]]/g, '');\n        this.displayTimezone = CoreAppProvider.getForcedTimezone();\n\n        this.form = new FormGroup({});\n\n        // Initialize form variables.\n        this.typeControl = this.fb.control('', Validators.required);\n        this.groupControl = this.fb.control('');\n        this.descriptionControl = this.fb.control('');\n        this.form.addControl('name', this.fb.control('', Validators.required));\n        this.form.addControl('eventtype', this.typeControl);\n        this.form.addControl('categoryid', this.fb.control(''));\n        this.form.addControl('groupcourseid', this.fb.control(''));\n        this.form.addControl('groupid', this.groupControl);\n        this.form.addControl('description', this.descriptionControl);\n        this.form.addControl('location', this.fb.control(''));\n        this.form.addControl('duration', this.fb.control(0));\n        this.form.addControl('timedurationminutes', this.fb.control(''));\n        this.form.addControl('repeat', this.fb.control(false));\n        this.form.addControl('repeats', this.fb.control('1'));\n        this.form.addControl('repeateditall', this.fb.control(1));\n\n        this.maxDate = CoreTimeUtils.getDatetimeDefaultMax();\n        this.minDate = CoreTimeUtils.getDatetimeDefaultMin();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.eventId = CoreNavigator.getRouteNumberParam('eventId') || undefined;\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId') || 0;\n        this.title = this.eventId ? 'addon.calendar.editevent' : 'addon.calendar.newevent';\n\n        const timestamp = CoreNavigator.getRouteNumberParam('timestamp');\n        const currentDate = CoreTimeUtils.toDatetimeFormat(timestamp);\n        this.form.addControl('timestart', this.fb.control(currentDate, Validators.required));\n        this.form.addControl('timedurationuntil', this.fb.control(currentDate));\n        this.form.addControl('courseid', this.fb.control(this.courseId));\n\n        this.initReminders();\n        this.fetchData().finally(() => {\n            this.originalData = CoreUtils.clone(this.form.value);\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Fetch the data needed to render the form.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        this.error = false;\n\n        // Get access info.\n        try {\n            const [types, accessInfo] = await Promise.all([\n                AddonCalendar.getAllowedEventTypes(this.courseId),\n                CoreUtils.ignoreErrors(AddonCalendar.getAccessInformation(this.courseId), {\n                    canmanageentries: false,\n                    canmanageownentries: false,\n                    canmanagegroupentries: false,\n                } as AddonCalendarGetCalendarAccessInformationWSResponse),\n            ]);\n\n            this.types = types;\n\n            const promises: Promise<void>[] = [];\n            const eventTypes = AddonCalendarHelper.getEventTypeOptions(this.types);\n\n            if (!eventTypes.length) {\n                throw new CoreError(Translate.instant('addon.calendar.nopermissiontoupdatecalendar'));\n            }\n\n            if (this.eventId && !this.gotEventData) {\n                // Editing an event, get the event data. Wait for sync first.\n                const eventId = this.eventId;\n\n                promises.push(AddonCalendarSync.waitForSync(AddonCalendarSyncProvider.SYNC_ID).then(async () => {\n                    // Do not block if the scope is already destroyed.\n                    if (!this.isDestroyed && this.eventId) {\n                        CoreSync.blockOperation(AddonCalendarProvider.COMPONENT, eventId);\n                    }\n\n                    let eventForm: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord | undefined;\n\n                    // Get the event offline data if there's any.\n                    try {\n                        eventForm = await AddonCalendarOffline.getEvent(eventId);\n\n                        this.hasOffline = true;\n                    } catch {\n                        // No offline data.\n                        this.hasOffline = false;\n                    }\n\n                    if (eventId > 0) {\n                        // It's an online event. get its data from server.\n                        const event = await AddonCalendar.getEventById(eventId);\n\n                        if (!eventForm) {\n                            eventForm = event; // Use offline data first.\n                        }\n\n                        this.eventRepeatId = event?.repeatid;\n                        if (this.eventRepeatId) {\n\n                            this.otherEventsCount = event.eventcount ? event.eventcount - 1 : 0;\n                        }\n                    }\n\n                    this.gotEventData = true;\n\n                    if (eventForm) {\n                        // Load the data in the form.\n                        return this.loadEventData(eventForm, this.hasOffline);\n                    }\n\n                    return;\n                }));\n            }\n\n            if (this.types.category) {\n                // Get the categories.\n                promises.push(this.fetchCategories());\n            }\n\n            this.showAll = CoreUtils.isTrueOrOne(this.currentSite.getStoredConfig('calendar_adminseesall')) &&\n                accessInfo.canmanageentries;\n\n            if (this.types.course || this.types.groups) {\n                promises.push(this.fetchCourses());\n            }\n            await Promise.all(promises);\n\n            if (!this.typeControl.value) {\n                // Initialize event type value. If course is allowed, select it first.\n                if (this.types.course) {\n                    this.typeControl.setValue(AddonCalendarEventType.COURSE);\n                } else {\n                    this.typeControl.setValue(eventTypes[0].value);\n                }\n            }\n\n            this.eventTypes = eventTypes;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting data.');\n            this.error = true;\n        }\n    }\n\n    protected async fetchCategories(): Promise<void> {\n        this.categories = await CoreCourses.getCategories(0, true);\n    }\n\n    protected async fetchCourses(): Promise<void> {\n        // Get the courses.\n        let courses = await (this.showAll ? CoreCourses.getCoursesByField() : CoreCourses.getUserCourses());\n\n        if (courses.length < 0) {\n            this.courses = [];\n\n            return;\n        }\n\n        const courseFillFullname = async (course: CoreCourseSearchedData | CoreEnrolledCourseData): Promise<void> => {\n            try {\n                const result = await CoreFilterHelper.getFiltersAndFormatText(course.fullname, 'course', course.id);\n                course.fullname = result.text;\n            } catch {\n                // Ignore errors.\n            }\n        };\n\n        if (this.showAll) {\n            // Remove site home from the list of courses.\n            const siteHomeId = CoreSites.getCurrentSiteHomeId();\n\n            if ('contacts' in courses[0]) {\n                courses = (courses as CoreCourseSearchedData[]).filter((course) => course.id != siteHomeId);\n            } else {\n                courses = (courses as CoreEnrolledCourseData[]).filter((course) => course.id != siteHomeId);\n            }\n        }\n\n        // Format the name of the courses.\n        if ('contacts' in courses[0]) {\n            await Promise.all((courses as CoreCourseSearchedData[]).map(courseFillFullname));\n        } else {\n            await Promise.all((courses as CoreEnrolledCourseData[]).map(courseFillFullname));\n        }\n\n        // Sort courses by name.\n        this.courses = courses.sort((a, b) => {\n            const compareA = a.fullname.toLowerCase();\n            const compareB = b.fullname.toLowerCase();\n\n            return compareA.localeCompare(compareB);\n        });\n\n    }\n\n    /**\n     * Load an event data into the form.\n     *\n     * @param event Event data.\n     * @param isOffline Whether the data is from offline or not.\n     * @returns Promise resolved when done.\n     */\n    protected async loadEventData(\n        event: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord,\n        isOffline: boolean,\n    ): Promise<void> {\n        if (!event) {\n            return;\n        }\n\n        const offlineEvent = (event as AddonCalendarOfflineEventDBRecord);\n        const onlineEvent = (event as AddonCalendarEvent);\n\n        const courseId = isOffline ? offlineEvent.courseid : onlineEvent.course?.id;\n\n        this.form.controls.name.setValue(event.name);\n        this.form.controls.timestart.setValue(CoreTimeUtils.toDatetimeFormat(event.timestart * 1000));\n        this.form.controls.eventtype.setValue(event.eventtype);\n        this.form.controls.categoryid.setValue(event.categoryid || '');\n        this.form.controls.courseid.setValue(courseId || '');\n        this.form.controls.groupcourseid.setValue(courseId || '');\n        this.form.controls.groupid.setValue(event.groupid || '');\n        this.form.controls.description.setValue(event.description);\n        this.form.controls.location.setValue(event.location);\n\n        if (isOffline) {\n            // It's an offline event, use the data as it is.\n            this.form.controls.duration.setValue(offlineEvent.duration);\n            this.form.controls.timedurationuntil.setValue(\n                CoreTimeUtils.toDatetimeFormat(((offlineEvent.timedurationuntil || 0) * 1000) || Date.now()),\n            );\n            this.form.controls.timedurationminutes.setValue(offlineEvent.timedurationminutes || '');\n            this.form.controls.repeat.setValue(!!offlineEvent.repeat);\n            this.form.controls.repeats.setValue(offlineEvent.repeats || '1');\n            this.form.controls.repeateditall.setValue(offlineEvent.repeateditall || 1);\n        } else {\n            // Online event, we'll have to calculate the data.\n\n            if (onlineEvent.timeduration > 0) {\n                this.form.controls.duration.setValue(1);\n                this.form.controls.timedurationuntil.setValue(CoreTimeUtils.toDatetimeFormat(\n                    (onlineEvent.timestart + onlineEvent.timeduration) * 1000,\n                ));\n            } else {\n                // No duration.\n                this.form.controls.duration.setValue(0);\n                this.form.controls.timedurationuntil.setValue(CoreTimeUtils.toDatetimeFormat());\n            }\n\n            this.form.controls.timedurationminutes.setValue('');\n            this.form.controls.repeat.setValue(!!onlineEvent.repeatid);\n            this.form.controls.repeats.setValue(onlineEvent.eventcount || '1');\n            this.form.controls.repeateditall.setValue(1);\n        }\n\n        if (event.eventtype == AddonCalendarEventType.GROUP && courseId) {\n            await this.loadGroups(courseId);\n        }\n    }\n\n    /**\n     * Pull to refresh.\n     *\n     * @param refresher Refresher.\n     */\n    refreshData(refresher?: IonRefresher): void {\n        const promises = [\n            AddonCalendar.invalidateAccessInformation(this.courseId),\n            AddonCalendar.invalidateAllowedEventTypes(this.courseId),\n        ];\n\n        if (this.types) {\n            if (this.types.category) {\n                promises.push(CoreCourses.invalidateCategories(0, true));\n            }\n            if (this.types.course || this.types.groups) {\n                if (this.showAll) {\n                    promises.push(CoreCourses.invalidateCoursesByField());\n                } else {\n                    promises.push(CoreCourses.invalidateUserCourses());\n                }\n            }\n        }\n\n        Promise.all(promises).finally(() => {\n            this.fetchData().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * A course was selected, get its groups.\n     */\n    async groupCourseSelected(): Promise<void> {\n        const courseId = this.form.controls.groupcourseid.value;\n        if (!courseId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading();\n\n        try {\n            await this.loadGroups(courseId);\n\n            this.groupControl.setValue('');\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting data.');\n        }\n\n        modal.dismiss();\n    }\n\n    /**\n     * Load groups of a certain course.\n     *\n     * @param courseId Course ID.\n     * @returns Promise resolved when done.\n     */\n    protected async loadGroups(courseId: number): Promise<void> {\n        this.loadingGroups = true;\n\n        try {\n            this.groups = await CoreGroups.getUserGroupsInCourse(courseId);\n            this.courseGroupSet = true;\n        } finally {\n            this.loadingGroups = false;\n        }\n    }\n\n    selectDuration(duration: string): void {\n        this.form.controls.duration.setValue(duration);\n    }\n\n    /**\n     * Create the event.\n     */\n    async submit(): Promise<void> {\n        // Validate data.\n        const formData = this.form.value;\n        const timeStartDate = moment(formData.timestart).unix();\n        const timeUntilDate = moment(formData.timedurationuntil).unix();\n        const timeDurationMinutes = parseInt(formData.timedurationminutes || '', 10);\n        let error: string | undefined;\n\n        if (formData.eventtype === AddonCalendarEventType.COURSE && !formData.courseid) {\n            error = 'core.selectacourse';\n        } else if (formData.eventtype === AddonCalendarEventType.GROUP && !formData.groupcourseid) {\n            error = 'core.selectacourse';\n        } else if (formData.eventtype === AddonCalendarEventType.GROUP && !formData.groupid) {\n            error = 'core.selectagroup';\n        } else if (formData.eventtype === AddonCalendarEventType.CATEGORY && !formData.categoryid) {\n            error = 'core.selectacategory';\n        } else if (formData.duration === 1 && timeStartDate > timeUntilDate) {\n            error = 'addon.calendar.invalidtimedurationuntil';\n        } else if (formData.duration === 2 && (isNaN(timeDurationMinutes) || timeDurationMinutes < 1)) {\n            error = 'addon.calendar.invalidtimedurationminutes';\n        }\n\n        if (error) {\n            // Show error and stop.\n            CoreDomUtils.showErrorModal(Translate.instant(error));\n\n            return;\n        }\n\n        // Format the data to send.\n        const data: AddonCalendarSubmitCreateUpdateFormDataWSParams = {\n            name: formData.name,\n            eventtype: formData.eventtype,\n            timestart: timeStartDate,\n            description: {\n                text: formData.description || '',\n                format: 1,\n                itemid: 0, // Files not supported yet.\n            },\n            location: formData.location,\n            duration: formData.duration,\n            repeat: formData.repeat,\n        };\n\n        if (formData.eventtype == AddonCalendarEventType.COURSE) {\n            data.courseid = formData.courseid;\n        } else if (formData.eventtype == AddonCalendarEventType.GROUP) {\n            data.groupcourseid = formData.groupcourseid;\n            data.groupid = formData.groupid;\n        } else if (formData.eventtype == AddonCalendarEventType.CATEGORY) {\n            data.categoryid = formData.categoryid;\n        }\n\n        if (formData.duration == 1) {\n            data.timedurationuntil = timeUntilDate;\n        } else if (formData.duration == 2) {\n            data.timedurationminutes = formData.timedurationminutes;\n        }\n\n        if (formData.repeat) {\n            data.repeats = Number(formData.repeats);\n        }\n\n        if (this.eventRepeatId) {\n            data.repeatid = this.eventRepeatId;\n            data.repeateditall = formData.repeateditall;\n        }\n\n        // Send the data.\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n        let event: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord;\n\n        try {\n            const result = await AddonCalendar.submitEvent(this.eventId, data, {\n                reminders: this.eventId ? [] : this.reminders, // Only allow adding reminders for new events.\n            });\n            event = result.event;\n\n            CoreForms.triggerFormSubmittedEvent(this.formElement, result.sent, this.currentSite.getId());\n\n            if (result.sent) {\n                // Event created or edited, invalidate right days & months.\n                const numberOfRepetitions = formData.repeat\n                    ? formData.repeats\n                    : (data.repeateditall && this.otherEventsCount\n                        ? this.otherEventsCount + 1\n                        : 1);\n\n                try {\n                    await AddonCalendarHelper.refreshAfterChangeEvent(result.event, numberOfRepetitions);\n                } catch {\n                    // Ignore errors.\n                }\n            }\n\n            this.returnToList(event);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error sending data.');\n        }\n\n        modal.dismiss();\n    }\n\n    /**\n     * Convenience function to update or return to event list depending on device.\n     *\n     * @param event Event.\n     */\n    protected returnToList(event: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord): void {\n        // Unblock the sync because the view will be destroyed and the sync process could be triggered before ngOnDestroy.\n        this.unblockSync();\n\n        if (this.eventId && this.eventId > 0) {\n            // Editing an event.\n            CoreEvents.trigger(\n                AddonCalendarProvider.EDIT_EVENT_EVENT,\n                { eventId: this.eventId },\n                this.currentSite.getId(),\n            );\n        } else {\n            CoreEvents.trigger(\n                AddonCalendarProvider.NEW_EVENT_EVENT,\n                {\n                    eventId: event.id,\n                    oldEventId: this.eventId,\n                },\n                this.currentSite.getId(),\n            );\n        }\n\n        this.originalData = undefined; // Avoid asking for confirmation.\n        CoreNavigator.back();\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved with true if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (AddonCalendarHelper.hasEventDataChanged(this.form.value, this.originalData)) {\n            // Show confirmation if some data has been modified.\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        CoreForms.triggerFormCancelledEvent(this.formElement, this.currentSite.getId());\n\n        return true;\n    }\n\n    /**\n     * Unblock sync.\n     */\n    protected unblockSync(): void {\n        if (this.eventId) {\n            CoreSync.unblockOperation(AddonCalendarProvider.COMPONENT, this.eventId);\n        }\n    }\n\n    /**\n     * Init reminders.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async initReminders(): Promise<void> {\n        // Don't init reminders when editing an event. Right now, only allow adding reminders for new events.\n        if (!this.remindersEnabled || this.eventId) {\n            return;\n        }\n\n        // Check if default reminders are enabled.\n        const defaultTime = await CoreReminders.getDefaultNotificationTime(this.currentSite.getId());\n        if (defaultTime === CoreRemindersService.DISABLED) {\n            return;\n        }\n\n        const data = CoreRemindersService.convertSecondsToValueAndUnit(defaultTime);\n\n        // Add default reminder.\n        this.reminders.push({\n            value: data.value,\n            unit: data.unit,\n            label: CoreReminders.getUnitValueLabel(data.value, data.unit, true),\n        });\n    }\n\n    /**\n     * Add a reminder.\n     */\n    async addReminder(): Promise<void> {\n        const formData = this.form.value;\n        const eventTime = CoreTimeUtils.convertToTimestamp(formData.timestart, true);\n\n        const reminderTime = await CoreDomUtils.openPopover<{timeBefore: number}>({\n            component: CoreRemindersSetReminderMenuComponent,\n            componentProps: {\n                eventTime,\n            },\n            // TODO: Add event to open the popover in place.\n        });\n\n        if (reminderTime === undefined) {\n            // User canceled.\n            return;\n        }\n\n        const data = CoreRemindersService.convertSecondsToValueAndUnit(reminderTime.timeBefore);\n\n        // Add reminder.\n        this.reminders.push({\n            time: reminderTime.timeBefore,\n            value: data.value,\n            unit: data.unit,\n            label: CoreReminders.getUnitValueLabel(data.value, data.unit),\n        });\n    }\n\n    /**\n     * Remove a reminder.\n     *\n     * @param reminder The reminder to remove.\n     */\n    removeReminder(reminder: AddonCalendarEventCandidateReminder): void {\n        const index = this.reminders.indexOf(reminder);\n        if (index !== -1) {\n            this.reminders.splice(index, 1);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.unblockSync();\n        this.isDestroyed = true;\n    }\n\n}\n\ntype AddonCalendarEventCandidateReminder =  {\n    time?: number; // Undefined for default reminder.\n    value: number; // Amount of time.\n    unit: CoreRemindersUnits; // Units.\n    label: string; // Label to represent the reminder.\n};\n","export default \":host ion-card ion-note {\\n  font-size: 1.6rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvZXZlbnQvZXZlbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGlCQUFBO0FBQVIiLCJmaWxlIjoic3JjL2FkZG9ucy9jYWxlbmRhci9wYWdlcy9ldmVudC9ldmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaW9uLWNhcmQgaW9uLW5vdGUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { AlertOptions } from '@ionic/core';\nimport {\n    AddonCalendar,\n    AddonCalendarEventToDisplay,\n    AddonCalendarProvider,\n} from '../../services/calendar';\nimport { AddonCalendarEventReminder, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarSync, AddonCalendarSyncEvents, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { CoreNetwork } from '@services/network';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreDomUtils, ToastDuration } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreSites } from '@services/sites';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { NgZone, Translate } from '@singletons';\nimport { Subscription } from 'rxjs';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { AddonCalendarEventsSource } from '@addons/calendar/classes/events-source';\nimport { CoreSwipeNavigationItemsManager } from '@classes/items-management/swipe-navigation-items-manager';\nimport { CoreReminders, CoreRemindersService } from '@features/reminders/services/reminders';\nimport { CoreRemindersSetReminderMenuComponent } from '@features/reminders/components/set-reminder-menu/set-reminder-menu';\n\n/**\n * Page that displays a single calendar event.\n */\n@Component({\n    selector: 'page-addon-calendar-event',\n    templateUrl: 'event.html',\n    styleUrls: ['../../calendar-common.scss', 'event.scss'],\n})\nexport class AddonCalendarEventPage implements OnInit, OnDestroy {\n\n    protected eventId!: number;\n    protected siteHomeId: number;\n    protected newEventObserver: CoreEventObserver;\n    protected editEventObserver: CoreEventObserver;\n    protected syncObserver: CoreEventObserver;\n    protected manualSyncObserver: CoreEventObserver;\n    protected onlineObserver: Subscription;\n    protected defaultTimeChangedObserver: CoreEventObserver;\n    protected currentSiteId: string;\n    protected updateCurrentTime?: number;\n\n    eventLoaded = false;\n    event?: AddonCalendarEventToDisplay;\n    events?: CoreSwipeNavigationItemsManager;\n    courseId?: number;\n    courseName = '';\n    groupName?: string;\n    courseUrl = '';\n    remindersEnabled = false;\n    moduleUrl = '';\n    categoryPath = '';\n    currentTime = -1;\n    reminders: AddonCalendarEventReminder[] = [];\n    canEdit = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING; // Sync icon.\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n        this.remindersEnabled = CoreReminders.isEnabled();\n        this.siteHomeId = CoreSites.getCurrentSiteHomeId();\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        // Check if site supports editing. No need to check allowed types, event.canedit already does it.\n        this.canEdit = AddonCalendar.canEditEventsInSite();\n\n        // Listen for event edited. If current event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(AddonCalendarProvider.EDIT_EVENT_EVENT, (data) => {\n            if (data && data.eventId === this.eventId) {\n                this.eventLoaded = false;\n                this.refreshEvent(true, false);\n            }\n        }, this.currentSiteId);\n\n        // Listen for event created. If user edits the data of a new offline event or it's sent to server, this event is triggered.\n        this.newEventObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_EVENT, (data) => {\n            if (this.eventId < 0 && data && (data.eventId === this.eventId || data.oldEventId === this.eventId)) {\n                this.eventId = data.eventId;\n                this.eventLoaded = false;\n                this.refreshEvent(true, false);\n            }\n        }, this.currentSiteId);\n\n        // Refresh data if this calendar event is synchronized automatically.\n        this.syncObserver = CoreEvents.on(\n            AddonCalendarSyncProvider.AUTO_SYNCED,\n            (data) => this.checkSyncResult(false, data),\n            this.currentSiteId,\n        );\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(\n            AddonCalendarSyncProvider.MANUAL_SYNCED,\n            (data) => this.checkSyncResult(true, data),\n            this.currentSiteId,\n        );\n\n        // Refresh online status when changes.\n        this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n            });\n        });\n\n        // Reload reminders if default notification time changes.\n        this.defaultTimeChangedObserver = CoreEvents.on(CoreRemindersService.DEFAULT_NOTIFICATION_TIME_CHANGED, () => {\n            this.loadReminders();\n        }, this.currentSiteId);\n\n        // Set and update current time. Use a 5 seconds error margin.\n        this.currentTime = CoreTimeUtils.timestamp();\n        this.updateCurrentTime = window.setInterval(() => {\n            this.currentTime = CoreTimeUtils.timestamp();\n        }, 5000);\n    }\n\n    /**\n     * Load reminders.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadReminders(): Promise<void> {\n        if (!this.remindersEnabled || !this.event) {\n            return;\n        }\n\n        this.reminders = await AddonCalendarHelper.getEventReminders(this.eventId, this.event.timestart, this.currentSiteId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.eventId = CoreNavigator.getRequiredRouteNumberParam('id');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        await this.initializeSwipeManager();\n        await this.fetchEvent();\n    }\n\n    /**\n     * Fetches the event and updates the view.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    async fetchEvent(sync = false, showErrors = false): Promise<void> {\n        this.isOnline = CoreNetwork.isOnline();\n\n        if (sync) {\n            const deleted = await this.syncEvents(showErrors);\n\n            if (deleted) {\n                return;\n            }\n        }\n\n        try {\n            // Get the event data.\n            if (this.eventId >= 0) {\n                const event = await AddonCalendar.getEventById(this.eventId);\n                this.event = await AddonCalendarHelper.formatEventData(event);\n            }\n\n            try {\n                const offlineEvent = AddonCalendarHelper.formatOfflineEventData(\n                    await AddonCalendarOffline.getEvent(this.eventId),\n                );\n\n                // There is offline data, apply it.\n                this.hasOffline = true;\n                this.event = Object.assign(this.event || {}, offlineEvent);\n            } catch {\n                // No offline data.\n                this.hasOffline = false;\n\n                if (this.eventId < 0) {\n                    // It's an offline event, but it wasn't found. Shouldn't happen.\n                    CoreDomUtils.showErrorModal('Event not found.');\n                    CoreNavigator.back();\n\n                    return;\n                }\n            }\n\n            if (!this.event) {\n                return; // At this point we should always have the event, adding this check to avoid TS errors.\n            }\n\n            // Load reminders.\n            this.loadReminders();\n\n            // Reset some of the calculated data.\n            this.categoryPath = '';\n            this.courseName = '';\n            this.courseUrl = '';\n            this.moduleUrl = '';\n\n            if (this.event.moduleIcon) {\n                // It's a module event, translate the module name to the current language.\n                const name = CoreCourse.translateModuleName(this.event.modulename || '');\n                if (name.indexOf('core.mod_') === -1) {\n                    this.event.modulename = name;\n                }\n\n                // Get the module URL.\n                this.moduleUrl = this.event.url || '';\n            }\n\n            const promises: Promise<void>[] = [];\n            const event = this.event;\n\n            const courseId = this.event.courseid;\n            if (courseId != this.siteHomeId) {\n                // If the event belongs to a course, get the course name and the URL to view it.\n                if (this.event.course) {\n                    this.courseId = this.event.course.id;\n                    this.courseName = this.event.course.fullname;\n                    this.courseUrl = this.event.course.viewurl;\n                }\n            }\n\n            // If it's a group event, get the name of the group.\n            if (courseId && this.event.groupid) {\n                this.groupName = event.groupname;\n            }\n\n            if (this.event.iscategoryevent && this.event.category) {\n                this.categoryPath = this.event.category.nestedname;\n            }\n\n            if (this.event.location) {\n                // Build a link to open the address in maps.\n                this.event.location = CoreTextUtils.decodeHTML(this.event.location);\n                this.event.encodedLocation = CoreTextUtils.buildAddressURL(this.event.location);\n            }\n\n            // Check if event was deleted in offine.\n            promises.push(AddonCalendarOffline.isEventDeleted(this.eventId).then((deleted) => {\n                event.deleted = deleted;\n\n                return;\n            }));\n\n            // Re-calculate the formatted time so it uses the device date.\n            promises.push(AddonCalendar.getCalendarTimeFormat().then(async (timeFormat) => {\n                event.formattedtime = await AddonCalendar.formatEventTime(event, timeFormat);\n\n                return;\n            }));\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevent', true);\n        }\n\n        this.eventLoaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Initialize swipe manager if enabled.\n     */\n    protected async initializeSwipeManager(): Promise<void> {\n        const date = CoreNavigator.getRouteParam('date');\n        const source = date && CoreRoutedItemsManagerSourcesTracker.getSource(\n            AddonCalendarEventsSource,\n            [date],\n        );\n\n        if (!source) {\n            return;\n        }\n\n        this.events = new AddonCalendarEventsSwipeItemsManager(source);\n\n        await this.events.start();\n    }\n\n    /**\n     * Sync offline events.\n     *\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved with boolean: whether event was deleted on sync.\n     */\n    protected async syncEvents(showErrors = false): Promise<boolean> {\n        let deleted = false;\n\n        // Try to synchronize offline events.\n        try {\n            const result = await AddonCalendarSync.syncEvents();\n            if (result.warnings && result.warnings.length) {\n                CoreDomUtils.showAlert(undefined, result.warnings[0]);\n            }\n\n            if (result.deleted && result.deleted.indexOf(this.eventId) != -1) {\n                // This event was deleted during the sync.\n                deleted = true;\n            } else if (this.eventId < 0 && result.offlineIdMap[this.eventId]) {\n                // Event was created, use the online ID.\n                this.eventId = result.offlineIdMap[this.eventId];\n            }\n\n            if (result.updated) {\n                // Trigger a manual sync event.\n                result.source = 'event';\n\n                CoreEvents.trigger(\n                    AddonCalendarSyncProvider.MANUAL_SYNCED,\n                    result,\n                    this.currentSiteId,\n                );\n            }\n        } catch (error) {\n            if (showErrors) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n        }\n\n        return deleted;\n    }\n\n    /**\n     * Add a reminder for this event.\n     */\n    async addReminder(): Promise<void> {\n        if (!this.event || !this.event.id) {\n            return;\n        }\n\n        const reminderTime = await CoreDomUtils.openPopover<{timeBefore: number}>({\n            component: CoreRemindersSetReminderMenuComponent,\n            componentProps: {\n                eventTime: this.event.timestart,\n            },\n            // TODO: Add event to open the popover in place.\n        });\n\n        if (reminderTime === undefined) {\n            // User canceled.\n            return;\n        }\n\n        await AddonCalendar.addEventReminder(this.event, reminderTime.timeBefore, this.currentSiteId);\n\n        await this.loadReminders();\n    }\n\n    /**\n     * Delete the selected reminder.\n     *\n     * @param id Reminder ID.\n     * @param e Click event.\n     */\n    async deleteReminder(id: number, e: Event): Promise<void> {\n        e.preventDefault();\n        e.stopPropagation();\n\n        try {\n            await CoreDomUtils.showDeleteConfirm();\n\n            const modal = await CoreDomUtils.showModalLoading('core.deleting', true);\n\n            try {\n                await CoreReminders.removeReminder(id);\n                await this.loadReminders();\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'Error deleting reminder');\n            } finally {\n                modal.dismiss();\n            }\n        } catch {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher, done?: () => void, showErrors= false): Promise<void> {\n        if (!this.eventLoaded) {\n            return;\n        }\n\n        await this.refreshEvent(true, showErrors).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the event.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    async refreshEvent(sync = false, showErrors = false): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        if (this.eventId > 0) {\n            promises.push(AddonCalendar.invalidateEvent(this.eventId));\n        }\n        promises.push(AddonCalendar.invalidateTimeFormat());\n\n        await CoreUtils.allPromisesIgnoringErrors(promises);\n\n        await this.fetchEvent(sync, showErrors);\n    }\n\n    /**\n     * Open the page to edit the event.\n     */\n    openEdit(): void {\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${this.eventId}`);\n    }\n\n    /**\n     * Delete the event.\n     */\n    async deleteEvent(): Promise<void> {\n        if (!this.event) {\n            return;\n        }\n\n        const title = Translate.instant('addon.calendar.deleteevent');\n        const options: AlertOptions = {};\n        let message: string;\n\n        if (this.event.eventcount > 1) {\n            // It's a repeated event.\n            message = Translate.instant(\n                'addon.calendar.confirmeventseriesdelete',\n                { $a: { name: this.event.name, count: this.event.eventcount } },\n            );\n\n            options.inputs = [\n                {\n                    type: 'radio',\n                    name: 'deleteall',\n                    checked: true,\n                    value: false,\n                    label: Translate.instant('addon.calendar.deleteoneevent'),\n                },\n                {\n                    type: 'radio',\n                    name: 'deleteall',\n                    checked: false,\n                    value: true,\n                    label: Translate.instant('addon.calendar.deleteallevents'),\n                },\n            ];\n        } else {\n            // Not repeated, display a simple confirm.\n            message = Translate.instant('addon.calendar.confirmeventdelete', { $a: this.event.name });\n        }\n\n        let deleteAll = false;\n        try {\n            deleteAll = await CoreDomUtils.showConfirm(message, title, undefined, undefined, options);\n        } catch {\n\n            // User canceled.\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            let onlineEventDeleted = false;\n            if (this.event.id < 0) {\n                await AddonCalendarOffline.deleteEvent(this.event.id);\n            } else {\n                onlineEventDeleted = await AddonCalendar.deleteEvent(this.event.id, this.event.name, deleteAll);\n            }\n\n            if (onlineEventDeleted) {\n                // Event deleted, invalidate right days & months.\n                try {\n                    await AddonCalendarHelper.refreshAfterChangeEvent(this.event, deleteAll ? this.event.eventcount : 1);\n                } catch {\n                    // Ignore errors.\n                }\n            }\n\n            // Trigger an event.\n            if (this.event.id < 0) {\n                CoreEvents.trigger(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, {}, CoreSites.getCurrentSiteId());\n            } else {\n                CoreEvents.trigger(AddonCalendarProvider.DELETED_EVENT_EVENT, {\n                    eventId: this.eventId,\n                    sent: onlineEventDeleted,\n                }, CoreSites.getCurrentSiteId());\n            }\n\n            if (onlineEventDeleted || this.event.id < 0) {\n                CoreDomUtils.showToast('addon.calendar.eventcalendareventdeleted', true, ToastDuration.LONG);\n\n                // Event deleted, close the view.\n                CoreNavigator.back();\n            } else {\n                // Event deleted in offline, just mark it as deleted.\n                this.event.deleted = true;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error deleting event.');\n        }\n\n        modal.dismiss();\n    }\n\n    /**\n     * Undo delete the event.\n     */\n    async undoDelete(): Promise<void> {\n        if (!this.event) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n\n            await AddonCalendarOffline.unmarkDeleted(this.event.id);\n\n            // Trigger an event.\n            CoreEvents.trigger(AddonCalendarProvider.UNDELETED_EVENT_EVENT, {\n                eventId: this.eventId,\n            }, CoreSites.getCurrentSiteId());\n\n            this.event.deleted = false;\n\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error undeleting event.');\n        }\n\n        modal.dismiss();\n    }\n\n    /**\n     * Check the result of an automatic sync or a manual sync not done by this page.\n     *\n     * @param isManual Whether it's a manual sync.\n     * @param data Sync result.\n     */\n    protected checkSyncResult(isManual: boolean, data: AddonCalendarSyncEvents): void {\n        if (!data) {\n            return;\n        }\n\n        if (data.deleted && data.deleted.indexOf(this.eventId) != -1) {\n            CoreDomUtils.showToast('addon.calendar.eventcalendareventdeleted', true, ToastDuration.LONG);\n\n            // Event was deleted, close the view.\n            CoreNavigator.back();\n        } else if (data.events && (!isManual || data.source != 'event')) {\n            if (this.eventId < 0) {\n                if (data.offlineIdMap[this.eventId]) {\n                    // Event was created, use the online ID.\n                    this.eventId = data.offlineIdMap[this.eventId];\n\n                    this.eventLoaded = false;\n                    this.refreshEvent();\n                }\n            } else {\n                const event = data.events.find((ev) => ev.id == this.eventId);\n\n                if (event) {\n                    this.eventLoaded = false;\n                    this.refreshEvent();\n                }\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.editEventObserver.off();\n        this.syncObserver.off();\n        this.manualSyncObserver.off();\n        this.onlineObserver.unsubscribe();\n        this.newEventObserver.off();\n        this.events?.destroy();\n        clearInterval(this.updateCurrentTime);\n    }\n\n}\n\n/**\n * Helper to manage swiping within a collection of events.\n */\nclass AddonCalendarEventsSwipeItemsManager extends CoreSwipeNavigationItemsManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return route.params.id;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNetwork } from '@services/network';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { AddonCalendar, AddonCalendarProvider } from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { AddonCalendarFilter, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { NgZone } from '@singletons';\nimport { Subscription } from 'rxjs';\nimport { CoreEnrolledCourseData } from '@features/courses/services/courses';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AddonCalendarCalendarComponent } from '../../components/calendar/calendar';\nimport { AddonCalendarUpcomingEventsComponent } from '../../components/upcoming-events/upcoming-events';\nimport { AddonCalendarFilterComponent } from '../../components/filter/filter';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\n\n/**\n * Page that displays the calendar events.\n */\n@Component({\n    selector: 'page-addon-calendar-index',\n    templateUrl: 'index.html',\n})\nexport class AddonCalendarIndexPage implements OnInit, OnDestroy {\n\n    @ViewChild(AddonCalendarCalendarComponent) calendarComponent?: AddonCalendarCalendarComponent;\n    @ViewChild(AddonCalendarUpcomingEventsComponent) upcomingEventsComponent?: AddonCalendarUpcomingEventsComponent;\n\n    protected currentSiteId: string;\n\n    // Observers.\n    protected newEventObserver?: CoreEventObserver;\n    protected discardedObserver?: CoreEventObserver;\n    protected editEventObserver?: CoreEventObserver;\n    protected deleteEventObserver?: CoreEventObserver;\n    protected undeleteEventObserver?: CoreEventObserver;\n    protected syncObserver?: CoreEventObserver;\n    protected manualSyncObserver?: CoreEventObserver;\n    protected onlineObserver?: Subscription;\n    protected filterChangedObserver?: CoreEventObserver;\n\n    year?: number;\n    month?: number;\n    canCreate = false;\n    courses: CoreEnrolledCourseData[] = [];\n    loaded = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING;\n    showCalendar = true;\n    loadUpcoming = false;\n    filter: AddonCalendarFilter = {\n        filtered: false,\n        courseId: undefined,\n        categoryId: undefined,\n        course: true,\n        group: true,\n        site: true,\n        user: true,\n        category: true,\n    };\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = CoreEvents.on(\n            AddonCalendarProvider.NEW_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, false, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(true, false, true);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(\n            AddonCalendarProvider.EDIT_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, false, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonCalendarSyncProvider.AUTO_SYNCED, () => {\n            this.loaded = false;\n            this.refreshData(false, false, true);\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data && data.source != 'index') {\n                this.loaded = false;\n                this.refreshData(false, false, true);\n            }\n        }, this.currentSiteId);\n\n        // Update the events when an event is deleted.\n        this.deleteEventObserver = CoreEvents.on(AddonCalendarProvider.DELETED_EVENT_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(false, false, true);\n        }, this.currentSiteId);\n\n        // Update the \"hasOffline\" property if an event deleted in offline is restored.\n        this.undeleteEventObserver = CoreEvents.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, async () => {\n            this.hasOffline = await AddonCalendarOffline.hasOfflineData();\n        }, this.currentSiteId);\n\n        this.filterChangedObserver = CoreEvents.on(\n            AddonCalendarProvider.FILTER_CHANGED_EVENT,\n            async (filterData) => {\n                this.filter = filterData;\n\n                // Course viewed has changed, check if the user can create events for this course calendar.\n                this.canCreate = await AddonCalendarHelper.canEditEvents(this.filter.courseId);\n            },\n        );\n\n        // Refresh online status when changes.\n        this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.loadUpcoming = !!CoreNavigator.getRouteBooleanParam('upcoming');\n        this.showCalendar = !this.loadUpcoming;\n\n        this.route.queryParams.subscribe(async () => {\n            this.filter.courseId = CoreNavigator.getRouteNumberParam('courseId');\n            this.year = CoreNavigator.getRouteNumberParam('year');\n            this.month = CoreNavigator.getRouteNumberParam('month');\n            this.filter.filtered = !!this.filter.courseId;\n\n            this.fetchData(true, false);\n\n            if (this.year !== undefined && this.month !== undefined && this.calendarComponent) {\n                this.calendarComponent.viewMonth(this.month, this.year);\n            }\n        });\n\n        const deepLinkManager = new CoreMainMenuDeepLinkManager();\n        deepLinkManager.treatLink();\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    async fetchData(sync?: boolean, showErrors?: boolean): Promise<void> {\n\n        this.syncIcon = CoreConstants.ICON_LOADING;\n        this.isOnline = CoreNetwork.isOnline();\n\n        if (sync) {\n            // Try to synchronize offline events.\n            try {\n                const result = await AddonCalendarSync.syncEvents();\n                if (result.warnings && result.warnings.length) {\n                    CoreDomUtils.showAlert(undefined, result.warnings[0]);\n                }\n\n                if (result.updated) {\n                    // Trigger a manual sync event.\n                    result.source = 'index';\n\n                    CoreEvents.trigger(\n                        AddonCalendarSyncProvider.MANUAL_SYNCED,\n                        result,\n                        this.currentSiteId,\n                    );\n                }\n            } catch (error) {\n                if (showErrors) {\n                    CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n                }\n            }\n        }\n\n        try {\n            const promises: Promise<void>[] = [];\n\n            this.hasOffline = false;\n\n            // Load courses for the popover.\n            promises.push(CoreCoursesHelper.getCoursesForPopover(this.filter.courseId).then((data) => {\n                this.courses = data.courses;\n\n                return;\n            }));\n\n            // Check if user can create events.\n            promises.push(AddonCalendarHelper.canEditEvents(this.filter.courseId).then((canEdit) => {\n                this.canCreate = canEdit;\n\n                return;\n            }));\n\n            // Check if there is offline data.\n            promises.push(AddonCalendarOffline.hasOfflineData().then((hasOffline) => {\n                this.hasOffline = hasOffline;\n\n                return;\n            }));\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }\n\n        this.loaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher, done?: () => void, showErrors?: boolean): Promise<void> {\n        if (!this.loaded) {\n            return;\n        }\n\n        await this.refreshData(true, showErrors).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @param afterChange Whether the refresh is done after an event has changed or has been synced.\n     * @returns Promise resolved when done.\n     */\n    async refreshData(sync = false, showErrors = false, afterChange = false): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonCalendar.invalidateAllowedEventTypes());\n\n        // Refresh the sub-component.\n        if (this.showCalendar && this.calendarComponent) {\n            promises.push(this.calendarComponent.refreshData(afterChange));\n        } else if (!this.showCalendar && this.upcomingEventsComponent) {\n            promises.push(this.upcomingEventsComponent.refreshData());\n        }\n\n        await Promise.all(promises).finally(() => this.fetchData(sync, showErrors));\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param eventId Event to load.\n     */\n    gotoEvent(eventId: number): void {\n        CoreNavigator.navigateToSitePath(`/calendar/event/${eventId}`);\n    }\n\n    /**\n     * View a certain day.\n     *\n     * @param data Data with the year, month and day.\n     */\n    gotoDay(data: {day: number; month: number; year: number}): void {\n        const params: Params = {\n            day: data.day,\n            month: data.month,\n            year: data.year,\n        };\n\n        Object.keys(this.filter).forEach((key) => {\n            params[key] = this.filter[key];\n        });\n\n        CoreNavigator.navigateToSitePath('/calendar/day', { params });\n    }\n\n    /**\n     * Show the filter menu.\n     */\n    async openFilter(): Promise<void> {\n        await CoreDomUtils.openSideModal({\n            component: AddonCalendarFilterComponent,\n            componentProps: {\n                courses: this.courses,\n                filter: this.filter,\n            },\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param eventId Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        const params: Params = {};\n        eventId = eventId || 0;\n\n        if (this.filter.courseId) {\n            params.courseId = this.filter.courseId;\n        }\n\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${eventId}`, { params });\n    }\n\n    /**\n     * Open calendar events settings.\n     */\n    openSettings(): void {\n        CoreNavigator.navigateToSitePath('/calendar/calendar-settings');\n    }\n\n    /**\n     * Toogle display: monthly view or upcoming events.\n     */\n    toggleDisplay(): void {\n        this.showCalendar = !this.showCalendar;\n\n        if (!this.showCalendar) {\n            this.loadUpcoming = true;\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.newEventObserver?.off();\n        this.discardedObserver?.off();\n        this.editEventObserver?.off();\n        this.deleteEventObserver?.off();\n        this.undeleteEventObserver?.off();\n        this.syncObserver?.off();\n        this.manualSyncObserver?.off();\n        this.filterChangedObserver?.off();\n        this.onlineObserver?.unsubscribe();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport {\n    CoreReminders,\n    CoreRemindersService,\n} from '@features/reminders/services/reminders';\nimport { CoreRemindersSetReminderMenuComponent } from '@features/reminders/components/set-reminder-menu/set-reminder-menu';\n\n/**\n * Page that displays the calendar settings.\n */\n@Component({\n    selector: 'page-addon-calendar-settings',\n    templateUrl: 'settings.html',\n})\nexport class AddonCalendarSettingsPage implements OnInit {\n\n    defaultTimeLabel = '';\n\n    protected defaultTime?: number;\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.updateDefaultTimeLabel();\n    }\n\n    /**\n     * Change default time.\n     *\n     * @param e Event.\n     * @returns Promise resolved when done.\n     */\n    async changeDefaultTime(e: Event): Promise<void> {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        e.preventDefault();\n\n        const reminderTime = await CoreDomUtils.openPopover<{timeBefore: number}>({\n            component: CoreRemindersSetReminderMenuComponent,\n            componentProps: {\n                initialValue: this.defaultTime,\n                noReminderLabel: 'core.settings.disabled',\n            },\n            event: e,\n        });\n\n        if (reminderTime === undefined) {\n            // User canceled.\n            return;\n        }\n\n        await CoreReminders.setDefaultNotificationTime(reminderTime.timeBefore ?? CoreRemindersService.DISABLED);\n        this.updateDefaultTimeLabel();\n    }\n\n    /**\n     * Update default time label.\n     */\n    async updateDefaultTimeLabel(): Promise<void> {\n        this.defaultTime = await CoreReminders.getDefaultNotificationTime();\n\n        const defaultTime = CoreRemindersService.convertSecondsToValueAndUnit(this.defaultTime);\n        this.defaultTimeLabel = CoreReminders.getUnitValueLabel(defaultTime.value, defaultTime.unit);\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ActivatedRoute, ActivatedRouteSnapshot, UrlSegment } from '@angular/router';\n\nimport { CoreNavigator } from '@services/navigator';\n\nimport { CoreRoutedItemsManager } from './routed-items-manager';\nimport { CoreRoutedItemsManagerSource } from './routed-items-manager-source';\n\n/**\n * Helper class to manage the state and routing of a swipeable page.\n */\nexport class CoreSwipeNavigationItemsManager<\n    Item = unknown,\n    Source extends CoreRoutedItemsManagerSource<Item> = CoreRoutedItemsManagerSource<Item>\n>\n    extends CoreRoutedItemsManager<Item, Source> {\n\n    /**\n     * Process page started operations.\n     */\n    async start(): Promise<void> {\n        this.updateSelectedItem();\n    }\n\n    /**\n     * Navigate to the next item.\n     */\n    async navigateToNextItem(): Promise<void> {\n        await this.navigateToItemBy(1, 'forward');\n    }\n\n    /**\n     * Navigate to the previous item.\n     */\n    async navigateToPreviousItem(): Promise<void> {\n        await this.navigateToItemBy(-1, 'back');\n    }\n\n    /**\n     * Has a next item.\n     *\n     * @returns If has next item.\n     */\n    async hasNextItem(): Promise<boolean> {\n        const item = await this.getItemBy(1);\n\n        return !!item;\n    }\n\n    /**\n     * Has a previous item.\n     *\n     * @returns If has previous item.\n     */\n    async hasPreviousItem(): Promise<boolean> {\n        const item = await this.getItemBy(-1);\n\n        return !!item;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getCurrentPageRoute(): ActivatedRoute | null {\n        return CoreNavigator.getCurrentRoute();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        const segments: UrlSegment[] = [];\n\n        while (route) {\n            segments.push(...route.url);\n\n            if (!route.firstChild) {\n                break;\n            }\n\n            route = route.firstChild;\n        }\n\n        return segments.map(segment => segment.path).join('/').replace(/\\/+/, '/').trim() || null;\n    }\n\n    /**\n     * Navigate to an item by an offset.\n     *\n     * @param delta Index offset.\n     * @param animationDirection Animation direction.\n     */\n    protected async navigateToItemBy(delta: number, animationDirection: 'forward' | 'back'): Promise<void> {\n        const item = await this.getItemBy(delta);\n\n        if (!item) {\n            return;\n        }\n\n        await this.navigateToItem(item, { animationDirection, replace: true });\n    }\n\n    /**\n     * Get item by an offset.\n     *\n     * @param delta Index offset.\n     * @returns The item or null if none.\n     */\n    protected async getItemBy(delta: number): Promise<Item | null> {\n        const items = this.getSource().getItems();\n        const selectedIndex = (this.selectedItem && items?.indexOf(this.selectedItem)) ?? -1;\n\n        if (selectedIndex === -1 || items === null) {\n            return null;\n        }\n\n        const deltaStep = delta > 0 ? 1 : -1;\n        let nextIndex = selectedIndex;\n        let deltaMoved = 0;\n\n        while (deltaMoved !== delta) {\n            nextIndex += deltaStep;\n\n            if (nextIndex < 0) {\n                return null;\n            }\n\n            if (nextIndex >= items.length) {\n                break;\n            }\n\n            if (this.skipItemInSwipe(items[nextIndex])) {\n                continue;\n            }\n\n            deltaMoved += deltaStep;\n        }\n\n        if (deltaMoved === delta) {\n            return items[nextIndex];\n        }\n\n        if (!this.getSource().isCompleted()) {\n            await this.getSource().load();\n\n            return this.getItemBy(delta);\n        }\n\n        return null;\n    }\n\n    /**\n     * Check if an item should be skipped during swipe navigation.\n     *\n     * @param item Item.\n     * @returns Whether to skip this item during swipe navigation.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected skipItemInSwipe(item: Item): boolean {\n        return false;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}