{"version":3,"sources":["./src/core/features/settings/pages/about/about.html","./src/core/features/settings/pages/dev/dev.html","./src/core/features/settings/pages/deviceinfo/deviceinfo.html","./src/core/features/settings/pages/general/general.html","./src/core/features/settings/pages/index/index.html","./src/core/features/settings/pages/licenses/licenses.html","./src/core/features/settings/pages/space-usage/space-usage.html","./src/core/features/settings/pages/synchronization/synchronization.html","./src/core/features/login/sitelist.scss","./src/core/features/settings/classes/settings-sections-source.ts","./src/core/features/settings/pages/about/about.scss","./src/core/features/settings/pages/about/about.ts","./src/core/features/settings/pages/dev/dev.ts","./src/core/features/settings/pages/deviceinfo/deviceinfo.scss","./src/core/features/settings/pages/deviceinfo/deviceinfo.ts","./src/core/features/settings/pages/general/general.scss","./src/core/features/settings/pages/general/general.ts","./src/core/features/settings/pages/index/index.ts","./src/core/features/settings/pages/licenses/licenses.ts","./src/core/features/settings/pages/space-usage/space-usage.ts","./src/core/features/settings/pages/synchronization/synchronization.ts","./src/core/features/settings/settings-lazy.module.ts"],"names":[],"mappings":"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","file":"settings-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                {{ 'core.settings.about' | translate}}\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-list class=\\\"list-item-limited-width\\\">\\r\\n        <ion-item button class=\\\"ion-text-wrap\\\" (click)=\\\"openPage('licenses')\\\" detail=\\\"true\\\">\\r\\n            <ion-icon name=\\\"far-copyright\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>{{ 'core.settings.opensourcelicenses' | translate }}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"privacyPolicy\\\" class=\\\"ion-text-wrap\\\" button core-link auto-login=\\\"no\\\" [href]=\\\"privacyPolicy\\\" detail=\\\"true\\\"\\r\\n            detailIcon=\\\"open-outline\\\">\\r\\n            <ion-icon name=\\\"fas-user-shield\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>{{ 'core.settings.privacypolicy' | translate }}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"a11yStatement\\\" class=\\\"ion-text-wrap\\\" button core-link auto-login=\\\"no\\\" [href]=\\\"a11yStatement\\\" detail=\\\"true\\\"\\r\\n            detailIcon=\\\"open-outline\\\">\\r\\n            <ion-icon name=\\\"fas-universal-access\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>{{ 'core.settings.accessstatement' | translate }}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"currentSite && feedbackFormUrl && showSurvey\\\" class=\\\"ion-text-wrap\\\" button core-link [href]=\\\"feedbackFormUrl\\\"\\r\\n            detail=\\\"true\\\" detailIcon=\\\"open-outline\\\">\\r\\n            <ion-icon name=\\\"fas-bullhorn\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>{{ 'core.settings.helpusimprove' | translate }}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"legalDisclaimer\\\" class=\\\"ion-text-wrap\\\" button core-link auto-login=\\\"no\\\" [href]=\\\"legalDisclaimer\\\" detail=\\\"true\\\"\\r\\n            detailIcon=\\\"open-outline\\\">\\r\\n            <ion-icon name=\\\"fas-scale-balanced\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>{{ 'core.settings.legaldisclaimer' | translate }}</ion-label>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-no-border\\\">\\r\\n    <ion-item button class=\\\"ion-text-wrap ion-text-center core-about-deviceinfo\\\" detail=\\\"false\\\" (click)=\\\"openPage('deviceinfo')\\\">\\r\\n        <ion-label>\\r\\n            <p class=\\\"item-heading\\\">{{ appName }} {{ versionName }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n</ion-footer>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.developeroptions' | translate }}</h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\" *ngIf=\\\"siteId\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"copyInfo()\\\" [attr.aria-label]=\\\"'core.settings.copyinfo' | translate\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-clipboard\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-list class=\\\"list-item-limited-width\\\">\\r\\n        <ion-item class=\\\"ion-text-wrap\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">Text direction</p>\\r\\n                <p>{{ direction }}</p>\\r\\n            </ion-label>\\r\\n            <ion-toggle [(ngModel)]=\\\"rtl\\\" (ionChange)=\\\"RTLChanged()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">Force safe area margins</p>\\r\\n            </ion-label>\\r\\n            <ion-toggle [(ngModel)]=\\\"forceSafeAreaMargins\\\" (ionChange)=\\\"safeAreaChanged()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"stagingSitesCount && enableStagingSites !== undefined\\\">\\r\\n            <ion-label>\\r\\n                <h2>Enable staging sites ({{stagingSitesCount}})</h2>\\r\\n            </ion-label>\\r\\n            <ion-toggle [(ngModel)]=\\\"enableStagingSites\\\" (ionChange)=\\\"setEnabledStagingSites($event.detail.checked)\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ng-container *ngIf=\\\"siteId\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">Enable remote styles <ion-badge>{{remoteStylesCount}}</ion-badge>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n                <ion-toggle [(ngModel)]=\\\"remoteStyles\\\" (ionChange)=\\\"remoteStylesChanged()\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">Enable site plugin styles <ion-badge>{{pluginStylesCount}}</ion-badge>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n                <ion-toggle [(ngModel)]=\\\"pluginStyles\\\" (ionChange)=\\\"pluginStylesChanged()\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"userToursEnabled\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">Reset user tours</p>\\r\\n                </ion-label>\\r\\n                <ion-button (click)=\\\"resetUserTours()\\\" aria-label=\\\"Reset user tours\\\" fill=\\\"clear\\\" slot=\\\"end\\\">\\r\\n                    <ion-icon slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\" name=\\\"fas-broom\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item-divider>\\r\\n                <ion-label>\\r\\n                    <h2>Disabled features</h2>\\r\\n                </ion-label>\\r\\n            </ion-item-divider>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let feature of disabledFeatures\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ feature }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item-divider>\\r\\n                <ion-label>\\r\\n                    <h2>Site plugins</h2>\\r\\n                </ion-label>\\r\\n            </ion-item-divider>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let plugin of sitePlugins\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ plugin.addon }} ({{plugin.component}})</p>\\r\\n                    <p>{{plugin.version}}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ng-container>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                {{ 'core.settings.deviceinfo' | translate }}\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"copyInfo()\\\" [attr.aria-label]=\\\"'core.settings.copyinfo' | translate\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-clipboard\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-list class=\\\"list-item-limited-width\\\">\\r\\n        <ion-item *ngIf=\\\"showDevOptions\\\" detail=\\\"true\\\" (click)=\\\"gotoDevOptions()\\\">\\r\\n            <ion-icon name=\\\"fas-terminal\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.developeroptions' | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.appversion' | translate}}</p>\\r\\n                <p>{{ deviceInfo.versionName }} ({{ deviceInfo.versionCode }})</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item (longPress)=\\\"copyItemInfo($event)\\\" (click)=\\\"enableDevOptions()\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.compilationinfo' | translate }}</p>\\r\\n                <p *ngIf=\\\"deviceInfo.compilationTime\\\">{{ deviceInfo.compilationTime | coreFormatDate: \\\"LLL Z\\\": false }}</p>\\r\\n                <p *ngIf=\\\"deviceInfo.lastCommit\\\">{{ deviceInfo.lastCommit }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.siteUrl\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.siteinfo' | translate }}<ng-container *ngIf=\\\"deviceInfo.isPrefixedUrl\\\">\\r\\n                        *</ng-container>\\r\\n                </p>\\r\\n                <p><a [href]=\\\"deviceInfo.siteUrl\\\" core-link auto-login=\\\"yes\\\">{{ deviceInfo.siteUrl }}</a></p>\\r\\n                <p *ngIf=\\\"deviceInfo.siteVersion\\\">{{ deviceInfo.siteVersion }}</p>\\r\\n                <p *ngIf=\\\"deviceInfo.siteId\\\">{{ deviceInfo.siteId }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.fileSystemRoot\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.filesystemroot' | translate }}</p>\\r\\n                <p>\\r\\n                    <a *ngIf=\\\"fsClickable\\\" [href]=\\\"deviceInfo.fileSystemRoot\\\" core-link auto-login=\\\"no\\\">\\r\\n                        {{ deviceInfo.fileSystemRoot }}\\r\\n                    </a>\\r\\n                </p>\\r\\n                <p *ngIf=\\\"!fsClickable\\\">{{ deviceInfo.fileSystemRoot }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.userAgent\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.navigatoruseragent' | translate }}</p>\\r\\n                <p>{{ deviceInfo.userAgent }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.browserLanguage\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.navigatorlanguage' | translate }}</p>\\r\\n                <p>{{ deviceInfo.browserLanguage }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.currentLanguage\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.currentlanguage' | translate }}</p>\\r\\n                <p>{{ currentLangName }} ({{ deviceInfo.currentLanguage }})</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.locationHref\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.locationhref' | translate }}</p>\\r\\n                <p>{{ deviceInfo.locationHref }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.deviceType\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.displayformat' | translate }}</p>\\r\\n                <p>{{ 'core.' + deviceInfo.deviceType | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.deviceOs && deviceOsTranslated\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.deviceos' | translate}}</p>\\r\\n                <p>{{ deviceOsTranslated }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.screen\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.screen' | translate }}</p>\\r\\n                <p>{{ deviceInfo.screen }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.networkstatus' | translate}}</p>\\r\\n                <p>{{ 'core.' + deviceInfo.networkStatus | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.wificonnection' | translate}}</p>\\r\\n                <p>{{ 'core.' + deviceInfo.wifiConnection | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.cordovaVersion\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.cordovaversion' | translate }}</p>\\r\\n                <p>{{ deviceInfo.cordovaVersion }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.platform\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.cordovadeviceplatform' | translate }}</p>\\r\\n                <p>{{ deviceInfo.platform }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.osVersion\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.cordovadeviceosversion' | translate }}</p>\\r\\n                <p>{{ deviceInfo.osVersion }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.model\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.cordovadevicemodel' | translate}}</p>\\r\\n                <p>{{ deviceInfo.model }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.uuid\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.cordovadeviceuuid' | translate}}</p>\\r\\n                <p>{{ deviceInfo.uuid }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.pushId\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.pushid' | translate }}</p>\\r\\n                <p>{{ deviceInfo.pushId }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"deviceInfo.pushId\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.encryptedpushsupported' | translate }}</p>\\r\\n                <p *ngIf=\\\"!deviceInfo.encryptedPushSupported\\\">{{ 'core.no' | translate }}</p>\\r\\n                <p *ngIf=\\\"deviceInfo.encryptedPushSupported\\\">{{ 'core.yes' | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.localnotifavailable' | translate }}</p>\\r\\n                <p>{{ 'core.' + deviceInfo.localNotifAvailable | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.general' | translate }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-list class=\\\"list-item-limited-width\\\">\\r\\n        <ion-item class=\\\"ion-text-wrap\\\" lines=\\\"none\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.language' | translate }}</p>\\r\\n            </ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"selectedLanguage\\\" (ionChange)=\\\"languageChanged($event)\\\" interface=\\\"action-sheet\\\"\\r\\n                [cancelText]=\\\"'core.cancel' | translate\\\" [interfaceOptions]=\\\"{header: 'core.settings.language' | translate}\\\">\\r\\n                <ion-select-option *ngFor=\\\"let entry of languages\\\" [value]=\\\"entry.code\\\">{{ entry.name }}</ion-select-option>\\r\\n            </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap core-settings-general-font-size item-interactive\\\" lines=\\\"none\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.fontsize' | translate }}</p>\\r\\n            </ion-label>\\r\\n            <ion-segment [(ngModel)]=\\\"selectedZoomLevel\\\" color=\\\"primary\\\">\\r\\n                <ion-segment-button *ngFor=\\\" let zoomLevel of zoomLevels\\\" [value]=\\\"zoomLevel.value\\\"\\r\\n                    [ngStyle]=\\\"{'font-size.px': zoomLevel.style}\\\" (click)=\\\"zoomLevelChanged($event, zoomLevel.value)\\\">\\r\\n                    <ion-label>\\r\\n                        {{ 'core.settings.fontsizecharacter' | translate }}\\r\\n                        <!-- Empty element styled with the largest font size, so all buttons share a common baseline. -->\\r\\n                        <span [ngStyle]=\\\"{'font-size.px': zoomLevels[zoomLevels.length - 1].style}\\\"></span>\\r\\n                    </ion-label>\\r\\n                </ion-segment-button>\\r\\n            </ion-segment>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap core-settings-general-color-scheme\\\" *ngIf=\\\"colorSchemes.length > 0\\\" lines=\\\"none\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.colorscheme' | translate }}</p>\\r\\n                <p *ngIf=\\\"colorSchemeDisabled\\\" class=\\\"text-danger\\\">{{ 'core.settings.forcedsetting' | translate }}</p>\\r\\n            </ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"selectedScheme\\\" (ionChange)=\\\"colorSchemeChanged($event)\\\" interface=\\\"action-sheet\\\"\\r\\n                [cancelText]=\\\"'core.cancel' | translate\\\" [disabled]=\\\"colorSchemeDisabled\\\"\\r\\n                [interfaceOptions]=\\\"{header: 'core.settings.colorscheme' | translate}\\\">\\r\\n                <ion-select-option *ngFor=\\\"let scheme of colorSchemes\\\" [value]=\\\"scheme\\\">\\r\\n                    {{ 'core.settings.colorscheme-' + scheme | translate }}</ion-select-option>\\r\\n            </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item text-wrap *ngIf=\\\"colorSchemes.length > 0 && selectedScheme=='system' && isAndroid\\\" lines=\\\"none\\\">\\r\\n            <ion-label>\\r\\n                <p>{{ 'core.settings.colorscheme-system-notice' | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.enablerichtexteditor' | translate }}</p>\\r\\n                <p>{{ 'core.settings.enablerichtexteditordescription' | translate }}</p>\\r\\n            </ion-label>\\r\\n            <ion-toggle [(ngModel)]=\\\"richTextEditor\\\" (ionChange)=\\\"richTextEditorChanged($event)\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"displayIframeHelp\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.ioscookies' | translate }}</p>\\r\\n                <p>{{ 'core.settings.ioscookiesdescription' | translate }}</p>\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"openNativeSettings($event)\\\">\\r\\n                    {{ 'core.opensettings' | translate }}\\r\\n                </ion-button>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.debugdisplay' | translate }}</p>\\r\\n                <p>{{ 'core.settings.debugdisplaydescription' | translate }}</p>\\r\\n            </ion-label>\\r\\n            <ion-toggle [(ngModel)]=\\\"debugDisplay\\\" (ionChange)=\\\"debugDisplayChanged($event)\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"analyticsSupported\\\">\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.settings.enableanalytics' | translate }}</p>\\r\\n                <p>{{ 'core.settings.enableanalyticsdescription' | translate }}</p>\\r\\n            </ion-label>\\r\\n            <ion-toggle [(ngModel)]=\\\"analyticsEnabled\\\" (ionChange)=\\\"analyticsEnabledChanged($event)\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.appsettings' | translate }}</h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\"></ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-list>\\r\\n            <ion-item *ngFor=\\\"let section of sections.items\\\" [attr.aria-current]=\\\"sections.getItemAriaCurrent(section)\\\" button detail=\\\"true\\\"\\r\\n                (click)=\\\"sections.select(section)\\\">\\r\\n                <ion-icon [name]=\\\"section.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ section.name | translate }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.opensourcelicenses' | translate }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-searchbar [(ngModel)]=\\\"textFilter\\\" (ionInput)=\\\"filterChanged($event.target)\\\" (ionCancel)=\\\"filterChanged($event.target)\\\"\\r\\n            [placeholder]=\\\"'core.filter' | translate\\\">\\r\\n        </ion-searchbar>\\r\\n        <ion-list>\\r\\n            <ion-item button *ngIf=\\\"error\\\" class=\\\"ion-text-wrap\\\" [href]=\\\"licensesUrl\\\" core-link auto-login=\\\"no\\\">\\r\\n                <ion-label>\\r\\n                    {{ 'core.settings.opensourcelicenses' | translate }}\\r\\n                </ion-label>\\r\\n                <ion-button [href]=\\\"licensesUrl\\\" target=\\\"_blank\\\" fill=\\\"clear\\\" slot=\\\"end\\\" core-link auto-login=\\\"no\\\">\\r\\n                    {{ 'core.view' | translate }}</ion-button>\\r\\n            </ion-item>\\r\\n            <ng-container *ngIf=\\\"!error\\\">\\r\\n                <ion-item *ngFor=\\\"let license of licenses\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">\\r\\n                            <a *ngIf=\\\"license.repository\\\" [href]=\\\"license.repository\\\" core-link auto-login=\\\"no\\\">{{ license.name }}</a>\\r\\n                            <ng-container *ngIf=\\\"!license.repository\\\">{{ license.name }}</ng-container> - {{ license.version }}\\r\\n                        </p>\\r\\n                        <p class=\\\"item-heading\\\" *ngIf=\\\"license.publisher\\\">\\r\\n                            {{ 'core.settings.publisher' | translate }}{{ 'core.labelsep' | translate }} {{ license.publisher }}\\r\\n                        </p>\\r\\n                        <p>{{ 'core.settings.license' | translate }}{{ 'core.labelsep' | translate }} {{ license.licenses }}</p>\\r\\n                        <p><a *ngIf=\\\"license.url\\\" [href]=\\\"license.url\\\" core-link auto-login=\\\"no\\\">{{ license.url }}</a></p>\\r\\n                        <p><a *ngIf=\\\"license.email\\\" [href]=\\\"'mailto:' + license.email\\\" core-link auto-login=\\\"no\\\"\\r\\n                                [showBrowserWarning]=\\\"false\\\">{{ license.email }}</a></p>\\r\\n                    </ion-label>\\r\\n                    <ion-button *ngIf=\\\"license.licenseUrl\\\" [href]=\\\"license.licenseUrl\\\" target=\\\"_blank\\\" fill=\\\"clear\\\" slot=\\\"end\\\" core-link\\r\\n                        auto-login=\\\"no\\\">{{ 'core.view' | translate }}</ion-button>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n        </ion-list>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.spaceusage' | translate }}</h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <core-navbar-buttons>\\r\\n            </core-navbar-buttons>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <ion-refresher [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\" slot=\\\"fixed\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-list class=\\\"core-sitelist limited-width\\\">\\r\\n            <ion-card *ngIf=\\\"accountsList.currentSite\\\">\\r\\n                <ion-item-divider sticky=\\\"true\\\" class=\\\"core-sitelist-sitename\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">\\r\\n                            <core-format-text [text]=\\\"accountsList.currentSite.siteName\\\" clean=\\\"true\\\"\\r\\n                                [siteId]=\\\"accountsList.currentSite.id\\\"></core-format-text>\\r\\n                        </p>\\r\\n                        <p><a [href]=\\\"accountsList.currentSite.siteUrl\\\" core-link autoLogin=\\\"yes\\\">{{\\r\\n                                accountsList.currentSite.siteUrlWithoutProtocol }}</a>\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                </ion-item-divider>\\r\\n\\r\\n                <ion-item class=\\\"item-current\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"siteUsage; context: {site: accountsList.currentSite}\\\"></ng-container>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item *ngFor=\\\"let site of accountsList.sameSite\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"siteUsage; context: {site: site}\\\"></ng-container>\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n\\r\\n            <ion-card *ngFor=\\\"let sites of accountsList.otherSites\\\">\\r\\n                <ion-item-divider sticky=\\\"true\\\" *ngIf=\\\"sites[0]\\\" class=\\\"core-sitelist-sitename\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">\\r\\n                            <core-format-text [text]=\\\"sites[0].siteName\\\" clean=\\\"true\\\" [siteId]=\\\"sites[0].id\\\"></core-format-text>\\r\\n                        </p>\\r\\n                        <p><a [href]=\\\"sites[0].siteUrl\\\" core-link autoLogin=\\\"no\\\">{{ sites[0].siteUrlWithoutProtocol }}</a></p>\\r\\n                    </ion-label>\\r\\n                </ion-item-divider>\\r\\n\\r\\n                <ion-item *ngFor=\\\"let site of sites\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"siteUsage; context: {site: site}\\\"></ng-container>\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n\\r\\n            <ion-item-divider>\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'core.settings.total' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <p slot=\\\"end\\\" class=\\\"ion-margin-end\\\">\\r\\n                    {{ totalSpaceUsage | coreBytesToSize }}\\r\\n                </p>\\r\\n            </ion-item-divider>\\r\\n        </ion-list>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\\r\\n<!-- Template to render a site space usage. -->\\r\\n<ng-template #siteUsage let-site=\\\"site\\\">\\r\\n    <core-user-avatar [user]=\\\"site\\\" slot=\\\"start\\\" [linkProfile]=\\\"false\\\" [siteId]=\\\"site.id\\\"></core-user-avatar>\\r\\n\\r\\n    <ion-label class=\\\"ion-text-wrap\\\">\\r\\n        <p class=\\\"item-heading\\\">{{site.fullname}}</p>\\r\\n        <ion-badge color=\\\"light\\\" *ngIf=\\\"site.spaceUsage !== undefined\\\">{{ site.spaceUsage | coreBytesToSize }}</ion-badge>\\r\\n    </ion-label>\\r\\n    <ion-button fill=\\\"clear\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteSiteStorage(site)\\\"\\r\\n        [hidden]=\\\"site.spaceUsage <= 0 && !site.hasCacheEntries\\\">\\r\\n        <ion-icon name=\\\"fas-trash\\\" slot=\\\"icon-only\\\"\\r\\n            [attr.aria-label]=\\\"'addon.storagemanager.deletedatafrom' | translate: { name: site.siteName }\\\">\\r\\n        </ion-icon>\\r\\n    </ion-button>\\r\\n</ng-template>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.synchronization' | translate }}</h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <core-navbar-buttons>\\r\\n                <ion-button (click)=\\\"showInfo()\\\" [attr.aria-label]=\\\"'core.info' | translate\\\">\\r\\n                    <ion-icon name=\\\"fas-circle-info\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n            </core-navbar-buttons>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <core-loading [hideUntil]=\\\"sitesLoaded\\\">\\r\\n        <ion-list class=\\\"core-sitelist limited-width\\\">\\r\\n            <ion-item-divider>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.settings.syncsettings' | translate }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item-divider>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">\\r\\n                        {{ 'core.settings.syncdatasaver' | translate }}\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n                <ion-toggle slot=\\\"end\\\" [(ngModel)]=\\\"dataSaver\\\" (ngModelChange)=\\\"syncOnlyOnWifiChanged()\\\">\\r\\n                </ion-toggle>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"!isOnline || (dataSaver && limitedConnection)\\\">\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-icon name=\\\"fas-triangle-exclamation\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    <ion-label>\\r\\n                        <ng-container *ngIf=\\\"isOnline && dataSaver && limitedConnection\\\">\\r\\n                            {{ 'core.settings.connectwifitosync' | translate }}</ng-container>\\r\\n                        <ng-container *ngIf=\\\"!isOnline\\\">{{ 'core.settings.connecttosync' | translate }}</ng-container>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n\\r\\n            <ng-container *ngIf=\\\"isOnline && (!dataSaver || !limitedConnection)\\\">\\r\\n                <ion-item-divider>\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'core.accounts' | translate }}</h2>\\r\\n                    </ion-label>\\r\\n                </ion-item-divider>\\r\\n\\r\\n                <ion-card *ngIf=\\\"accountsList.currentSite\\\">\\r\\n                    <ion-item-divider sticky=\\\"true\\\" class=\\\"core-sitelist-sitename\\\">\\r\\n                        <ion-label>\\r\\n                            <p class=\\\"item-heading\\\">\\r\\n                                <core-format-text [text]=\\\"accountsList.currentSite.siteName\\\" clean=\\\"true\\\"\\r\\n                                    [siteId]=\\\"accountsList.currentSite.id\\\"></core-format-text>\\r\\n                            </p>\\r\\n                            <p><a [href]=\\\"accountsList.currentSite.siteUrl\\\" core-link autoLogin=\\\"yes\\\">{{\\r\\n                                    accountsList.currentSite.siteUrlWithoutProtocol }}</a>\\r\\n                            </p>\\r\\n                        </ion-label>\\r\\n                    </ion-item-divider>\\r\\n\\r\\n                    <ion-item class=\\\"item-current\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"siteSync; context: {site: accountsList.currentSite}\\\"></ng-container>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <ion-item *ngFor=\\\"let site of accountsList.sameSite\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"siteSync; context: {site: site}\\\"></ng-container>\\r\\n                    </ion-item>\\r\\n                </ion-card>\\r\\n\\r\\n                <ion-card *ngFor=\\\"let sites of accountsList.otherSites\\\">\\r\\n                    <ion-item-divider sticky=\\\"true\\\" *ngIf=\\\"sites[0]\\\" class=\\\"core-sitelist-sitename\\\">\\r\\n                        <ion-label>\\r\\n                            <p class=\\\"item-heading\\\">\\r\\n                                <core-format-text [text]=\\\"sites[0].siteName\\\" clean=\\\"true\\\" [siteId]=\\\"sites[0].id\\\"></core-format-text>\\r\\n                            </p>\\r\\n                            <p><a [href]=\\\"sites[0].siteUrl\\\" core-link autoLogin=\\\"no\\\">{{ sites[0].siteUrlWithoutProtocol }}</a></p>\\r\\n                        </ion-label>\\r\\n                    </ion-item-divider>\\r\\n\\r\\n                    <ion-item *ngFor=\\\"let site of sites\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"siteSync; context: {site: site}\\\"></ng-container>\\r\\n                    </ion-item>\\r\\n                </ion-card>\\r\\n            </ng-container>\\r\\n        </ion-list>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\\r\\n<!-- Template to render a site to sync. -->\\r\\n<ng-template #siteSync let-site=\\\"site\\\">\\r\\n    <core-user-avatar [user]=\\\"site\\\" slot=\\\"start\\\" [linkProfile]=\\\"false\\\" [siteId]=\\\"site.id\\\"></core-user-avatar>\\r\\n\\r\\n    <ion-label>\\r\\n        <p class=\\\"item-heading\\\">{{site.fullname}}</p>\\r\\n        <p class=\\\"text-danger\\\" *ngIf=\\\"site.loggedOut\\\">{{ 'core.settings.logintosync' | translate }}</p>\\r\\n    </ion-label>\\r\\n    <core-button-with-spinner [loading]=\\\"isSynchronizing(site.id)\\\" slot=\\\"end\\\" *ngIf=\\\"!site.loggedOut\\\">\\r\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"synchronize(site.id)\\\" [attr.aria-label]=\\\"'core.settings.synchronizenow' | translate\\\">\\r\\n            <ion-icon name=\\\"fas-rotate\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n    </core-button-with-spinner>\\r\\n    <ion-button fill=\\\"clear\\\" (click)=\\\"login(site.id)\\\" [attr.aria-label]=\\\"'core.login.login' | translate\\\" *ngIf=\\\"site.loggedOut\\\" slot=\\\"end\\\">\\r\\n        <ion-icon name=\\\"fas-right-to-bracket\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n</ng-template>\\r\\n\";","export default \"ion-list.core-sitelist .core-sitelist-sitename {\\n  border-bottom: 1px solid var(--stroke);\\n}\\nion-list.core-sitelist .core-sitelist-sitename ion-label {\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL2xvZ2luL3NpdGVsaXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFNSSxzQ0FBQTtBQUxSO0FBQVE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUFFWiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9sb2dpbi9zaXRlbGlzdC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWxpc3QuY29yZS1zaXRlbGlzdCB7XHJcbiAgICAuY29yZS1zaXRlbGlzdC1zaXRlbmFtZSB7XHJcbiAgICAgICAgaW9uLWxhYmVsIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogOHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tc3Ryb2tlKTtcclxuICAgIH1cclxufVxyXG4iXX0= */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreConstants } from '@/core/constants';\nimport { Params } from '@angular/router';\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\nimport { CorePlatform } from '@services/platform';\n\n/**\n * Provides a collection of setting sections.\n */\nexport class CoreSettingsSectionsSource extends CoreRoutedItemsManagerSource<CoreSettingsSection> {\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: CoreSettingsSection[] }> {\n        const sections: CoreSettingsSection[] = [\n            {\n                name: 'core.settings.general',\n                path: 'general',\n                icon: 'fas-wrench',\n            },\n            {\n                name: 'core.settings.spaceusage',\n                path: 'spaceusage',\n                icon: 'fas-list-check',\n            },\n            {\n                name: 'core.settings.synchronization',\n                path: 'sync',\n                icon: CoreConstants.ICON_SYNC,\n            },\n        ];\n\n        if (CorePlatform.isIOS()) {\n            sections.push({\n                name: 'core.sharedfiles.sharedfiles',\n                path: SHAREDFILES_PAGE_NAME + '/list/root',\n                icon: 'fas-folder',\n                params: { manage: true },\n            });\n        }\n\n        sections.push({\n            name: 'core.settings.about',\n            path: 'about',\n            icon: 'fas-id-card',\n        });\n\n        return { items: sections };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(section: CoreSettingsSection): string {\n        return section.path;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemQueryParams(section: CoreSettingsSection): Params {\n        return section.params || {};\n    }\n\n}\n\n/**\n * Settings section.\n */\nexport type CoreSettingsSection = {\n    name: string;\n    path: string;\n    icon: string;\n    params?: Params;\n};\n","export default \".core-about-deviceinfo {\\n  --background: transparent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL3NldHRpbmdzL3BhZ2VzL2Fib3V0L2Fib3V0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKIiwiZmlsZSI6InNyYy9jb3JlL2ZlYXR1cmVzL3NldHRpbmdzL3BhZ2VzL2Fib3V0L2Fib3V0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29yZS1hYm91dC1kZXZpY2VpbmZvIHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuIl19 */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\n\nimport { CoreConstants } from '@/core/constants';\nimport { CoreSites } from '@services/sites';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSite } from '@classes/site';\n\n/**\n * App settings about menu page.\n */\n@Component({\n    selector: 'page-core-app-settings-about',\n    templateUrl: 'about.html',\n    styleUrls: ['about.scss'],\n})\nexport class CoreSettingsAboutPage {\n\n    appName: string;\n    versionName: string;\n    privacyPolicy: string;\n    feedbackFormUrl = CoreConstants.CONFIG.feedbackFormUrl ?? 'https://feedback.moodle.org/mobileapp';\n    a11yStatement = CoreConstants.CONFIG.a11yStatement ?? 'https://apps.moodle.com/admin/tool/policy/view.php?versionid=5';\n    currentSite?: CoreSite;\n    showSurvey: boolean | undefined = false;\n    legalDisclaimer = CoreConstants.CONFIG.legalDisclaimer;\n\n    constructor() {\n        this.currentSite = CoreSites.getCurrentSite();\n\n        this.appName = CoreConstants.CONFIG.appname;\n        this.versionName = CoreConstants.CONFIG.versionname;\n\n        // Calculate the privacy policy to use.\n        this.privacyPolicy = (this.currentSite && (this.currentSite.getStoredConfig('tool_mobile_apppolicy') ||\n        this.currentSite.getStoredConfig('sitepolicy'))) || CoreConstants.CONFIG.privacypolicy;\n        this.showSurvey = this.currentSite?.isAdmin();\n    }\n\n    /**\n     * Opens a page.\n     *\n     * @param page The component deeplink name you want to push onto the navigation stack.\n     */\n    openPage(page: string): void {\n        CoreNavigator.navigate(page);\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreConstants } from '@/core/constants';\nimport { Component, OnInit } from '@angular/core';\nimport { CoreLoginHelperProvider } from '@features/login/services/login-helper';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { CoreSitePlugins } from '@features/siteplugins/services/siteplugins';\nimport { CoreUserTours } from '@features/usertours/services/user-tours';\nimport { CoreConfig } from '@services/config';\nimport { CorePlatform } from '@services/platform';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\n\n/**\n * Page that displays the developer options.\n */\n@Component({\n    selector: 'page-core-app-settings-dev',\n    templateUrl: 'dev.html',\n})\nexport class CoreSettingsDevPage implements OnInit {\n\n    rtl = false;\n    forceSafeAreaMargins = false;\n    direction = 'ltr';\n\n    remoteStyles = true;\n    remoteStylesCount = 0;\n    pluginStyles = true;\n    pluginStylesCount = 0;\n    sitePlugins: CoreSitePluginsBasicInfo[] = [];\n    userToursEnabled = true;\n    stagingSitesCount = 0;\n    enableStagingSites?: boolean;\n    previousEnableStagingSites?: boolean;\n\n    disabledFeatures: string[] = [];\n\n    siteId: string | undefined;\n\n    async ngOnInit(): Promise<void> {\n        this.rtl = CorePlatform.isRTL;\n        this.RTLChanged();\n\n        this.forceSafeAreaMargins = document.documentElement.classList.contains('force-safe-area-margins');\n        this.safeAreaChanged();\n\n        this.siteId = CoreSites.getCurrentSite()?.getId();\n\n        this.stagingSitesCount = CoreConstants.CONFIG.sites.filter((site) => site.staging).length;\n\n        if (this.stagingSitesCount) {\n            this.enableStagingSites = await CoreSettingsHelper.hasEnabledStagingSites();\n            this.previousEnableStagingSites = this.enableStagingSites;\n        }\n\n        if (!this.siteId) {\n            return;\n        }\n\n        this.remoteStyles = false;\n        this.remoteStylesCount = 0;\n\n        this.pluginStyles = false;\n        this.pluginStylesCount = 0;\n\n        this.userToursEnabled = !CoreUserTours.isDisabled();\n\n        document.head.querySelectorAll('style').forEach((style) => {\n            if (this.siteId && style.id.endsWith(this.siteId)) {\n                if (style.innerHTML.length > 0) {\n                    this.remoteStylesCount++;\n                }\n                this.remoteStyles = this.remoteStyles || style.getAttribute('media') != 'disabled';\n            }\n\n            if (style.id.startsWith('siteplugin-')) {\n                if (style.innerHTML.length > 0) {\n                    this.pluginStylesCount++;\n                }\n                this.pluginStyles = this.pluginStyles || style.getAttribute('media') != 'disabled';\n            }\n        });\n\n        this.sitePlugins = CoreSitePlugins.getCurrentSitePluginList().map((plugin) => ({\n            addon: plugin.addon,\n            component: plugin.component,\n            version: plugin.version,\n        }));\n\n        const disabledFeatures = (await CoreSites.getCurrentSite()?.getPublicConfig())?.tool_mobile_disabledfeatures;\n\n        this.disabledFeatures = disabledFeatures?.split(',') || [];\n    }\n\n    /**\n     * Called when the rtl is enabled or disabled.\n     */\n    RTLChanged(): void {\n        this.direction = this.rtl ? 'rtl' : 'ltr';\n        document.dir = this.direction;\n    }\n\n    /**\n     * Called when safe area margins is enabled or disabled.\n     */\n    safeAreaChanged(): void {\n        document.documentElement.classList.toggle('force-safe-area-margins', this.forceSafeAreaMargins);\n    }\n\n    /**\n     * Called when remote styles is enabled or disabled.\n     */\n    remoteStylesChanged(): void {\n        document.head.querySelectorAll('style').forEach((style) => {\n            if (this.siteId && style.id.endsWith(this.siteId)) {\n                if (this.remoteStyles) {\n                    style.removeAttribute('media');\n                } else {\n                    style.setAttribute('media', 'disabled');\n                }\n            }\n        });\n    }\n\n    /**\n     * Called when remote styles is enabled or disabled.\n     */\n    pluginStylesChanged(): void {\n        document.head.querySelectorAll('style').forEach((style) => {\n            if (style.id.startsWith('siteplugin-')) {\n                if (this.pluginStyles) {\n                    style.removeAttribute('media');\n                } else {\n                    style.setAttribute('media', 'disabled');\n                }\n            }\n        });\n    }\n\n    /**\n     * Copies site info.\n     */\n    copyInfo(): void {\n        CoreUtils.copyToClipboard(JSON.stringify({ disabledFeatures: this.disabledFeatures, sitePlugins: this.sitePlugins }));\n    }\n\n    /**\n     * Reset all user tours.\n     */\n    async resetUserTours(): Promise<void> {\n        await CoreUserTours.resetTours();\n\n        await CoreConfig.delete(CoreLoginHelperProvider.ONBOARDING_DONE);\n\n        CoreDomUtils.showToast('User tours have been reseted');\n    }\n\n    async setEnabledStagingSites(enabled: boolean): Promise<void> {\n        if (this.enableStagingSites === this.previousEnableStagingSites) {\n            return;\n        }\n\n        try {\n            await CoreSettingsHelper.setEnabledStagingSites(enabled);\n            this.previousEnableStagingSites = enabled;\n        } catch (error) {\n            this.enableStagingSites = !enabled;\n            CoreDomUtils.showErrorModal(error);\n        }\n    }\n\n}\n\n// Basic site plugin info.\ntype CoreSitePluginsBasicInfo = {\n    component: string;\n    addon: string;\n    version: string;\n};\n","export default \".item {\\n  -webkit-user-select: text;\\n          user-select: text;\\n  cursor: text;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL3NldHRpbmdzL3BhZ2VzL2RldmljZWluZm8vZGV2aWNlaW5mby5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7VUFBQSxpQkFBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9zZXR0aW5ncy9wYWdlcy9kZXZpY2VpbmZvL2RldmljZWluZm8uc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtIHtcclxuICAgIHVzZXItc2VsZWN0OiB0ZXh0O1xyXG4gICAgY3Vyc29yOiB0ZXh0O1xyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy } from '@angular/core';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { Device, Translate, NgZone } from '@singletons';\nimport { CoreLang } from '@services/lang';\nimport { CoreFile } from '@services/file';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Subscription } from 'rxjs';\nimport { CorePushNotifications } from '@features/pushnotifications/services/pushnotifications';\nimport { CoreConfig } from '@services/config';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreNavigator } from '@services/navigator';\nimport { CorePlatform } from '@services/platform';\nimport { CoreNetwork } from '@services/network';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\n\n/**\n * Device Info to be shown and copied to clipboard.\n */\ninterface CoreSettingsDeviceInfo {\n    versionName: string;\n    versionCode: number;\n    compilationTime: number;\n    lastCommit: string;\n    siteUrl?: string;\n    isPrefixedUrl?: boolean;\n    siteId?: string;\n    siteVersion?: string;\n    fileSystemRoot?: string;\n    userAgent?: string;\n    deviceOs?: string;\n    browserLanguage?: string;\n    currentLanguage?: string;\n    locationHref?: string;\n    deviceType: string;\n    screen?: string;\n    networkStatus: string;\n    wifiConnection: string;\n    cordovaVersion?: string;\n    platform?: string;\n    osVersion?: string;\n    model?: string;\n    uuid?: string;\n    pushId?: string;\n    localNotifAvailable: string;\n    encryptedPushSupported?: boolean;\n}\n\n/**\n * Page that displays the device information.\n */\n@Component({\n    selector: 'page-core-app-settings-deviceinfo',\n    templateUrl: 'deviceinfo.html',\n    styleUrls: ['deviceinfo.scss'],\n})\nexport class CoreSettingsDeviceInfoPage implements OnDestroy {\n\n    deviceInfo: CoreSettingsDeviceInfo;\n    deviceOsTranslated?: string;\n    currentLangName?: string;\n    fsClickable = false;\n    showDevOptions = false;\n    protected devOptionsClickCounter = 0;\n    protected devOptionsForced = false;\n    protected devOptionsClickTimeout?: number;\n\n    protected onlineObserver?: Subscription;\n\n    constructor() {\n        const sitesProvider = CoreSites.instance;\n        const device = Device.instance;\n        const translate = Translate.instance;\n        const navigator = window.navigator;\n\n        this.deviceInfo = {\n            versionName: CoreConstants.CONFIG.versionname,\n            versionCode: CoreConstants.CONFIG.versioncode,\n            compilationTime: CoreConstants.BUILD.compilationTime || 0,\n            lastCommit: CoreConstants.BUILD.lastCommitHash || '',\n            networkStatus: CoreNetwork.isOnline() ? 'online' : 'offline',\n            wifiConnection: CoreNetwork.isWifi() ? 'yes' : 'no',\n            localNotifAvailable: CoreLocalNotifications.isPluginAvailable() ? 'yes' : 'no',\n            pushId: CorePushNotifications.getPushId(),\n            deviceType: '',\n        };\n\n        if (window.location && window.location.href) {\n            const url = window.location.href;\n            this.deviceInfo.locationHref = url.indexOf('#') > 0 ? url.substring(0, url.indexOf('#')) : url;\n        }\n\n        if (window.screen) {\n            this.deviceInfo.screen = window.innerWidth + 'x' + window.innerHeight +\n                ' (' + window.screen.width + 'x' + window.screen.height + ')';\n        }\n\n        if (CorePlatform.isMobile()) {\n            this.deviceInfo.deviceType = CorePlatform.is('tablet') ? 'tablet' : 'phone';\n            if (CorePlatform.isAndroid()) {\n                this.deviceInfo.deviceOs = 'android';\n                this.deviceOsTranslated = 'Android';\n            } else if (CorePlatform.isIOS()) {\n                this.deviceInfo.deviceOs = 'ios';\n                this.deviceOsTranslated = 'iOS';\n            } else {\n                const matches = navigator.userAgent.match(/\\(([^)]*)\\)/);\n                if (matches && matches.length > 1) {\n                    this.deviceInfo.deviceOs = matches[1];\n                    this.deviceOsTranslated = matches[1];\n                } else {\n                    this.deviceInfo.deviceOs = 'unknown';\n                    this.deviceOsTranslated = translate.instant('core.unknown');\n                }\n            }\n        } else {\n            this.deviceInfo.deviceType = 'browser';\n            const matches = navigator.userAgent.match(/\\(([^)]*)\\)/);\n            if (matches && matches.length > 1) {\n                this.deviceInfo.deviceOs = matches[1];\n                this.deviceOsTranslated = matches[1];\n            } else {\n                this.deviceInfo.deviceOs = 'unknown';\n                this.deviceOsTranslated = translate.instant('core.unknown');\n            }\n        }\n\n        if (navigator) {\n            if (navigator.userAgent) {\n                this.deviceInfo.userAgent = navigator.userAgent;\n            }\n\n            if (navigator.language) {\n                this.deviceInfo.browserLanguage = navigator.language;\n            }\n        }\n\n        if (device) {\n            if (device.cordova) {\n                this.deviceInfo.cordovaVersion = device.cordova;\n            }\n            if (device.platform) {\n                this.deviceInfo.platform = device.platform;\n            }\n            if (device.version) {\n                this.deviceInfo.osVersion = device.version;\n            }\n            if (device.model) {\n                this.deviceInfo.model = device.model;\n            }\n            if (device.uuid) {\n                this.deviceInfo.uuid = device.uuid;\n            }\n        }\n\n        const currentSite = sitesProvider.getCurrentSite();\n        this.deviceInfo.siteId = currentSite?.getId();\n        this.deviceInfo.siteVersion = currentSite?.getInfo()?.release;\n\n        // Refresh online status when changes.\n        this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.deviceInfo.networkStatus = CoreNetwork.isOnline() ? 'online' : 'offline';\n            });\n        });\n\n        this.asyncInit();\n    }\n\n    /**\n     * Async part of the constructor.\n     */\n    protected async asyncInit(): Promise<void> {\n        const sitesProvider = CoreSites.instance;\n        const fileProvider = CoreFile.instance;\n\n        const lang = await CoreLang.getCurrentLanguage();\n        this.deviceInfo.currentLanguage = lang;\n        this.currentLangName = CoreConstants.CONFIG.languages[lang];\n\n        const currentSite = sitesProvider.getCurrentSite();\n        const isSingleFixedSite = await CoreLoginHelper.isSingleFixedSite();\n        const sites = await CoreLoginHelper.getAvailableSites();\n        const firstUrl = isSingleFixedSite && sites[0].url;\n\n        this.deviceInfo.siteUrl = currentSite?.getURL() || firstUrl || undefined;\n        this.deviceInfo.isPrefixedUrl = !!sites.length;\n\n        if (fileProvider.isAvailable()) {\n            const basepath = await fileProvider.getBasePath();\n            this.deviceInfo.fileSystemRoot = basepath;\n            this.fsClickable = fileProvider.usesHTMLAPI();\n        }\n\n        const showDevOptionsOnConfig = await CoreConfig.get('showDevOptions', 0);\n        this.devOptionsForced = CoreConstants.BUILD.isDevelopment || CoreConstants.BUILD.isTesting;\n        this.showDevOptions = this.devOptionsForced || showDevOptionsOnConfig == 1;\n\n        const publicKey = this.deviceInfo.pushId ?\n            await CoreUtils.ignoreErrors(CorePushNotifications.getPublicKey()) :\n            undefined;\n        this.deviceInfo.encryptedPushSupported = publicKey !== undefined;\n    }\n\n    /**\n     * Copies device info into the clipboard.\n     */\n    copyInfo(): void {\n        CoreUtils.copyToClipboard(JSON.stringify(this.deviceInfo));\n    }\n\n    /**\n     * Copies device info item into the clipboard.\n     *\n     * @param e Event.\n     */\n    copyItemInfo(e: Event): void {\n        const el = <Element>e.target;\n        const text = el?.closest('ion-item')?.textContent?.trim();\n\n        text && CoreUtils.copyToClipboard(text);\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.onlineObserver && this.onlineObserver.unsubscribe();\n    }\n\n    /**\n     * 5 clicks will enable dev options.\n     */\n    async enableDevOptions(): Promise<void> {\n        if (this.devOptionsForced) {\n            return;\n        }\n\n        clearTimeout(this.devOptionsClickTimeout);\n        this.devOptionsClickCounter++;\n\n        if (this.devOptionsClickCounter == 5) {\n            if (!this.showDevOptions) {\n                this.showDevOptions = true;\n                await CoreConfig.set('showDevOptions', 1);\n\n                CoreDomUtils.showToast('core.settings.youradev', true);\n            } else {\n                this.showDevOptions = false;\n                await CoreConfig.delete('showDevOptions');\n            }\n\n            this.devOptionsClickCounter = 0;\n\n            return;\n        }\n\n        this.devOptionsClickTimeout = window.setTimeout(() => {\n            this.devOptionsClickTimeout = undefined;\n            this.devOptionsClickCounter = 0;\n        }, 500);\n    }\n\n    /**\n     * Navigate to dev options.\n     */\n    gotoDevOptions(): void {\n        CoreNavigator.navigate('dev');\n    }\n\n}\n","export default \":host .core-settings-general-font-size ion-segment {\\n  max-width: 250px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL3NldHRpbmdzL3BhZ2VzL2dlbmVyYWwvZ2VuZXJhbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksZ0JBQUE7QUFBUiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9zZXR0aW5ncy9wYWdlcy9nZW5lcmFsL2dlbmVyYWwuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIC5jb3JlLXNldHRpbmdzLWdlbmVyYWwtZm9udC1zaXplIGlvbi1zZWdtZW50IHtcclxuICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreConfig } from '@services/config';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreLang } from '@services/lang';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CorePushNotifications } from '@features/pushnotifications/services/pushnotifications';\nimport { CoreSettingsHelper, CoreColorScheme, CoreZoomLevel } from '../../services/settings-helper';\nimport { CoreIframeUtils } from '@services/utils/iframe';\nimport { Diagnostic, Translate } from '@singletons';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AlertButton } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CorePlatform } from '@services/platform';\nimport { CoreAnalytics } from '@services/analytics';\n\n/**\n * Page that displays the general settings.\n */\n@Component({\n    selector: 'page-core-app-settings-general',\n    templateUrl: 'general.html',\n    styleUrls: ['general.scss'],\n})\nexport class CoreSettingsGeneralPage {\n\n    languages: { code: string; name: string }[] = [];\n    selectedLanguage = '';\n    zoomLevels: { value: CoreZoomLevel; style: number; selected: boolean }[] = [];\n    selectedZoomLevel = CoreZoomLevel.NONE;\n    richTextEditor = true;\n    debugDisplay = false;\n    analyticsSupported = false;\n    analyticsEnabled = false;\n    colorSchemes: CoreColorScheme[] = [];\n    selectedScheme: CoreColorScheme = CoreColorScheme.LIGHT;\n    colorSchemeDisabled = false;\n    isAndroid = false;\n    displayIframeHelp = false;\n\n    constructor() {\n        this.asyncInit();\n    }\n\n    /**\n     * Async part of the constructor.\n     */\n    protected async asyncInit(): Promise<void> {\n\n        // Get the supported languages.\n        const languages = CoreConstants.CONFIG.languages;\n        for (const code in languages) {\n            this.languages.push({\n                code: code,\n                name: languages[code],\n            });\n        }\n        // Sort them by name.\n        this.languages.sort((a, b) => a.name.localeCompare(b.name));\n        this.selectedLanguage = await CoreLang.getCurrentLanguage();\n\n        // Configure color schemes.\n        if (!CoreConstants.CONFIG.forceColorScheme) {\n            this.colorSchemeDisabled = CoreSettingsHelper.isColorSchemeDisabledInSite();\n\n            if (this.colorSchemeDisabled) {\n                this.colorSchemes.push(CoreColorScheme.LIGHT);\n                this.selectedScheme = this.colorSchemes[0];\n            } else {\n                this.isAndroid = CorePlatform.isAndroid();\n                this.colorSchemes = CoreSettingsHelper.getAllowedColorSchemes();\n                this.selectedScheme = await CoreConfig.get(CoreConstants.SETTINGS_COLOR_SCHEME, CoreColorScheme.LIGHT);\n            }\n        }\n\n        this.selectedZoomLevel = await CoreSettingsHelper.getZoomLevel();\n\n        this.zoomLevels = Object.keys(CoreConstants.CONFIG.zoomlevels).map((value: CoreZoomLevel) =>\n            ({\n                value,\n                // Absolute pixel size based on 1.4rem body text when this size is selected.\n                style: Math.round(CoreConstants.CONFIG.zoomlevels[value] * 16 / 100),\n                selected: value === this.selectedZoomLevel,\n            }));\n\n        this.richTextEditor = await CoreConfig.get(CoreConstants.SETTINGS_RICH_TEXT_EDITOR, true);\n\n        this.debugDisplay = await CoreConfig.get(CoreConstants.SETTINGS_DEBUG_DISPLAY, false);\n\n        this.analyticsSupported = CoreAnalytics.hasHandlers();\n        if (this.analyticsSupported) {\n            this.analyticsEnabled = await CoreConfig.get(CoreConstants.SETTINGS_ANALYTICS_ENABLED, true);\n        }\n\n        this.displayIframeHelp = CoreIframeUtils.shouldDisplayHelp();\n    }\n\n    /**\n     * Called when a new language is selected.\n     *\n     * @param ev Event\n     */\n    async languageChanged(ev: Event): Promise<void> {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        const previousLanguage = await CoreLang.getCurrentLanguage();\n        if (this.selectedLanguage === previousLanguage) {\n            // Prevent opening again.\n\n            return;\n        }\n\n        const previousLanguageCancel = Translate.instant('core.cancel');\n\n        try {\n            await CoreLang.changeCurrentLanguage(this.selectedLanguage);\n        } finally {\n            const langName = this.languages.find((lang) => lang.code == this.selectedLanguage)?.name;\n\n            const buttons: AlertButton[] = [\n                {\n                    text: previousLanguageCancel,\n                    role: 'cancel',\n                    handler: (): void => {\n                        clearTimeout(timeout);\n                        this.selectedLanguage = previousLanguage;\n                        CoreLang.changeCurrentLanguage(this.selectedLanguage);\n                    },\n                },\n                {\n                    text: Translate.instant('core.settings.changelanguage', { $a: langName }),\n                    cssClass: 'timed-button',\n                    handler: (): void => {\n                        clearTimeout(timeout);\n                        this.applyLanguageAndRestart();\n                    },\n                },\n            ];\n\n            const alert = await CoreDomUtils.showAlertWithOptions(\n                {\n                    message: Translate.instant('core.settings.changelanguagealert'),\n                    buttons,\n                },\n            );\n            const timeout = window.setTimeout(async () => {\n                await alert.dismiss();\n                this.applyLanguageAndRestart();\n            }, 10000);\n        }\n    }\n\n    /**\n     * Apply language changes and restart the app.\n     */\n    protected async applyLanguageAndRestart(): Promise<void> {\n        // Invalidate cache for all sites to get the content in the right language.\n        const sites = await CoreSites.getSitesInstances();\n        await CoreUtils.ignoreErrors(Promise.all(sites.map((site) => site.invalidateWsCache())));\n\n        CoreEvents.trigger(CoreEvents.LANGUAGE_CHANGED, this.selectedLanguage);\n\n        CoreNavigator.navigate('/reload', {\n            reset: true,\n        });\n    }\n\n    /**\n     * Called when a new zoom level is selected.\n     *\n     * @param ev Event\n     * @param value New value\n     */\n    zoomLevelChanged(ev: Event, value: CoreZoomLevel): void {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        this.selectedZoomLevel = value;\n\n        this.zoomLevels = this.zoomLevels.map((fontSize) => {\n            fontSize.selected = fontSize.value === this.selectedZoomLevel;\n\n            return fontSize;\n        });\n\n        CoreSettingsHelper.applyZoomLevel(this.selectedZoomLevel);\n        CoreConfig.set(CoreConstants.SETTINGS_ZOOM_LEVEL, this.selectedZoomLevel);\n    }\n\n    /**\n     * Called when a new color scheme is selected.\n     *\n     * @param ev Event\n     */\n    colorSchemeChanged(ev: Event): void {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        CoreSettingsHelper.setColorScheme(this.selectedScheme);\n        CoreConfig.set(CoreConstants.SETTINGS_COLOR_SCHEME, this.selectedScheme);\n    }\n\n    /**\n     * Called when the rich text editor is enabled or disabled.\n     *\n     * @param ev Event\n     */\n    richTextEditorChanged(ev: Event): void {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        CoreConfig.set(CoreConstants.SETTINGS_RICH_TEXT_EDITOR, this.richTextEditor ? 1 : 0);\n    }\n\n    /**\n     * Called when the debug display setting is enabled or disabled.\n     *\n     * @param ev Event\n     */\n    debugDisplayChanged(ev: Event): void {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        CoreConfig.set(CoreConstants.SETTINGS_DEBUG_DISPLAY, this.debugDisplay ? 1 : 0);\n        CoreDomUtils.setDebugDisplay(this.debugDisplay);\n    }\n\n    /**\n     * Called when the analytics setting is enabled or disabled.\n     *\n     * @param ev Event\n     */\n    async analyticsEnabledChanged(ev: Event):  Promise<void> {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        await CorePushNotifications.enableAnalytics(this.analyticsEnabled);\n\n        CoreConfig.set(CoreConstants.SETTINGS_ANALYTICS_ENABLED, this.analyticsEnabled ? 1 : 0);\n    }\n\n    /**\n     * Open native settings.\n     *\n     * @param ev Event\n     */\n    openNativeSettings(ev: Event): void {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        Diagnostic.switchToSettings();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\n\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreSettingsSection, CoreSettingsSectionsSource } from '@features/settings/classes/settings-sections-source';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\n\n@Component({\n    selector: 'page-core-settings-index',\n    templateUrl: 'index.html',\n})\nexport class CoreSettingsIndexPage implements AfterViewInit, OnDestroy {\n\n    sections: CoreListItemsManager<CoreSettingsSection>;\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    constructor() {\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreSettingsSectionsSource, []);\n\n        this.sections = new CoreListItemsManager(source, CoreSettingsIndexPage);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.sections.load();\n        await this.sections.start(this.splitView);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.sections.destroy();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreConstants } from '@/core/constants';\nimport { Http } from '@singletons';\nimport { IonSearchbar } from '@ionic/angular';\n\n/**\n * Defines license info\n */\ninterface CoreSettingsLicense {\n    name: string;\n    version: string;\n    licenses: string | string[];\n    repository?: string;\n    publisher?: string;\n    url?: string;\n    email?: string;\n    licenseUrl?: string;\n    licenseFile?: string;\n}\n\n/**\n * Page that displays the open source licenses information.\n */\n@Component({\n    selector: 'page-core-app-settings-licenses',\n    templateUrl: 'licenses.html',\n})\nexport class CoreSettingsLicensesPage implements OnInit {\n\n    licensesUrl: string;\n    loaded = false;\n    licenses: CoreSettingsLicense[] = [];\n    error = false;\n    textFilter = '';\n    appLicenseVersion: string;\n\n    protected allLicenses: CoreSettingsLicense[] = [];\n\n    constructor() {\n        this.appLicenseVersion = CoreConstants.CONFIG.versionname.indexOf('-') > 0\n            ? 'main'\n            : 'v' + CoreConstants.CONFIG.versionname;\n\n        this.licensesUrl = 'https://raw.githubusercontent.com/moodlehq/moodleapp/' + this.appLicenseVersion + '/licenses.json';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            const licenses = await Http.get(this.licensesUrl).toPromise();\n            this.allLicenses = Object.keys(licenses).map((name) => {\n                const license = licenses[name];\n\n                const nameSplit = name.lastIndexOf('@');\n                license.name = name.substring(0, nameSplit);\n                license.version = name.substring(nameSplit + 1);\n                if (Array.isArray(license.licenses)) {\n                    license.licenses = license.licenses.join(', ');\n                }\n\n                if (license.repository) {\n                    license.repository = license.repository.replace('git://', 'https://');\n                    if (license.repository.indexOf('github.com') > 0) {\n                        const version = license.name == 'moodlemobile' ? this.appLicenseVersion : license.version;\n                        license.licenseUrl = license.repository + '/blob/' + version + '/' + license.licenseFile;\n                    }\n                }\n\n                return license;\n            });\n\n            this.filterLicenses();\n\n            this.error = false;\n        } catch {\n            this.error = true;\n        }\n\n        this.loaded = true;\n    }\n\n    /**\n     * Filter licenses using filter text.\n     */\n    filterLicenses(): void {\n        const filter = this.textFilter.trim().toLowerCase();\n\n        if (filter == '') {\n            this.licenses = this.allLicenses;\n\n            return;\n        }\n\n        this.licenses = this.allLicenses.filter((license) => license.name.toLowerCase().indexOf(filter) >=0 ||\n            license.version.toLowerCase().indexOf(filter) >=0 ||\n            typeof license.licenses == 'string' && license.licenses.toLowerCase().indexOf(filter) >=0 ||\n            license.repository && license.repository.toLowerCase().indexOf(filter) >=0 ||\n            license.publisher && license.publisher.toLowerCase().indexOf(filter) >=0 ||\n            license.url && license.url.toLowerCase().indexOf(filter) >=0 ||\n            license.email && license.email.toLowerCase().indexOf(filter) >=0);\n    }\n\n    /**\n     * Text filter changed.\n     *\n     * @param target Searchbar element.\n     */\n    filterChanged(target: IonSearchbar): void {\n        this.textFilter = target.value || '';\n\n        this.filterLicenses();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreSiteBasicInfo, CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\n\nimport { CoreSettingsHelper } from '../../services/settings-helper';\n\n/**\n * Page that displays the space usage settings.\n */\n@Component({\n    selector: 'page-core-app-settings-space-usage',\n    templateUrl: 'space-usage.html',\n})\nexport class CoreSettingsSpaceUsagePage implements OnInit, OnDestroy {\n\n    loaded = false;\n    totalSpaceUsage = 0;\n\n    accountsList: CoreAccountsListWithUsage = {\n        sameSite: [],\n        otherSites: [],\n    };\n\n    protected sitesObserver: CoreEventObserver;\n\n    constructor() {\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, async (data) => {\n            const siteId = data.siteId;\n\n            let siteEntry = siteId === this.accountsList.currentSite?.id\n                ? this.accountsList.currentSite\n                : undefined;\n\n            if (!siteEntry) {\n                siteEntry = this.accountsList.sameSite.find((siteEntry) => siteEntry.id === siteId);\n            }\n\n            if (!siteEntry) {\n                this.accountsList.otherSites.some((sites) => {\n                    siteEntry = sites.find((siteEntry) => siteEntry.id === siteId);\n\n                    return siteEntry;\n                });\n            }\n\n            if (!siteEntry) {\n                return;\n            }\n\n            const site = await CoreSites.getSite(siteId);\n            const siteInfo = site.getInfo();\n            siteEntry.siteName = await site.getSiteName();\n\n            if (siteInfo) {\n                siteEntry.siteUrl = siteInfo.siteurl;\n                siteEntry.fullname = siteInfo.fullname;\n            }\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.loadSiteData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Convenience function to load site data/usage and calculate the totals.\n     *\n     * @returns Resolved when done.\n     */\n    protected async loadSiteData(): Promise<void> {\n        // Calculate total usage.\n        let totalSize = 0;\n\n        const sites = await CoreUtils.ignoreErrors(CoreSites.getSortedSites(), [] as CoreSiteBasicInfo[]);\n        const sitesWithUsage = await Promise.all(sites.map((site) => this.getSiteWithUsage(site)));\n\n        let siteUrl = '';\n\n        const currentSiteId = CoreSites.getCurrentSiteId();\n\n        if (currentSiteId) {\n            const index = sitesWithUsage.findIndex((site) => site.id === currentSiteId);\n\n            const siteWithUsage = sitesWithUsage.splice(index, 1)[0];\n            this.accountsList.currentSite = siteWithUsage;\n            totalSize += siteWithUsage.spaceUsage || 0;\n\n            siteUrl = this.accountsList.currentSite.siteUrlWithoutProtocol;\n        }\n\n        const otherSites: Record<string, CoreSiteBasicInfoWithUsage[]> = {};\n\n        // Get space usage.\n        sitesWithUsage.forEach((siteWithUsage) => {\n            totalSize += siteWithUsage.spaceUsage || 0;\n\n            if (siteWithUsage.siteUrlWithoutProtocol === siteUrl) {\n                this.accountsList.sameSite.push(siteWithUsage);\n            } else {\n                if (otherSites[siteWithUsage.siteUrlWithoutProtocol] === undefined) {\n                    otherSites[siteWithUsage.siteUrlWithoutProtocol] = [];\n                }\n\n                otherSites[siteWithUsage.siteUrlWithoutProtocol].push(siteWithUsage);\n            }\n        });\n\n        this.accountsList.otherSites = CoreUtils.objectToArray(otherSites);\n\n        this.totalSpaceUsage = totalSize;\n    }\n\n    /**\n     * Get site with space usage.\n     *\n     * @param site Site to check.\n     * @returns Site with usage.\n     */\n    protected async getSiteWithUsage(site: CoreSiteBasicInfo): Promise<CoreSiteBasicInfoWithUsage> {\n        const siteInfo = await CoreSettingsHelper.getSiteSpaceUsage(site.id);\n\n        return Object.assign(site, {\n            hasCacheEntries: siteInfo.cacheEntries > 0,\n            spaceUsage: siteInfo.spaceUsage,\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher event.\n     */\n    refreshData(refresher?: IonRefresher): void {\n        this.loadSiteData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Deletes files of a site and the tables that can be cleared.\n     *\n     * @param siteData Site object with space usage.\n     */\n    async deleteSiteStorage(siteData: CoreSiteBasicInfoWithUsage): Promise<void> {\n        try {\n            const newInfo = await CoreSettingsHelper.deleteSiteStorage(siteData.siteName || '', siteData.id);\n\n            this.totalSpaceUsage -= siteData.spaceUsage - newInfo.spaceUsage;\n\n            siteData.spaceUsage = newInfo.spaceUsage;\n            siteData.hasCacheEntries = newInfo.cacheEntries > 0;\n        } catch {\n            // Ignore cancelled confirmation modal.\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.sitesObserver.off();\n    }\n\n}\n\n/**\n * Basic site info with space usage and cache entries that can be erased.\n */\ninterface CoreSiteBasicInfoWithUsage extends CoreSiteBasicInfo {\n    hasCacheEntries: boolean; // If has cached entries that can be cleared.\n    spaceUsage: number; // Space used in this site.\n}\n\n/**\n * Accounts list for selecting sites interfaces.\n */\ntype CoreAccountsListWithUsage = {\n    currentSite?: CoreSiteBasicInfoWithUsage; // If logged in, current site info.\n    sameSite: CoreSiteBasicInfoWithUsage[]; // If logged in, accounts info on the same site.\n    otherSites: CoreSiteBasicInfoWithUsage[][]; // Other accounts in other sites.\n};\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { CoreConstants } from '@/core/constants';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreConfig } from '@services/config';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreAccountsList, CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreNetwork } from '@services/network';\nimport { Subscription } from 'rxjs';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays the synchronization settings.\n */\n@Component({\n    selector: 'page-core-app-settings-synchronization',\n    templateUrl: 'synchronization.html',\n    styleUrls: ['../../../login/sitelist.scss'],\n})\nexport class CoreSettingsSynchronizationPage implements OnInit, OnDestroy {\n\n    accountsList: CoreAccountsList = {\n        sameSite: [],\n        otherSites: [],\n        count: 0,\n    };\n\n    sitesLoaded = false;\n    dataSaver = false;\n    limitedConnection = false;\n    isOnline = true;\n\n    protected isDestroyed = false;\n    protected sitesObserver: CoreEventObserver;\n    protected networkObserver: Subscription;\n\n    constructor() {\n\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, async (data) => {\n            const siteId = data.siteId;\n\n            let siteEntry = siteId === this.accountsList.currentSite?.id\n                ? this.accountsList.currentSite\n                : undefined;\n\n            if (!siteEntry) {\n                siteEntry = this.accountsList.sameSite.find((siteEntry) => siteEntry.id === siteId);\n            }\n\n            if (!siteEntry) {\n                this.accountsList.otherSites.some((sites) => {\n                    siteEntry = sites.find((siteEntry) => siteEntry.id === siteId);\n\n                    return siteEntry;\n                });\n            }\n\n            if (!siteEntry) {\n                return;\n            }\n\n            const site = await CoreSites.getSite(siteId);\n\n            const siteInfo = site.getInfo();\n\n            siteEntry.siteName = await site.getSiteName();\n\n            if (siteInfo) {\n                siteEntry.siteUrl = siteInfo.siteurl;\n                siteEntry.fullname = siteInfo.fullname;\n            }\n        });\n\n        this.isOnline = CoreNetwork.isOnline();\n        this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n\n        this.networkObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n                this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n            });\n        });\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        const currentSiteId = CoreSites.getCurrentSiteId();\n\n        try {\n            this.accountsList = await CoreLoginHelper.getAccountsList(currentSiteId);\n        } catch {\n            // Ignore errors.\n        }\n\n        this.sitesLoaded = true;\n\n        this.dataSaver = await CoreConfig.get(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, true);\n    }\n\n    /**\n     * Called when sync only on wifi setting is enabled or disabled.\n     */\n    syncOnlyOnWifiChanged(): void {\n        CoreConfig.set(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, this.dataSaver ? 1 : 0);\n    }\n\n    /**\n     * Synchronizes a site.\n     *\n     * @param siteId Site ID.\n     */\n    async synchronize(siteId: string): Promise<void> {\n        // Using syncOnlyOnWifi false to force manual sync.\n        try {\n            await CoreSettingsHelper.synchronizeSite(false, siteId);\n        } catch (error) {\n            if (this.isDestroyed) {\n                return;\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.settings.sitesyncfailed', true);\n        }\n    }\n\n    /**\n     * Changes site.\n     *\n     * @param siteId Site ID.\n     */\n    async login(siteId: string): Promise<void> {\n        // This navigation will logout and navigate to the site home.\n        await CoreNavigator.navigateToSiteHome({ preferCurrentTab: false , siteId });\n    }\n\n    /**\n     * Returns true if site is beeing synchronized.\n     *\n     * @param siteId Site ID.\n     * @returns True if site is beeing synchronized, false otherwise.\n     */\n    isSynchronizing(siteId: string): boolean {\n        return !!CoreSettingsHelper.getSiteSyncPromise(siteId);\n    }\n\n    /**\n     * Show information about sync actions.\n     */\n    showInfo(): void {\n        CoreDomUtils.showAlert(\n            Translate.instant('core.help'),\n            Translate.instant('core.settings.synchronizenowhelp'),\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.sitesObserver.off();\n        this.networkObserver.unsubscribe();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreScreen } from '@services/screen';\n\nimport { CoreSettingsIndexPage } from './pages/index';\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\nimport { CoreSettingsSynchronizationPage } from '@features/settings/pages/synchronization/synchronization';\nimport { CoreSettingsGeneralPage } from '@features/settings/pages/general/general';\nimport { CoreSettingsSpaceUsagePage } from '@features/settings/pages/space-usage/space-usage';\nimport { CoreSettingsAboutPage } from '@features/settings/pages/about/about';\nimport { CoreSettingsLicensesPage } from '@features/settings/pages/licenses/licenses';\nimport { CoreSettingsDeviceInfoPage } from '@features/settings/pages/deviceinfo/deviceinfo';\nimport { CoreSettingsDevPage } from '@features/settings/pages/dev/dev';\n\nconst sectionRoutes: Routes = [\n    {\n        path: 'general',\n        component: CoreSettingsGeneralPage,\n    },\n    {\n        path: 'spaceusage',\n        component: CoreSettingsSpaceUsagePage,\n    },\n    {\n        path: 'sync',\n        component: CoreSettingsSynchronizationPage,\n    },\n    {\n        path: SHAREDFILES_PAGE_NAME,\n        loadChildren: () => import('@features/sharedfiles/sharedfiles-lazy.module').then(m => m.CoreSharedFilesLazyModule),\n    },\n    {\n        path: 'about',\n        component: CoreSettingsAboutPage,\n    },\n];\n\nconst mobileRoutes: Routes = [\n    {\n        path: '',\n        component: CoreSettingsIndexPage,\n    },\n    ...sectionRoutes,\n];\n\nconst tabletRoutes: Routes = [\n    {\n        path: '',\n        component: CoreSettingsIndexPage,\n        children: [\n            {\n                path: '',\n                pathMatch: 'full',\n                redirectTo: 'general',\n            },\n            ...sectionRoutes,\n        ],\n    },\n];\n\nconst routes: Routes = [\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n    {\n        path: 'about/deviceinfo',\n        component: CoreSettingsDeviceInfoPage,\n    },\n    {\n        path: 'about/deviceinfo/dev',\n        component: CoreSettingsDevPage,\n    },\n    {\n        path: 'about/licenses',\n        component: CoreSettingsLicensesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreSettingsIndexPage,\n        CoreSettingsSynchronizationPage,\n        CoreSettingsGeneralPage,\n        CoreSettingsSpaceUsagePage,\n        CoreSettingsAboutPage,\n        CoreSettingsLicensesPage,\n        CoreSettingsDeviceInfoPage,\n        CoreSettingsDevPage,\n    ],\n})\nexport class CoreSettingsLazyModule {}\n"],"sourceRoot":"webpack:///"}